/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ServiceItemParamNameV2 the model 'ServiceItemParamNameV2'
type ServiceItemParamNameV2 string

// List of ServiceItemParamName
const (
	ACTUAL_PICKUP_DATE ServiceItemParamNameV2 = "ActualPickupDate"
	CONTRACT_CODE ServiceItemParamNameV2 = "ContractCode"
	CONTRACT_YEAR_NAME ServiceItemParamNameV2 = "ContractYearName"
	CUBIC_FEET_BILLED ServiceItemParamNameV2 = "CubicFeetBilled"
	CUBIC_FEET_CRATING ServiceItemParamNameV2 = "CubicFeetCrating"
	DIMENSION_HEIGHT ServiceItemParamNameV2 = "DimensionHeight"
	DIMENSION_LENGTH ServiceItemParamNameV2 = "DimensionLength"
	DIMENSION_WIDTH ServiceItemParamNameV2 = "DimensionWidth"
	DISTANCE_ZIP ServiceItemParamNameV2 = "DistanceZip"
	DISTANCE_ZIP_SIT_DEST ServiceItemParamNameV2 = "DistanceZipSITDest"
	DISTANCE_ZIP_SIT_ORIGIN ServiceItemParamNameV2 = "DistanceZipSITOrigin"
	EIA_FUEL_PRICE ServiceItemParamNameV2 = "EIAFuelPrice"
	ESCALATION_COMPOUNDED ServiceItemParamNameV2 = "EscalationCompounded"
	FSC_MULTIPLIER ServiceItemParamNameV2 = "FSCMultiplier"
	FSC_PRICE_DIFFERENCE_IN_CENTS ServiceItemParamNameV2 = "FSCPriceDifferenceInCents"
	FSC_WEIGHT_BASED_DISTANCE_MULTIPLIER ServiceItemParamNameV2 = "FSCWeightBasedDistanceMultiplier"
	IS_PEAK ServiceItemParamNameV2 = "IsPeak"
	MARKET_DEST ServiceItemParamNameV2 = "MarketDest"
	MARKET_ORIGIN ServiceItemParamNameV2 = "MarketOrigin"
	MTO_AVAILABLE_TO_PRIME_AT ServiceItemParamNameV2 = "MTOAvailableToPrimeAt"
	NTS_PACKING_FACTOR ServiceItemParamNameV2 = "NTSPackingFactor"
	NUMBER_DAYS_SIT ServiceItemParamNameV2 = "NumberDaysSIT"
	PRICE_AREA_DEST ServiceItemParamNameV2 = "PriceAreaDest"
	PRICE_AREA_INTL_DEST ServiceItemParamNameV2 = "PriceAreaIntlDest"
	PRICE_AREA_INTL_ORIGIN ServiceItemParamNameV2 = "PriceAreaIntlOrigin"
	PRICE_AREA_ORIGIN ServiceItemParamNameV2 = "PriceAreaOrigin"
	PRICE_RATE_OR_FACTOR ServiceItemParamNameV2 = "PriceRateOrFactor"
	PSI_LINEHAUL_DOM ServiceItemParamNameV2 = "PSI_LinehaulDom"
	PSI_LINEHAUL_DOM_PRICE ServiceItemParamNameV2 = "PSI_LinehaulDomPrice"
	PSI_LINEHAUL_SHORT ServiceItemParamNameV2 = "PSI_LinehaulShort"
	PSI_LINEHAUL_SHORT_PRICE ServiceItemParamNameV2 = "PSI_LinehaulShortPrice"
	PSI_PRICE_DOM_DEST ServiceItemParamNameV2 = "PSI_PriceDomDest"
	PSI_PRICE_DOM_DEST_PRICE ServiceItemParamNameV2 = "PSI_PriceDomDestPrice"
	PSI_PRICE_DOM_ORIGIN ServiceItemParamNameV2 = "PSI_PriceDomOrigin"
	PSI_PRICE_DOM_ORIGIN_PRICE ServiceItemParamNameV2 = "PSI_PriceDomOriginPrice"
	PSI_SHIPPING_LINEHAUL_INTL_CO ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlCO"
	PSI_SHIPPING_LINEHAUL_INTL_CO_PRICE ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlCOPrice"
	PSI_SHIPPING_LINEHAUL_INTL_OC ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlOC"
	PSI_SHIPPING_LINEHAUL_INTL_OC_PRICE ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlOCPrice"
	PSI_SHIPPING_LINEHAUL_INTL_OO ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlOO"
	PSI_SHIPPING_LINEHAUL_INTL_OO_PRICE ServiceItemParamNameV2 = "PSI_ShippingLinehaulIntlOOPrice"
	RATE_AREA_NON_STD_DEST ServiceItemParamNameV2 = "RateAreaNonStdDest"
	RATE_AREA_NON_STD_ORIGIN ServiceItemParamNameV2 = "RateAreaNonStdOrigin"
	REFERENCE_DATE ServiceItemParamNameV2 = "ReferenceDate"
	REQUESTED_PICKUP_DATE ServiceItemParamNameV2 = "RequestedPickupDate"
	SERVICE_AREA_DEST ServiceItemParamNameV2 = "ServiceAreaDest"
	SERVICE_AREA_ORIGIN ServiceItemParamNameV2 = "ServiceAreaOrigin"
	SERVICES_SCHEDULE_DEST ServiceItemParamNameV2 = "ServicesScheduleDest"
	SERVICES_SCHEDULE_ORIGIN ServiceItemParamNameV2 = "ServicesScheduleOrigin"
	SIT_PAYMENT_REQUEST_END ServiceItemParamNameV2 = "SITPaymentRequestEnd"
	SIT_PAYMENT_REQUEST_START ServiceItemParamNameV2 = "SITPaymentRequestStart"
	SIT_SCHEDULE_DEST ServiceItemParamNameV2 = "SITScheduleDest"
	SIT_SCHEDULE_ORIGIN ServiceItemParamNameV2 = "SITScheduleOrigin"
	SIT_SERVICE_AREA_DEST ServiceItemParamNameV2 = "SITServiceAreaDest"
	SIT_SERVICE_AREA_ORIGIN ServiceItemParamNameV2 = "SITServiceAreaOrigin"
	WEIGHT_ADJUSTED ServiceItemParamNameV2 = "WeightAdjusted"
	WEIGHT_BILLED ServiceItemParamNameV2 = "WeightBilled"
	WEIGHT_ESTIMATED ServiceItemParamNameV2 = "WeightEstimated"
	WEIGHT_ORIGINAL ServiceItemParamNameV2 = "WeightOriginal"
	WEIGHT_REWEIGH ServiceItemParamNameV2 = "WeightReweigh"
	ZIP_DEST_ADDRESS ServiceItemParamNameV2 = "ZipDestAddress"
	ZIP_PICKUP_ADDRESS ServiceItemParamNameV2 = "ZipPickupAddress"
	ZIP_SIT_DEST_HHG_FINAL_ADDRESS ServiceItemParamNameV2 = "ZipSITDestHHGFinalAddress"
	ZIP_SIT_DEST_HHG_ORIGINAL_ADDRESS ServiceItemParamNameV2 = "ZipSITDestHHGOriginalAddress"
	ZIP_SIT_ORIGIN_HHG_ACTUAL_ADDRESS ServiceItemParamNameV2 = "ZipSITOriginHHGActualAddress"
	ZIP_SIT_ORIGIN_HHG_ORIGINAL_ADDRESS ServiceItemParamNameV2 = "ZipSITOriginHHGOriginalAddress"
	STANDALONE_CRATE ServiceItemParamNameV2 = "StandaloneCrate"
	STANDALONE_CRATE_CAP ServiceItemParamNameV2 = "StandaloneCrateCap"
	UNCAPPED_REQUEST_TOTAL ServiceItemParamNameV2 = "UncappedRequestTotal"
)

// All allowed values of ServiceItemParamNameV2 enum
var AllowedServiceItemParamNameV2EnumValues = []ServiceItemParamNameV2{
	"ActualPickupDate",
	"ContractCode",
	"ContractYearName",
	"CubicFeetBilled",
	"CubicFeetCrating",
	"DimensionHeight",
	"DimensionLength",
	"DimensionWidth",
	"DistanceZip",
	"DistanceZipSITDest",
	"DistanceZipSITOrigin",
	"EIAFuelPrice",
	"EscalationCompounded",
	"FSCMultiplier",
	"FSCPriceDifferenceInCents",
	"FSCWeightBasedDistanceMultiplier",
	"IsPeak",
	"MarketDest",
	"MarketOrigin",
	"MTOAvailableToPrimeAt",
	"NTSPackingFactor",
	"NumberDaysSIT",
	"PriceAreaDest",
	"PriceAreaIntlDest",
	"PriceAreaIntlOrigin",
	"PriceAreaOrigin",
	"PriceRateOrFactor",
	"PSI_LinehaulDom",
	"PSI_LinehaulDomPrice",
	"PSI_LinehaulShort",
	"PSI_LinehaulShortPrice",
	"PSI_PriceDomDest",
	"PSI_PriceDomDestPrice",
	"PSI_PriceDomOrigin",
	"PSI_PriceDomOriginPrice",
	"PSI_ShippingLinehaulIntlCO",
	"PSI_ShippingLinehaulIntlCOPrice",
	"PSI_ShippingLinehaulIntlOC",
	"PSI_ShippingLinehaulIntlOCPrice",
	"PSI_ShippingLinehaulIntlOO",
	"PSI_ShippingLinehaulIntlOOPrice",
	"RateAreaNonStdDest",
	"RateAreaNonStdOrigin",
	"ReferenceDate",
	"RequestedPickupDate",
	"ServiceAreaDest",
	"ServiceAreaOrigin",
	"ServicesScheduleDest",
	"ServicesScheduleOrigin",
	"SITPaymentRequestEnd",
	"SITPaymentRequestStart",
	"SITScheduleDest",
	"SITScheduleOrigin",
	"SITServiceAreaDest",
	"SITServiceAreaOrigin",
	"WeightAdjusted",
	"WeightBilled",
	"WeightEstimated",
	"WeightOriginal",
	"WeightReweigh",
	"ZipDestAddress",
	"ZipPickupAddress",
	"ZipSITDestHHGFinalAddress",
	"ZipSITDestHHGOriginalAddress",
	"ZipSITOriginHHGActualAddress",
	"ZipSITOriginHHGOriginalAddress",
	"StandaloneCrate",
	"StandaloneCrateCap",
	"UncappedRequestTotal",
}

func (v *ServiceItemParamNameV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceItemParamNameV2(value)
	for _, existing := range AllowedServiceItemParamNameV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceItemParamNameV2", value)
}

// NewServiceItemParamNameV2FromValue returns a pointer to a valid ServiceItemParamNameV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceItemParamNameV2FromValue(v string) (*ServiceItemParamNameV2, error) {
	ev := ServiceItemParamNameV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceItemParamNameV2: valid values are %v", v, AllowedServiceItemParamNameV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceItemParamNameV2) IsValid() bool {
	for _, existing := range AllowedServiceItemParamNameV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceItemParamName value
func (v ServiceItemParamNameV2) Ptr() *ServiceItemParamNameV2 {
	return &v
}

type NullableServiceItemParamNameV2 struct {
	value *ServiceItemParamNameV2
	isSet bool
}

func (v NullableServiceItemParamNameV2) Get() *ServiceItemParamNameV2 {
	return v.value
}

func (v *NullableServiceItemParamNameV2) Set(val *ServiceItemParamNameV2) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItemParamNameV2) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItemParamNameV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItemParamNameV2(val *ServiceItemParamNameV2) *NullableServiceItemParamNameV2 {
	return &NullableServiceItemParamNameV2{value: val, isSet: true}
}

func (v NullableServiceItemParamNameV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItemParamNameV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

