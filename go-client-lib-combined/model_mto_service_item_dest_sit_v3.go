/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MTOServiceItemDestSITV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MTOServiceItemDestSITV3{}

// MTOServiceItemDestSITV3 Describes a domestic destination SIT service item. Subtype of a MTOServiceItem.
type MTOServiceItemDestSITV3 struct {
	MTOServiceItemV3
	// Service code allowed for this model type.
	ReServiceCode string `json:"reServiceCode"`
	// Date of attempted contact by the prime corresponding to `timeMilitary1`.
	DateOfContact1 NullableString `json:"dateOfContact1,omitempty"`
	// Date of attempted contact by the prime corresponding to `timeMilitary2`.
	DateOfContact2 NullableString `json:"dateOfContact2,omitempty"`
	// Time of attempted contact corresponding to `dateOfContact1`, in military format.
	TimeMilitary1 NullableString `json:"timeMilitary1,omitempty" validate:"regexp=\\\\d{4}Z"`
	// Time of attempted contact corresponding to `dateOfContact2`, in military format.
	TimeMilitary2 NullableString `json:"timeMilitary2,omitempty" validate:"regexp=\\\\d{4}Z"`
	// First available date that Prime can deliver SIT service item.
	FirstAvailableDeliveryDate1 NullableString `json:"firstAvailableDeliveryDate1,omitempty"`
	// Second available date that Prime can deliver SIT service item.
	FirstAvailableDeliveryDate2 NullableString `json:"firstAvailableDeliveryDate2,omitempty"`
	// Entry date for the SIT
	SitEntryDate string `json:"sitEntryDate"`
	// Departure date for SIT. This is the end date of the SIT at either origin or destination. This is optional as it can be updated using the UpdateMTOServiceItemSIT modelType at a later date.
	SitDepartureDate NullableString `json:"sitDepartureDate,omitempty"`
	SitDestinationFinalAddress *AddressV3V3 `json:"sitDestinationFinalAddress,omitempty"`
	// The reason item has been placed in SIT. 
	Reason NullableString `json:"reason"`
	// A list of updates to a SIT service item address.
	SitAddressUpdates []SitAddressUpdateV3V3 `json:"sitAddressUpdates,omitempty"`
	// Date when the customer has requested delivery out of SIT.
	SitRequestedDelivery NullableString `json:"sitRequestedDelivery,omitempty"`
	// Date when the customer contacted the prime for a delivery out of SIT.
	SitCustomerContacted NullableString `json:"sitCustomerContacted,omitempty"`
}

type _MTOServiceItemDestSITV3 MTOServiceItemDestSITV3

// NewMTOServiceItemDestSITV3 instantiates a new MTOServiceItemDestSITV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMTOServiceItemDestSITV3(reServiceCode string, sitEntryDate string, reason NullableString, moveTaskOrderID string, modelType MTOServiceItemModelTypeV3V3) *MTOServiceItemDestSITV3 {
	this := MTOServiceItemDestSITV3{}
	this.MoveTaskOrderID = moveTaskOrderID
	this.ModelType = modelType
	this.ReServiceCode = reServiceCode
	this.SitEntryDate = sitEntryDate
	this.Reason = reason
	return &this
}

// NewMTOServiceItemDestSITV3WithDefaults instantiates a new MTOServiceItemDestSITV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMTOServiceItemDestSITV3WithDefaults() *MTOServiceItemDestSITV3 {
	this := MTOServiceItemDestSITV3{}
	return &this
}

// GetReServiceCode returns the ReServiceCode field value
func (o *MTOServiceItemDestSITV3) GetReServiceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReServiceCode
}

// GetReServiceCodeOk returns a tuple with the ReServiceCode field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDestSITV3) GetReServiceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReServiceCode, true
}

// SetReServiceCode sets field value
func (o *MTOServiceItemDestSITV3) SetReServiceCode(v string) {
	o.ReServiceCode = v
}

// GetDateOfContact1 returns the DateOfContact1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetDateOfContact1() string {
	if o == nil || IsNil(o.DateOfContact1.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfContact1.Get()
}

// GetDateOfContact1Ok returns a tuple with the DateOfContact1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetDateOfContact1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfContact1.Get(), o.DateOfContact1.IsSet()
}

// HasDateOfContact1 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasDateOfContact1() bool {
	if o != nil && o.DateOfContact1.IsSet() {
		return true
	}

	return false
}

// SetDateOfContact1 gets a reference to the given NullableString and assigns it to the DateOfContact1 field.
func (o *MTOServiceItemDestSITV3) SetDateOfContact1(v string) {
	o.DateOfContact1.Set(&v)
}
// SetDateOfContact1Nil sets the value for DateOfContact1 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetDateOfContact1Nil() {
	o.DateOfContact1.Set(nil)
}

// UnsetDateOfContact1 ensures that no value is present for DateOfContact1, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetDateOfContact1() {
	o.DateOfContact1.Unset()
}

// GetDateOfContact2 returns the DateOfContact2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetDateOfContact2() string {
	if o == nil || IsNil(o.DateOfContact2.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfContact2.Get()
}

// GetDateOfContact2Ok returns a tuple with the DateOfContact2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetDateOfContact2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfContact2.Get(), o.DateOfContact2.IsSet()
}

// HasDateOfContact2 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasDateOfContact2() bool {
	if o != nil && o.DateOfContact2.IsSet() {
		return true
	}

	return false
}

// SetDateOfContact2 gets a reference to the given NullableString and assigns it to the DateOfContact2 field.
func (o *MTOServiceItemDestSITV3) SetDateOfContact2(v string) {
	o.DateOfContact2.Set(&v)
}
// SetDateOfContact2Nil sets the value for DateOfContact2 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetDateOfContact2Nil() {
	o.DateOfContact2.Set(nil)
}

// UnsetDateOfContact2 ensures that no value is present for DateOfContact2, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetDateOfContact2() {
	o.DateOfContact2.Unset()
}

// GetTimeMilitary1 returns the TimeMilitary1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetTimeMilitary1() string {
	if o == nil || IsNil(o.TimeMilitary1.Get()) {
		var ret string
		return ret
	}
	return *o.TimeMilitary1.Get()
}

// GetTimeMilitary1Ok returns a tuple with the TimeMilitary1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetTimeMilitary1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeMilitary1.Get(), o.TimeMilitary1.IsSet()
}

// HasTimeMilitary1 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasTimeMilitary1() bool {
	if o != nil && o.TimeMilitary1.IsSet() {
		return true
	}

	return false
}

// SetTimeMilitary1 gets a reference to the given NullableString and assigns it to the TimeMilitary1 field.
func (o *MTOServiceItemDestSITV3) SetTimeMilitary1(v string) {
	o.TimeMilitary1.Set(&v)
}
// SetTimeMilitary1Nil sets the value for TimeMilitary1 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetTimeMilitary1Nil() {
	o.TimeMilitary1.Set(nil)
}

// UnsetTimeMilitary1 ensures that no value is present for TimeMilitary1, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetTimeMilitary1() {
	o.TimeMilitary1.Unset()
}

// GetTimeMilitary2 returns the TimeMilitary2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetTimeMilitary2() string {
	if o == nil || IsNil(o.TimeMilitary2.Get()) {
		var ret string
		return ret
	}
	return *o.TimeMilitary2.Get()
}

// GetTimeMilitary2Ok returns a tuple with the TimeMilitary2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetTimeMilitary2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeMilitary2.Get(), o.TimeMilitary2.IsSet()
}

// HasTimeMilitary2 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasTimeMilitary2() bool {
	if o != nil && o.TimeMilitary2.IsSet() {
		return true
	}

	return false
}

// SetTimeMilitary2 gets a reference to the given NullableString and assigns it to the TimeMilitary2 field.
func (o *MTOServiceItemDestSITV3) SetTimeMilitary2(v string) {
	o.TimeMilitary2.Set(&v)
}
// SetTimeMilitary2Nil sets the value for TimeMilitary2 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetTimeMilitary2Nil() {
	o.TimeMilitary2.Set(nil)
}

// UnsetTimeMilitary2 ensures that no value is present for TimeMilitary2, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetTimeMilitary2() {
	o.TimeMilitary2.Unset()
}

// GetFirstAvailableDeliveryDate1 returns the FirstAvailableDeliveryDate1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetFirstAvailableDeliveryDate1() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate1.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate1.Get()
}

// GetFirstAvailableDeliveryDate1Ok returns a tuple with the FirstAvailableDeliveryDate1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetFirstAvailableDeliveryDate1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate1.Get(), o.FirstAvailableDeliveryDate1.IsSet()
}

// HasFirstAvailableDeliveryDate1 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasFirstAvailableDeliveryDate1() bool {
	if o != nil && o.FirstAvailableDeliveryDate1.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate1 gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate1 field.
func (o *MTOServiceItemDestSITV3) SetFirstAvailableDeliveryDate1(v string) {
	o.FirstAvailableDeliveryDate1.Set(&v)
}
// SetFirstAvailableDeliveryDate1Nil sets the value for FirstAvailableDeliveryDate1 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetFirstAvailableDeliveryDate1Nil() {
	o.FirstAvailableDeliveryDate1.Set(nil)
}

// UnsetFirstAvailableDeliveryDate1 ensures that no value is present for FirstAvailableDeliveryDate1, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetFirstAvailableDeliveryDate1() {
	o.FirstAvailableDeliveryDate1.Unset()
}

// GetFirstAvailableDeliveryDate2 returns the FirstAvailableDeliveryDate2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetFirstAvailableDeliveryDate2() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate2.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate2.Get()
}

// GetFirstAvailableDeliveryDate2Ok returns a tuple with the FirstAvailableDeliveryDate2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetFirstAvailableDeliveryDate2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate2.Get(), o.FirstAvailableDeliveryDate2.IsSet()
}

// HasFirstAvailableDeliveryDate2 returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasFirstAvailableDeliveryDate2() bool {
	if o != nil && o.FirstAvailableDeliveryDate2.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate2 gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate2 field.
func (o *MTOServiceItemDestSITV3) SetFirstAvailableDeliveryDate2(v string) {
	o.FirstAvailableDeliveryDate2.Set(&v)
}
// SetFirstAvailableDeliveryDate2Nil sets the value for FirstAvailableDeliveryDate2 to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetFirstAvailableDeliveryDate2Nil() {
	o.FirstAvailableDeliveryDate2.Set(nil)
}

// UnsetFirstAvailableDeliveryDate2 ensures that no value is present for FirstAvailableDeliveryDate2, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetFirstAvailableDeliveryDate2() {
	o.FirstAvailableDeliveryDate2.Unset()
}

// GetSitEntryDate returns the SitEntryDate field value
func (o *MTOServiceItemDestSITV3) GetSitEntryDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SitEntryDate
}

// GetSitEntryDateOk returns a tuple with the SitEntryDate field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDestSITV3) GetSitEntryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SitEntryDate, true
}

// SetSitEntryDate sets field value
func (o *MTOServiceItemDestSITV3) SetSitEntryDate(v string) {
	o.SitEntryDate = v
}

// GetSitDepartureDate returns the SitDepartureDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetSitDepartureDate() string {
	if o == nil || IsNil(o.SitDepartureDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitDepartureDate.Get()
}

// GetSitDepartureDateOk returns a tuple with the SitDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetSitDepartureDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitDepartureDate.Get(), o.SitDepartureDate.IsSet()
}

// HasSitDepartureDate returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasSitDepartureDate() bool {
	if o != nil && o.SitDepartureDate.IsSet() {
		return true
	}

	return false
}

// SetSitDepartureDate gets a reference to the given NullableString and assigns it to the SitDepartureDate field.
func (o *MTOServiceItemDestSITV3) SetSitDepartureDate(v string) {
	o.SitDepartureDate.Set(&v)
}
// SetSitDepartureDateNil sets the value for SitDepartureDate to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetSitDepartureDateNil() {
	o.SitDepartureDate.Set(nil)
}

// UnsetSitDepartureDate ensures that no value is present for SitDepartureDate, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetSitDepartureDate() {
	o.SitDepartureDate.Unset()
}

// GetSitDestinationFinalAddress returns the SitDestinationFinalAddress field value if set, zero value otherwise.
func (o *MTOServiceItemDestSITV3) GetSitDestinationFinalAddress() AddressV3V3 {
	if o == nil || IsNil(o.SitDestinationFinalAddress) {
		var ret AddressV3V3
		return ret
	}
	return *o.SitDestinationFinalAddress
}

// GetSitDestinationFinalAddressOk returns a tuple with the SitDestinationFinalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDestSITV3) GetSitDestinationFinalAddressOk() (*AddressV3V3, bool) {
	if o == nil || IsNil(o.SitDestinationFinalAddress) {
		return nil, false
	}
	return o.SitDestinationFinalAddress, true
}

// HasSitDestinationFinalAddress returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasSitDestinationFinalAddress() bool {
	if o != nil && !IsNil(o.SitDestinationFinalAddress) {
		return true
	}

	return false
}

// SetSitDestinationFinalAddress gets a reference to the given AddressV3V3 and assigns it to the SitDestinationFinalAddress field.
func (o *MTOServiceItemDestSITV3) SetSitDestinationFinalAddress(v AddressV3V3) {
	o.SitDestinationFinalAddress = &v
}

// GetReason returns the Reason field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MTOServiceItemDestSITV3) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}

	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// SetReason sets field value
func (o *MTOServiceItemDestSITV3) SetReason(v string) {
	o.Reason.Set(&v)
}

// GetSitAddressUpdates returns the SitAddressUpdates field value if set, zero value otherwise.
func (o *MTOServiceItemDestSITV3) GetSitAddressUpdates() []SitAddressUpdateV3V3 {
	if o == nil || IsNil(o.SitAddressUpdates) {
		var ret []SitAddressUpdateV3V3
		return ret
	}
	return o.SitAddressUpdates
}

// GetSitAddressUpdatesOk returns a tuple with the SitAddressUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDestSITV3) GetSitAddressUpdatesOk() ([]SitAddressUpdateV3V3, bool) {
	if o == nil || IsNil(o.SitAddressUpdates) {
		return nil, false
	}
	return o.SitAddressUpdates, true
}

// HasSitAddressUpdates returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasSitAddressUpdates() bool {
	if o != nil && !IsNil(o.SitAddressUpdates) {
		return true
	}

	return false
}

// SetSitAddressUpdates gets a reference to the given []SitAddressUpdateV3V3 and assigns it to the SitAddressUpdates field.
func (o *MTOServiceItemDestSITV3) SetSitAddressUpdates(v []SitAddressUpdateV3V3) {
	o.SitAddressUpdates = v
}

// GetSitRequestedDelivery returns the SitRequestedDelivery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetSitRequestedDelivery() string {
	if o == nil || IsNil(o.SitRequestedDelivery.Get()) {
		var ret string
		return ret
	}
	return *o.SitRequestedDelivery.Get()
}

// GetSitRequestedDeliveryOk returns a tuple with the SitRequestedDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetSitRequestedDeliveryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitRequestedDelivery.Get(), o.SitRequestedDelivery.IsSet()
}

// HasSitRequestedDelivery returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasSitRequestedDelivery() bool {
	if o != nil && o.SitRequestedDelivery.IsSet() {
		return true
	}

	return false
}

// SetSitRequestedDelivery gets a reference to the given NullableString and assigns it to the SitRequestedDelivery field.
func (o *MTOServiceItemDestSITV3) SetSitRequestedDelivery(v string) {
	o.SitRequestedDelivery.Set(&v)
}
// SetSitRequestedDeliveryNil sets the value for SitRequestedDelivery to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetSitRequestedDeliveryNil() {
	o.SitRequestedDelivery.Set(nil)
}

// UnsetSitRequestedDelivery ensures that no value is present for SitRequestedDelivery, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetSitRequestedDelivery() {
	o.SitRequestedDelivery.Unset()
}

// GetSitCustomerContacted returns the SitCustomerContacted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDestSITV3) GetSitCustomerContacted() string {
	if o == nil || IsNil(o.SitCustomerContacted.Get()) {
		var ret string
		return ret
	}
	return *o.SitCustomerContacted.Get()
}

// GetSitCustomerContactedOk returns a tuple with the SitCustomerContacted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDestSITV3) GetSitCustomerContactedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitCustomerContacted.Get(), o.SitCustomerContacted.IsSet()
}

// HasSitCustomerContacted returns a boolean if a field has been set.
func (o *MTOServiceItemDestSITV3) HasSitCustomerContacted() bool {
	if o != nil && o.SitCustomerContacted.IsSet() {
		return true
	}

	return false
}

// SetSitCustomerContacted gets a reference to the given NullableString and assigns it to the SitCustomerContacted field.
func (o *MTOServiceItemDestSITV3) SetSitCustomerContacted(v string) {
	o.SitCustomerContacted.Set(&v)
}
// SetSitCustomerContactedNil sets the value for SitCustomerContacted to be an explicit nil
func (o *MTOServiceItemDestSITV3) SetSitCustomerContactedNil() {
	o.SitCustomerContacted.Set(nil)
}

// UnsetSitCustomerContacted ensures that no value is present for SitCustomerContacted, not even an explicit nil
func (o *MTOServiceItemDestSITV3) UnsetSitCustomerContacted() {
	o.SitCustomerContacted.Unset()
}

func (o MTOServiceItemDestSITV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MTOServiceItemDestSITV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMTOServiceItemV3, errMTOServiceItemV3 := json.Marshal(o.MTOServiceItemV3)
	if errMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errMTOServiceItemV3
	}
	errMTOServiceItemV3 = json.Unmarshal([]byte(serializedMTOServiceItemV3), &toSerialize)
	if errMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errMTOServiceItemV3
	}
	toSerialize["reServiceCode"] = o.ReServiceCode
	if o.DateOfContact1.IsSet() {
		toSerialize["dateOfContact1"] = o.DateOfContact1.Get()
	}
	if o.DateOfContact2.IsSet() {
		toSerialize["dateOfContact2"] = o.DateOfContact2.Get()
	}
	if o.TimeMilitary1.IsSet() {
		toSerialize["timeMilitary1"] = o.TimeMilitary1.Get()
	}
	if o.TimeMilitary2.IsSet() {
		toSerialize["timeMilitary2"] = o.TimeMilitary2.Get()
	}
	if o.FirstAvailableDeliveryDate1.IsSet() {
		toSerialize["firstAvailableDeliveryDate1"] = o.FirstAvailableDeliveryDate1.Get()
	}
	if o.FirstAvailableDeliveryDate2.IsSet() {
		toSerialize["firstAvailableDeliveryDate2"] = o.FirstAvailableDeliveryDate2.Get()
	}
	toSerialize["sitEntryDate"] = o.SitEntryDate
	if o.SitDepartureDate.IsSet() {
		toSerialize["sitDepartureDate"] = o.SitDepartureDate.Get()
	}
	if !IsNil(o.SitDestinationFinalAddress) {
		toSerialize["sitDestinationFinalAddress"] = o.SitDestinationFinalAddress
	}
	toSerialize["reason"] = o.Reason.Get()
	if !IsNil(o.SitAddressUpdates) {
		toSerialize["sitAddressUpdates"] = o.SitAddressUpdates
	}
	if o.SitRequestedDelivery.IsSet() {
		toSerialize["sitRequestedDelivery"] = o.SitRequestedDelivery.Get()
	}
	if o.SitCustomerContacted.IsSet() {
		toSerialize["sitCustomerContacted"] = o.SitCustomerContacted.Get()
	}
	return toSerialize, nil
}

func (o *MTOServiceItemDestSITV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reServiceCode",
		"sitEntryDate",
		"reason",
		"moveTaskOrderID",
		"modelType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMTOServiceItemDestSITV3 := _MTOServiceItemDestSITV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMTOServiceItemDestSITV3)

	if err != nil {
		return err
	}

	*o = MTOServiceItemDestSITV3(varMTOServiceItemDestSITV3)

	return err
}

type NullableMTOServiceItemDestSITV3 struct {
	value *MTOServiceItemDestSITV3
	isSet bool
}

func (v NullableMTOServiceItemDestSITV3) Get() *MTOServiceItemDestSITV3 {
	return v.value
}

func (v *NullableMTOServiceItemDestSITV3) Set(val *MTOServiceItemDestSITV3) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemDestSITV3) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemDestSITV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemDestSITV3(val *MTOServiceItemDestSITV3) *NullableMTOServiceItemDestSITV3 {
	return &NullableMTOServiceItemDestSITV3{value: val, isSet: true}
}

func (v NullableMTOServiceItemDestSITV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemDestSITV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


