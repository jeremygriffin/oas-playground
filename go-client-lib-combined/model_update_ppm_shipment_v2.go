/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdatePPMShipmentV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePPMShipmentV2{}

// UpdatePPMShipmentV2 The PPM specific fields of the shipment with values being changed
type UpdatePPMShipmentV2 struct {
	// Date the customer expects to begin moving from their origin. 
	ExpectedDepartureDate NullableString `json:"expectedDepartureDate,omitempty"`
	// Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.  Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`. 
	SitExpected NullableBool `json:"sitExpected,omitempty"`
	SitLocation *SITLocationTypeV2 `json:"sitLocation,omitempty"`
	// The estimated weight of the goods being put into storage.
	SitEstimatedWeight NullableInt32 `json:"sitEstimatedWeight,omitempty"`
	// The date that goods will first enter the storage location.
	SitEstimatedEntryDate NullableString `json:"sitEstimatedEntryDate,omitempty"`
	// The date that goods will exit the storage location.
	SitEstimatedDepartureDate NullableString `json:"sitEstimatedDepartureDate,omitempty"`
	// The estimated weight of the PPM shipment goods being moved.
	EstimatedWeight NullableInt32 `json:"estimatedWeight,omitempty"`
	// Indicates whether PPM shipment has pro gear for themselves or their spouse. 
	HasProGear NullableBool `json:"hasProGear,omitempty"`
	// The estimated weight of the pro-gear being moved belonging to the service member.
	ProGearWeight NullableInt32 `json:"proGearWeight,omitempty"`
	// The estimated weight of the pro-gear being moved belonging to a spouse.
	SpouseProGearWeight NullableInt32 `json:"spouseProGearWeight,omitempty"`
}

// NewUpdatePPMShipmentV2 instantiates a new UpdatePPMShipmentV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePPMShipmentV2() *UpdatePPMShipmentV2 {
	this := UpdatePPMShipmentV2{}
	return &this
}

// NewUpdatePPMShipmentV2WithDefaults instantiates a new UpdatePPMShipmentV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePPMShipmentV2WithDefaults() *UpdatePPMShipmentV2 {
	this := UpdatePPMShipmentV2{}
	return &this
}

// GetExpectedDepartureDate returns the ExpectedDepartureDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetExpectedDepartureDate() string {
	if o == nil || IsNil(o.ExpectedDepartureDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpectedDepartureDate.Get()
}

// GetExpectedDepartureDateOk returns a tuple with the ExpectedDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetExpectedDepartureDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedDepartureDate.Get(), o.ExpectedDepartureDate.IsSet()
}

// HasExpectedDepartureDate returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasExpectedDepartureDate() bool {
	if o != nil && o.ExpectedDepartureDate.IsSet() {
		return true
	}

	return false
}

// SetExpectedDepartureDate gets a reference to the given NullableString and assigns it to the ExpectedDepartureDate field.
func (o *UpdatePPMShipmentV2) SetExpectedDepartureDate(v string) {
	o.ExpectedDepartureDate.Set(&v)
}
// SetExpectedDepartureDateNil sets the value for ExpectedDepartureDate to be an explicit nil
func (o *UpdatePPMShipmentV2) SetExpectedDepartureDateNil() {
	o.ExpectedDepartureDate.Set(nil)
}

// UnsetExpectedDepartureDate ensures that no value is present for ExpectedDepartureDate, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetExpectedDepartureDate() {
	o.ExpectedDepartureDate.Unset()
}

// GetSitExpected returns the SitExpected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetSitExpected() bool {
	if o == nil || IsNil(o.SitExpected.Get()) {
		var ret bool
		return ret
	}
	return *o.SitExpected.Get()
}

// GetSitExpectedOk returns a tuple with the SitExpected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetSitExpectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitExpected.Get(), o.SitExpected.IsSet()
}

// HasSitExpected returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSitExpected() bool {
	if o != nil && o.SitExpected.IsSet() {
		return true
	}

	return false
}

// SetSitExpected gets a reference to the given NullableBool and assigns it to the SitExpected field.
func (o *UpdatePPMShipmentV2) SetSitExpected(v bool) {
	o.SitExpected.Set(&v)
}
// SetSitExpectedNil sets the value for SitExpected to be an explicit nil
func (o *UpdatePPMShipmentV2) SetSitExpectedNil() {
	o.SitExpected.Set(nil)
}

// UnsetSitExpected ensures that no value is present for SitExpected, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetSitExpected() {
	o.SitExpected.Unset()
}

// GetSitLocation returns the SitLocation field value if set, zero value otherwise.
func (o *UpdatePPMShipmentV2) GetSitLocation() SITLocationTypeV2 {
	if o == nil || IsNil(o.SitLocation) {
		var ret SITLocationTypeV2
		return ret
	}
	return *o.SitLocation
}

// GetSitLocationOk returns a tuple with the SitLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePPMShipmentV2) GetSitLocationOk() (*SITLocationTypeV2, bool) {
	if o == nil || IsNil(o.SitLocation) {
		return nil, false
	}
	return o.SitLocation, true
}

// HasSitLocation returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSitLocation() bool {
	if o != nil && !IsNil(o.SitLocation) {
		return true
	}

	return false
}

// SetSitLocation gets a reference to the given SITLocationTypeV2 and assigns it to the SitLocation field.
func (o *UpdatePPMShipmentV2) SetSitLocation(v SITLocationTypeV2) {
	o.SitLocation = &v
}

// GetSitEstimatedWeight returns the SitEstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetSitEstimatedWeight() int32 {
	if o == nil || IsNil(o.SitEstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.SitEstimatedWeight.Get()
}

// GetSitEstimatedWeightOk returns a tuple with the SitEstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetSitEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedWeight.Get(), o.SitEstimatedWeight.IsSet()
}

// HasSitEstimatedWeight returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSitEstimatedWeight() bool {
	if o != nil && o.SitEstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the SitEstimatedWeight field.
func (o *UpdatePPMShipmentV2) SetSitEstimatedWeight(v int32) {
	o.SitEstimatedWeight.Set(&v)
}
// SetSitEstimatedWeightNil sets the value for SitEstimatedWeight to be an explicit nil
func (o *UpdatePPMShipmentV2) SetSitEstimatedWeightNil() {
	o.SitEstimatedWeight.Set(nil)
}

// UnsetSitEstimatedWeight ensures that no value is present for SitEstimatedWeight, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetSitEstimatedWeight() {
	o.SitEstimatedWeight.Unset()
}

// GetSitEstimatedEntryDate returns the SitEstimatedEntryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetSitEstimatedEntryDate() string {
	if o == nil || IsNil(o.SitEstimatedEntryDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitEstimatedEntryDate.Get()
}

// GetSitEstimatedEntryDateOk returns a tuple with the SitEstimatedEntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetSitEstimatedEntryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedEntryDate.Get(), o.SitEstimatedEntryDate.IsSet()
}

// HasSitEstimatedEntryDate returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSitEstimatedEntryDate() bool {
	if o != nil && o.SitEstimatedEntryDate.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedEntryDate gets a reference to the given NullableString and assigns it to the SitEstimatedEntryDate field.
func (o *UpdatePPMShipmentV2) SetSitEstimatedEntryDate(v string) {
	o.SitEstimatedEntryDate.Set(&v)
}
// SetSitEstimatedEntryDateNil sets the value for SitEstimatedEntryDate to be an explicit nil
func (o *UpdatePPMShipmentV2) SetSitEstimatedEntryDateNil() {
	o.SitEstimatedEntryDate.Set(nil)
}

// UnsetSitEstimatedEntryDate ensures that no value is present for SitEstimatedEntryDate, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetSitEstimatedEntryDate() {
	o.SitEstimatedEntryDate.Unset()
}

// GetSitEstimatedDepartureDate returns the SitEstimatedDepartureDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetSitEstimatedDepartureDate() string {
	if o == nil || IsNil(o.SitEstimatedDepartureDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitEstimatedDepartureDate.Get()
}

// GetSitEstimatedDepartureDateOk returns a tuple with the SitEstimatedDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetSitEstimatedDepartureDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedDepartureDate.Get(), o.SitEstimatedDepartureDate.IsSet()
}

// HasSitEstimatedDepartureDate returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSitEstimatedDepartureDate() bool {
	if o != nil && o.SitEstimatedDepartureDate.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedDepartureDate gets a reference to the given NullableString and assigns it to the SitEstimatedDepartureDate field.
func (o *UpdatePPMShipmentV2) SetSitEstimatedDepartureDate(v string) {
	o.SitEstimatedDepartureDate.Set(&v)
}
// SetSitEstimatedDepartureDateNil sets the value for SitEstimatedDepartureDate to be an explicit nil
func (o *UpdatePPMShipmentV2) SetSitEstimatedDepartureDateNil() {
	o.SitEstimatedDepartureDate.Set(nil)
}

// UnsetSitEstimatedDepartureDate ensures that no value is present for SitEstimatedDepartureDate, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetSitEstimatedDepartureDate() {
	o.SitEstimatedDepartureDate.Unset()
}

// GetEstimatedWeight returns the EstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetEstimatedWeight() int32 {
	if o == nil || IsNil(o.EstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.EstimatedWeight.Get()
}

// GetEstimatedWeightOk returns a tuple with the EstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedWeight.Get(), o.EstimatedWeight.IsSet()
}

// HasEstimatedWeight returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasEstimatedWeight() bool {
	if o != nil && o.EstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the EstimatedWeight field.
func (o *UpdatePPMShipmentV2) SetEstimatedWeight(v int32) {
	o.EstimatedWeight.Set(&v)
}
// SetEstimatedWeightNil sets the value for EstimatedWeight to be an explicit nil
func (o *UpdatePPMShipmentV2) SetEstimatedWeightNil() {
	o.EstimatedWeight.Set(nil)
}

// UnsetEstimatedWeight ensures that no value is present for EstimatedWeight, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetEstimatedWeight() {
	o.EstimatedWeight.Unset()
}

// GetHasProGear returns the HasProGear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetHasProGear() bool {
	if o == nil || IsNil(o.HasProGear.Get()) {
		var ret bool
		return ret
	}
	return *o.HasProGear.Get()
}

// GetHasProGearOk returns a tuple with the HasProGear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetHasProGearOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasProGear.Get(), o.HasProGear.IsSet()
}

// HasHasProGear returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasHasProGear() bool {
	if o != nil && o.HasProGear.IsSet() {
		return true
	}

	return false
}

// SetHasProGear gets a reference to the given NullableBool and assigns it to the HasProGear field.
func (o *UpdatePPMShipmentV2) SetHasProGear(v bool) {
	o.HasProGear.Set(&v)
}
// SetHasProGearNil sets the value for HasProGear to be an explicit nil
func (o *UpdatePPMShipmentV2) SetHasProGearNil() {
	o.HasProGear.Set(nil)
}

// UnsetHasProGear ensures that no value is present for HasProGear, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetHasProGear() {
	o.HasProGear.Unset()
}

// GetProGearWeight returns the ProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetProGearWeight() int32 {
	if o == nil || IsNil(o.ProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ProGearWeight.Get()
}

// GetProGearWeightOk returns a tuple with the ProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProGearWeight.Get(), o.ProGearWeight.IsSet()
}

// HasProGearWeight returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasProGearWeight() bool {
	if o != nil && o.ProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetProGearWeight gets a reference to the given NullableInt32 and assigns it to the ProGearWeight field.
func (o *UpdatePPMShipmentV2) SetProGearWeight(v int32) {
	o.ProGearWeight.Set(&v)
}
// SetProGearWeightNil sets the value for ProGearWeight to be an explicit nil
func (o *UpdatePPMShipmentV2) SetProGearWeightNil() {
	o.ProGearWeight.Set(nil)
}

// UnsetProGearWeight ensures that no value is present for ProGearWeight, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetProGearWeight() {
	o.ProGearWeight.Unset()
}

// GetSpouseProGearWeight returns the SpouseProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePPMShipmentV2) GetSpouseProGearWeight() int32 {
	if o == nil || IsNil(o.SpouseProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.SpouseProGearWeight.Get()
}

// GetSpouseProGearWeightOk returns a tuple with the SpouseProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePPMShipmentV2) GetSpouseProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpouseProGearWeight.Get(), o.SpouseProGearWeight.IsSet()
}

// HasSpouseProGearWeight returns a boolean if a field has been set.
func (o *UpdatePPMShipmentV2) HasSpouseProGearWeight() bool {
	if o != nil && o.SpouseProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetSpouseProGearWeight gets a reference to the given NullableInt32 and assigns it to the SpouseProGearWeight field.
func (o *UpdatePPMShipmentV2) SetSpouseProGearWeight(v int32) {
	o.SpouseProGearWeight.Set(&v)
}
// SetSpouseProGearWeightNil sets the value for SpouseProGearWeight to be an explicit nil
func (o *UpdatePPMShipmentV2) SetSpouseProGearWeightNil() {
	o.SpouseProGearWeight.Set(nil)
}

// UnsetSpouseProGearWeight ensures that no value is present for SpouseProGearWeight, not even an explicit nil
func (o *UpdatePPMShipmentV2) UnsetSpouseProGearWeight() {
	o.SpouseProGearWeight.Unset()
}

func (o UpdatePPMShipmentV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePPMShipmentV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpectedDepartureDate.IsSet() {
		toSerialize["expectedDepartureDate"] = o.ExpectedDepartureDate.Get()
	}
	if o.SitExpected.IsSet() {
		toSerialize["sitExpected"] = o.SitExpected.Get()
	}
	if !IsNil(o.SitLocation) {
		toSerialize["sitLocation"] = o.SitLocation
	}
	if o.SitEstimatedWeight.IsSet() {
		toSerialize["sitEstimatedWeight"] = o.SitEstimatedWeight.Get()
	}
	if o.SitEstimatedEntryDate.IsSet() {
		toSerialize["sitEstimatedEntryDate"] = o.SitEstimatedEntryDate.Get()
	}
	if o.SitEstimatedDepartureDate.IsSet() {
		toSerialize["sitEstimatedDepartureDate"] = o.SitEstimatedDepartureDate.Get()
	}
	if o.EstimatedWeight.IsSet() {
		toSerialize["estimatedWeight"] = o.EstimatedWeight.Get()
	}
	if o.HasProGear.IsSet() {
		toSerialize["hasProGear"] = o.HasProGear.Get()
	}
	if o.ProGearWeight.IsSet() {
		toSerialize["proGearWeight"] = o.ProGearWeight.Get()
	}
	if o.SpouseProGearWeight.IsSet() {
		toSerialize["spouseProGearWeight"] = o.SpouseProGearWeight.Get()
	}
	return toSerialize, nil
}

type NullableUpdatePPMShipmentV2 struct {
	value *UpdatePPMShipmentV2
	isSet bool
}

func (v NullableUpdatePPMShipmentV2) Get() *UpdatePPMShipmentV2 {
	return v.value
}

func (v *NullableUpdatePPMShipmentV2) Set(val *UpdatePPMShipmentV2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePPMShipmentV2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePPMShipmentV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePPMShipmentV2(val *UpdatePPMShipmentV2) *NullableUpdatePPMShipmentV2 {
	return &NullableUpdatePPMShipmentV2{value: val, isSet: true}
}

func (v NullableUpdatePPMShipmentV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePPMShipmentV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


