/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MTOServiceItemDomesticCratingV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MTOServiceItemDomesticCratingV3{}

// MTOServiceItemDomesticCratingV3 Describes a domestic crating/uncrating service item subtype of a MTOServiceItem.
type MTOServiceItemDomesticCratingV3 struct {
	MTOServiceItemV3
	// A unique code for the service item. Indicates if the service is for crating (DCRT) or uncrating (DUCRT).
	ReServiceCode string `json:"reServiceCode"`
	// The dimensions of the item being crated.
	Item map[string]interface{} `json:"item"`
	// The dimensions for the crate the item will be shipped in.
	Crate map[string]interface{} `json:"crate"`
	// A description of the item being crated.
	Description string `json:"description"`
	// The contractor's explanation for why an item needed to be crated or uncrated. Used by the TOO while deciding to approve or reject the service item. 
	Reason NullableString `json:"reason,omitempty"`
	StandaloneCrate NullableBool `json:"standaloneCrate,omitempty"`
}

type _MTOServiceItemDomesticCratingV3 MTOServiceItemDomesticCratingV3

// NewMTOServiceItemDomesticCratingV3 instantiates a new MTOServiceItemDomesticCratingV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMTOServiceItemDomesticCratingV3(reServiceCode string, item map[string]interface{}, crate map[string]interface{}, description string, moveTaskOrderID string, modelType MTOServiceItemModelTypeV3V3) *MTOServiceItemDomesticCratingV3 {
	this := MTOServiceItemDomesticCratingV3{}
	this.MoveTaskOrderID = moveTaskOrderID
	this.ModelType = modelType
	this.ReServiceCode = reServiceCode
	this.Item = item
	this.Crate = crate
	this.Description = description
	return &this
}

// NewMTOServiceItemDomesticCratingV3WithDefaults instantiates a new MTOServiceItemDomesticCratingV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMTOServiceItemDomesticCratingV3WithDefaults() *MTOServiceItemDomesticCratingV3 {
	this := MTOServiceItemDomesticCratingV3{}
	return &this
}

// GetReServiceCode returns the ReServiceCode field value
func (o *MTOServiceItemDomesticCratingV3) GetReServiceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReServiceCode
}

// GetReServiceCodeOk returns a tuple with the ReServiceCode field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDomesticCratingV3) GetReServiceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReServiceCode, true
}

// SetReServiceCode sets field value
func (o *MTOServiceItemDomesticCratingV3) SetReServiceCode(v string) {
	o.ReServiceCode = v
}

// GetItem returns the Item field value
func (o *MTOServiceItemDomesticCratingV3) GetItem() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDomesticCratingV3) GetItemOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Item, true
}

// SetItem sets field value
func (o *MTOServiceItemDomesticCratingV3) SetItem(v map[string]interface{}) {
	o.Item = v
}

// GetCrate returns the Crate field value
func (o *MTOServiceItemDomesticCratingV3) GetCrate() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Crate
}

// GetCrateOk returns a tuple with the Crate field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDomesticCratingV3) GetCrateOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Crate, true
}

// SetCrate sets field value
func (o *MTOServiceItemDomesticCratingV3) SetCrate(v map[string]interface{}) {
	o.Crate = v
}

// GetDescription returns the Description field value
func (o *MTOServiceItemDomesticCratingV3) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemDomesticCratingV3) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MTOServiceItemDomesticCratingV3) SetDescription(v string) {
	o.Description = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDomesticCratingV3) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDomesticCratingV3) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *MTOServiceItemDomesticCratingV3) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *MTOServiceItemDomesticCratingV3) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *MTOServiceItemDomesticCratingV3) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *MTOServiceItemDomesticCratingV3) UnsetReason() {
	o.Reason.Unset()
}

// GetStandaloneCrate returns the StandaloneCrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemDomesticCratingV3) GetStandaloneCrate() bool {
	if o == nil || IsNil(o.StandaloneCrate.Get()) {
		var ret bool
		return ret
	}
	return *o.StandaloneCrate.Get()
}

// GetStandaloneCrateOk returns a tuple with the StandaloneCrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemDomesticCratingV3) GetStandaloneCrateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StandaloneCrate.Get(), o.StandaloneCrate.IsSet()
}

// HasStandaloneCrate returns a boolean if a field has been set.
func (o *MTOServiceItemDomesticCratingV3) HasStandaloneCrate() bool {
	if o != nil && o.StandaloneCrate.IsSet() {
		return true
	}

	return false
}

// SetStandaloneCrate gets a reference to the given NullableBool and assigns it to the StandaloneCrate field.
func (o *MTOServiceItemDomesticCratingV3) SetStandaloneCrate(v bool) {
	o.StandaloneCrate.Set(&v)
}
// SetStandaloneCrateNil sets the value for StandaloneCrate to be an explicit nil
func (o *MTOServiceItemDomesticCratingV3) SetStandaloneCrateNil() {
	o.StandaloneCrate.Set(nil)
}

// UnsetStandaloneCrate ensures that no value is present for StandaloneCrate, not even an explicit nil
func (o *MTOServiceItemDomesticCratingV3) UnsetStandaloneCrate() {
	o.StandaloneCrate.Unset()
}

func (o MTOServiceItemDomesticCratingV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MTOServiceItemDomesticCratingV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMTOServiceItemV3, errMTOServiceItemV3 := json.Marshal(o.MTOServiceItemV3)
	if errMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errMTOServiceItemV3
	}
	errMTOServiceItemV3 = json.Unmarshal([]byte(serializedMTOServiceItemV3), &toSerialize)
	if errMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errMTOServiceItemV3
	}
	toSerialize["reServiceCode"] = o.ReServiceCode
	toSerialize["item"] = o.Item
	toSerialize["crate"] = o.Crate
	toSerialize["description"] = o.Description
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.StandaloneCrate.IsSet() {
		toSerialize["standaloneCrate"] = o.StandaloneCrate.Get()
	}
	return toSerialize, nil
}

func (o *MTOServiceItemDomesticCratingV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reServiceCode",
		"item",
		"crate",
		"description",
		"moveTaskOrderID",
		"modelType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMTOServiceItemDomesticCratingV3 := _MTOServiceItemDomesticCratingV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMTOServiceItemDomesticCratingV3)

	if err != nil {
		return err
	}

	*o = MTOServiceItemDomesticCratingV3(varMTOServiceItemDomesticCratingV3)

	return err
}

type NullableMTOServiceItemDomesticCratingV3 struct {
	value *MTOServiceItemDomesticCratingV3
	isSet bool
}

func (v NullableMTOServiceItemDomesticCratingV3) Get() *MTOServiceItemDomesticCratingV3 {
	return v.value
}

func (v *NullableMTOServiceItemDomesticCratingV3) Set(val *MTOServiceItemDomesticCratingV3) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemDomesticCratingV3) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemDomesticCratingV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemDomesticCratingV3(val *MTOServiceItemDomesticCratingV3) *NullableMTOServiceItemDomesticCratingV3 {
	return &NullableMTOServiceItemDomesticCratingV3{value: val, isSet: true}
}

func (v NullableMTOServiceItemDomesticCratingV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemDomesticCratingV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


