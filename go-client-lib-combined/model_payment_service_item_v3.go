/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentServiceItemV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServiceItemV3{}

// PaymentServiceItemV3 struct for PaymentServiceItemV3
type PaymentServiceItemV3 struct {
	Id *string `json:"id,omitempty"`
	PaymentRequestID *string `json:"paymentRequestID,omitempty"`
	MtoServiceItemID *string `json:"mtoServiceItemID,omitempty"`
	Status *PaymentServiceItemStatusV3V3 `json:"status,omitempty"`
	PriceCents NullableInt32 `json:"priceCents,omitempty"`
	RejectionReason NullableString `json:"rejectionReason,omitempty"`
	ReferenceID map[string]interface{} `json:"referenceID,omitempty"`
	PaymentServiceItemParams []PaymentServiceItemParamV3V3 `json:"paymentServiceItemParams,omitempty"`
	ETag *string `json:"eTag,omitempty"`
}

// NewPaymentServiceItemV3 instantiates a new PaymentServiceItemV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceItemV3() *PaymentServiceItemV3 {
	this := PaymentServiceItemV3{}
	return &this
}

// NewPaymentServiceItemV3WithDefaults instantiates a new PaymentServiceItemV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceItemV3WithDefaults() *PaymentServiceItemV3 {
	this := PaymentServiceItemV3{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentServiceItemV3) SetId(v string) {
	o.Id = &v
}

// GetPaymentRequestID returns the PaymentRequestID field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetPaymentRequestID() string {
	if o == nil || IsNil(o.PaymentRequestID) {
		var ret string
		return ret
	}
	return *o.PaymentRequestID
}

// GetPaymentRequestIDOk returns a tuple with the PaymentRequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetPaymentRequestIDOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentRequestID) {
		return nil, false
	}
	return o.PaymentRequestID, true
}

// HasPaymentRequestID returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasPaymentRequestID() bool {
	if o != nil && !IsNil(o.PaymentRequestID) {
		return true
	}

	return false
}

// SetPaymentRequestID gets a reference to the given string and assigns it to the PaymentRequestID field.
func (o *PaymentServiceItemV3) SetPaymentRequestID(v string) {
	o.PaymentRequestID = &v
}

// GetMtoServiceItemID returns the MtoServiceItemID field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetMtoServiceItemID() string {
	if o == nil || IsNil(o.MtoServiceItemID) {
		var ret string
		return ret
	}
	return *o.MtoServiceItemID
}

// GetMtoServiceItemIDOk returns a tuple with the MtoServiceItemID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetMtoServiceItemIDOk() (*string, bool) {
	if o == nil || IsNil(o.MtoServiceItemID) {
		return nil, false
	}
	return o.MtoServiceItemID, true
}

// HasMtoServiceItemID returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasMtoServiceItemID() bool {
	if o != nil && !IsNil(o.MtoServiceItemID) {
		return true
	}

	return false
}

// SetMtoServiceItemID gets a reference to the given string and assigns it to the MtoServiceItemID field.
func (o *PaymentServiceItemV3) SetMtoServiceItemID(v string) {
	o.MtoServiceItemID = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetStatus() PaymentServiceItemStatusV3V3 {
	if o == nil || IsNil(o.Status) {
		var ret PaymentServiceItemStatusV3V3
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetStatusOk() (*PaymentServiceItemStatusV3V3, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentServiceItemStatusV3V3 and assigns it to the Status field.
func (o *PaymentServiceItemV3) SetStatus(v PaymentServiceItemStatusV3V3) {
	o.Status = &v
}

// GetPriceCents returns the PriceCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentServiceItemV3) GetPriceCents() int32 {
	if o == nil || IsNil(o.PriceCents.Get()) {
		var ret int32
		return ret
	}
	return *o.PriceCents.Get()
}

// GetPriceCentsOk returns a tuple with the PriceCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentServiceItemV3) GetPriceCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceCents.Get(), o.PriceCents.IsSet()
}

// HasPriceCents returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasPriceCents() bool {
	if o != nil && o.PriceCents.IsSet() {
		return true
	}

	return false
}

// SetPriceCents gets a reference to the given NullableInt32 and assigns it to the PriceCents field.
func (o *PaymentServiceItemV3) SetPriceCents(v int32) {
	o.PriceCents.Set(&v)
}
// SetPriceCentsNil sets the value for PriceCents to be an explicit nil
func (o *PaymentServiceItemV3) SetPriceCentsNil() {
	o.PriceCents.Set(nil)
}

// UnsetPriceCents ensures that no value is present for PriceCents, not even an explicit nil
func (o *PaymentServiceItemV3) UnsetPriceCents() {
	o.PriceCents.Unset()
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentServiceItemV3) GetRejectionReason() string {
	if o == nil || IsNil(o.RejectionReason.Get()) {
		var ret string
		return ret
	}
	return *o.RejectionReason.Get()
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentServiceItemV3) GetRejectionReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectionReason.Get(), o.RejectionReason.IsSet()
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasRejectionReason() bool {
	if o != nil && o.RejectionReason.IsSet() {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given NullableString and assigns it to the RejectionReason field.
func (o *PaymentServiceItemV3) SetRejectionReason(v string) {
	o.RejectionReason.Set(&v)
}
// SetRejectionReasonNil sets the value for RejectionReason to be an explicit nil
func (o *PaymentServiceItemV3) SetRejectionReasonNil() {
	o.RejectionReason.Set(nil)
}

// UnsetRejectionReason ensures that no value is present for RejectionReason, not even an explicit nil
func (o *PaymentServiceItemV3) UnsetRejectionReason() {
	o.RejectionReason.Unset()
}

// GetReferenceID returns the ReferenceID field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetReferenceID() map[string]interface{} {
	if o == nil || IsNil(o.ReferenceID) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReferenceID
}

// GetReferenceIDOk returns a tuple with the ReferenceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetReferenceIDOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReferenceID) {
		return map[string]interface{}{}, false
	}
	return o.ReferenceID, true
}

// HasReferenceID returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasReferenceID() bool {
	if o != nil && !IsNil(o.ReferenceID) {
		return true
	}

	return false
}

// SetReferenceID gets a reference to the given map[string]interface{} and assigns it to the ReferenceID field.
func (o *PaymentServiceItemV3) SetReferenceID(v map[string]interface{}) {
	o.ReferenceID = v
}

// GetPaymentServiceItemParams returns the PaymentServiceItemParams field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetPaymentServiceItemParams() []PaymentServiceItemParamV3V3 {
	if o == nil || IsNil(o.PaymentServiceItemParams) {
		var ret []PaymentServiceItemParamV3V3
		return ret
	}
	return o.PaymentServiceItemParams
}

// GetPaymentServiceItemParamsOk returns a tuple with the PaymentServiceItemParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetPaymentServiceItemParamsOk() ([]PaymentServiceItemParamV3V3, bool) {
	if o == nil || IsNil(o.PaymentServiceItemParams) {
		return nil, false
	}
	return o.PaymentServiceItemParams, true
}

// HasPaymentServiceItemParams returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasPaymentServiceItemParams() bool {
	if o != nil && !IsNil(o.PaymentServiceItemParams) {
		return true
	}

	return false
}

// SetPaymentServiceItemParams gets a reference to the given []PaymentServiceItemParamV3V3 and assigns it to the PaymentServiceItemParams field.
func (o *PaymentServiceItemV3) SetPaymentServiceItemParams(v []PaymentServiceItemParamV3V3) {
	o.PaymentServiceItemParams = v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *PaymentServiceItemV3) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemV3) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *PaymentServiceItemV3) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *PaymentServiceItemV3) SetETag(v string) {
	o.ETag = &v
}

func (o PaymentServiceItemV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServiceItemV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PaymentRequestID) {
		toSerialize["paymentRequestID"] = o.PaymentRequestID
	}
	if !IsNil(o.MtoServiceItemID) {
		toSerialize["mtoServiceItemID"] = o.MtoServiceItemID
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.PriceCents.IsSet() {
		toSerialize["priceCents"] = o.PriceCents.Get()
	}
	if o.RejectionReason.IsSet() {
		toSerialize["rejectionReason"] = o.RejectionReason.Get()
	}
	if !IsNil(o.ReferenceID) {
		toSerialize["referenceID"] = o.ReferenceID
	}
	if !IsNil(o.PaymentServiceItemParams) {
		toSerialize["paymentServiceItemParams"] = o.PaymentServiceItemParams
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	return toSerialize, nil
}

type NullablePaymentServiceItemV3 struct {
	value *PaymentServiceItemV3
	isSet bool
}

func (v NullablePaymentServiceItemV3) Get() *PaymentServiceItemV3 {
	return v.value
}

func (v *NullablePaymentServiceItemV3) Set(val *PaymentServiceItemV3) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceItemV3) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceItemV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceItemV3(val *PaymentServiceItemV3) *NullablePaymentServiceItemV3 {
	return &NullablePaymentServiceItemV3{value: val, isSet: true}
}

func (v NullablePaymentServiceItemV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceItemV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


