/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderV2{}

// OrderV2 struct for OrderV2
type OrderV2 struct {
	Id *string `json:"id,omitempty"`
	Customer *CustomerV2V2 `json:"customer,omitempty"`
	CustomerID *string `json:"customerID,omitempty"`
	Entitlement *EntitlementsV2V2 `json:"entitlement,omitempty"`
	DestinationDutyLocation *DutyLocationV2V2 `json:"destinationDutyLocation,omitempty"`
	OriginDutyLocation *DutyLocationV2V2 `json:"originDutyLocation,omitempty"`
	OriginDutyLocationGBLOC *string `json:"originDutyLocationGBLOC,omitempty"`
	Rank string `json:"rank"`
	ReportByDate *string `json:"reportByDate,omitempty"`
	OrdersType *OrdersTypeV2V2 `json:"ordersType,omitempty"`
	OrderNumber string `json:"orderNumber"`
	LinesOfAccounting string `json:"linesOfAccounting"`
	SupplyAndServicesCostEstimate *string `json:"supplyAndServicesCostEstimate,omitempty"`
	PackingAndShippingInstructions *string `json:"packingAndShippingInstructions,omitempty"`
	MethodOfPayment *string `json:"methodOfPayment,omitempty"`
	Naics *string `json:"naics,omitempty"`
	ETag *string `json:"eTag,omitempty"`
}

type _OrderV2 OrderV2

// NewOrderV2 instantiates a new OrderV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderV2(rank string, orderNumber string, linesOfAccounting string) *OrderV2 {
	this := OrderV2{}
	this.Rank = rank
	this.OrderNumber = orderNumber
	this.LinesOfAccounting = linesOfAccounting
	return &this
}

// NewOrderV2WithDefaults instantiates a new OrderV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderV2WithDefaults() *OrderV2 {
	this := OrderV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderV2) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderV2) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrderV2) SetId(v string) {
	o.Id = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *OrderV2) GetCustomer() CustomerV2V2 {
	if o == nil || IsNil(o.Customer) {
		var ret CustomerV2V2
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetCustomerOk() (*CustomerV2V2, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *OrderV2) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CustomerV2V2 and assigns it to the Customer field.
func (o *OrderV2) SetCustomer(v CustomerV2V2) {
	o.Customer = &v
}

// GetCustomerID returns the CustomerID field value if set, zero value otherwise.
func (o *OrderV2) GetCustomerID() string {
	if o == nil || IsNil(o.CustomerID) {
		var ret string
		return ret
	}
	return *o.CustomerID
}

// GetCustomerIDOk returns a tuple with the CustomerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetCustomerIDOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerID) {
		return nil, false
	}
	return o.CustomerID, true
}

// HasCustomerID returns a boolean if a field has been set.
func (o *OrderV2) HasCustomerID() bool {
	if o != nil && !IsNil(o.CustomerID) {
		return true
	}

	return false
}

// SetCustomerID gets a reference to the given string and assigns it to the CustomerID field.
func (o *OrderV2) SetCustomerID(v string) {
	o.CustomerID = &v
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *OrderV2) GetEntitlement() EntitlementsV2V2 {
	if o == nil || IsNil(o.Entitlement) {
		var ret EntitlementsV2V2
		return ret
	}
	return *o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetEntitlementOk() (*EntitlementsV2V2, bool) {
	if o == nil || IsNil(o.Entitlement) {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *OrderV2) HasEntitlement() bool {
	if o != nil && !IsNil(o.Entitlement) {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given EntitlementsV2V2 and assigns it to the Entitlement field.
func (o *OrderV2) SetEntitlement(v EntitlementsV2V2) {
	o.Entitlement = &v
}

// GetDestinationDutyLocation returns the DestinationDutyLocation field value if set, zero value otherwise.
func (o *OrderV2) GetDestinationDutyLocation() DutyLocationV2V2 {
	if o == nil || IsNil(o.DestinationDutyLocation) {
		var ret DutyLocationV2V2
		return ret
	}
	return *o.DestinationDutyLocation
}

// GetDestinationDutyLocationOk returns a tuple with the DestinationDutyLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetDestinationDutyLocationOk() (*DutyLocationV2V2, bool) {
	if o == nil || IsNil(o.DestinationDutyLocation) {
		return nil, false
	}
	return o.DestinationDutyLocation, true
}

// HasDestinationDutyLocation returns a boolean if a field has been set.
func (o *OrderV2) HasDestinationDutyLocation() bool {
	if o != nil && !IsNil(o.DestinationDutyLocation) {
		return true
	}

	return false
}

// SetDestinationDutyLocation gets a reference to the given DutyLocationV2V2 and assigns it to the DestinationDutyLocation field.
func (o *OrderV2) SetDestinationDutyLocation(v DutyLocationV2V2) {
	o.DestinationDutyLocation = &v
}

// GetOriginDutyLocation returns the OriginDutyLocation field value if set, zero value otherwise.
func (o *OrderV2) GetOriginDutyLocation() DutyLocationV2V2 {
	if o == nil || IsNil(o.OriginDutyLocation) {
		var ret DutyLocationV2V2
		return ret
	}
	return *o.OriginDutyLocation
}

// GetOriginDutyLocationOk returns a tuple with the OriginDutyLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetOriginDutyLocationOk() (*DutyLocationV2V2, bool) {
	if o == nil || IsNil(o.OriginDutyLocation) {
		return nil, false
	}
	return o.OriginDutyLocation, true
}

// HasOriginDutyLocation returns a boolean if a field has been set.
func (o *OrderV2) HasOriginDutyLocation() bool {
	if o != nil && !IsNil(o.OriginDutyLocation) {
		return true
	}

	return false
}

// SetOriginDutyLocation gets a reference to the given DutyLocationV2V2 and assigns it to the OriginDutyLocation field.
func (o *OrderV2) SetOriginDutyLocation(v DutyLocationV2V2) {
	o.OriginDutyLocation = &v
}

// GetOriginDutyLocationGBLOC returns the OriginDutyLocationGBLOC field value if set, zero value otherwise.
func (o *OrderV2) GetOriginDutyLocationGBLOC() string {
	if o == nil || IsNil(o.OriginDutyLocationGBLOC) {
		var ret string
		return ret
	}
	return *o.OriginDutyLocationGBLOC
}

// GetOriginDutyLocationGBLOCOk returns a tuple with the OriginDutyLocationGBLOC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetOriginDutyLocationGBLOCOk() (*string, bool) {
	if o == nil || IsNil(o.OriginDutyLocationGBLOC) {
		return nil, false
	}
	return o.OriginDutyLocationGBLOC, true
}

// HasOriginDutyLocationGBLOC returns a boolean if a field has been set.
func (o *OrderV2) HasOriginDutyLocationGBLOC() bool {
	if o != nil && !IsNil(o.OriginDutyLocationGBLOC) {
		return true
	}

	return false
}

// SetOriginDutyLocationGBLOC gets a reference to the given string and assigns it to the OriginDutyLocationGBLOC field.
func (o *OrderV2) SetOriginDutyLocationGBLOC(v string) {
	o.OriginDutyLocationGBLOC = &v
}

// GetRank returns the Rank field value
func (o *OrderV2) GetRank() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rank
}

// GetRankOk returns a tuple with the Rank field value
// and a boolean to check if the value has been set.
func (o *OrderV2) GetRankOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rank, true
}

// SetRank sets field value
func (o *OrderV2) SetRank(v string) {
	o.Rank = v
}

// GetReportByDate returns the ReportByDate field value if set, zero value otherwise.
func (o *OrderV2) GetReportByDate() string {
	if o == nil || IsNil(o.ReportByDate) {
		var ret string
		return ret
	}
	return *o.ReportByDate
}

// GetReportByDateOk returns a tuple with the ReportByDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetReportByDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReportByDate) {
		return nil, false
	}
	return o.ReportByDate, true
}

// HasReportByDate returns a boolean if a field has been set.
func (o *OrderV2) HasReportByDate() bool {
	if o != nil && !IsNil(o.ReportByDate) {
		return true
	}

	return false
}

// SetReportByDate gets a reference to the given string and assigns it to the ReportByDate field.
func (o *OrderV2) SetReportByDate(v string) {
	o.ReportByDate = &v
}

// GetOrdersType returns the OrdersType field value if set, zero value otherwise.
func (o *OrderV2) GetOrdersType() OrdersTypeV2V2 {
	if o == nil || IsNil(o.OrdersType) {
		var ret OrdersTypeV2V2
		return ret
	}
	return *o.OrdersType
}

// GetOrdersTypeOk returns a tuple with the OrdersType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetOrdersTypeOk() (*OrdersTypeV2V2, bool) {
	if o == nil || IsNil(o.OrdersType) {
		return nil, false
	}
	return o.OrdersType, true
}

// HasOrdersType returns a boolean if a field has been set.
func (o *OrderV2) HasOrdersType() bool {
	if o != nil && !IsNil(o.OrdersType) {
		return true
	}

	return false
}

// SetOrdersType gets a reference to the given OrdersTypeV2V2 and assigns it to the OrdersType field.
func (o *OrderV2) SetOrdersType(v OrdersTypeV2V2) {
	o.OrdersType = &v
}

// GetOrderNumber returns the OrderNumber field value
func (o *OrderV2) GetOrderNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value
// and a boolean to check if the value has been set.
func (o *OrderV2) GetOrderNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderNumber, true
}

// SetOrderNumber sets field value
func (o *OrderV2) SetOrderNumber(v string) {
	o.OrderNumber = v
}

// GetLinesOfAccounting returns the LinesOfAccounting field value
func (o *OrderV2) GetLinesOfAccounting() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinesOfAccounting
}

// GetLinesOfAccountingOk returns a tuple with the LinesOfAccounting field value
// and a boolean to check if the value has been set.
func (o *OrderV2) GetLinesOfAccountingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinesOfAccounting, true
}

// SetLinesOfAccounting sets field value
func (o *OrderV2) SetLinesOfAccounting(v string) {
	o.LinesOfAccounting = v
}

// GetSupplyAndServicesCostEstimate returns the SupplyAndServicesCostEstimate field value if set, zero value otherwise.
func (o *OrderV2) GetSupplyAndServicesCostEstimate() string {
	if o == nil || IsNil(o.SupplyAndServicesCostEstimate) {
		var ret string
		return ret
	}
	return *o.SupplyAndServicesCostEstimate
}

// GetSupplyAndServicesCostEstimateOk returns a tuple with the SupplyAndServicesCostEstimate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetSupplyAndServicesCostEstimateOk() (*string, bool) {
	if o == nil || IsNil(o.SupplyAndServicesCostEstimate) {
		return nil, false
	}
	return o.SupplyAndServicesCostEstimate, true
}

// HasSupplyAndServicesCostEstimate returns a boolean if a field has been set.
func (o *OrderV2) HasSupplyAndServicesCostEstimate() bool {
	if o != nil && !IsNil(o.SupplyAndServicesCostEstimate) {
		return true
	}

	return false
}

// SetSupplyAndServicesCostEstimate gets a reference to the given string and assigns it to the SupplyAndServicesCostEstimate field.
func (o *OrderV2) SetSupplyAndServicesCostEstimate(v string) {
	o.SupplyAndServicesCostEstimate = &v
}

// GetPackingAndShippingInstructions returns the PackingAndShippingInstructions field value if set, zero value otherwise.
func (o *OrderV2) GetPackingAndShippingInstructions() string {
	if o == nil || IsNil(o.PackingAndShippingInstructions) {
		var ret string
		return ret
	}
	return *o.PackingAndShippingInstructions
}

// GetPackingAndShippingInstructionsOk returns a tuple with the PackingAndShippingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetPackingAndShippingInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.PackingAndShippingInstructions) {
		return nil, false
	}
	return o.PackingAndShippingInstructions, true
}

// HasPackingAndShippingInstructions returns a boolean if a field has been set.
func (o *OrderV2) HasPackingAndShippingInstructions() bool {
	if o != nil && !IsNil(o.PackingAndShippingInstructions) {
		return true
	}

	return false
}

// SetPackingAndShippingInstructions gets a reference to the given string and assigns it to the PackingAndShippingInstructions field.
func (o *OrderV2) SetPackingAndShippingInstructions(v string) {
	o.PackingAndShippingInstructions = &v
}

// GetMethodOfPayment returns the MethodOfPayment field value if set, zero value otherwise.
func (o *OrderV2) GetMethodOfPayment() string {
	if o == nil || IsNil(o.MethodOfPayment) {
		var ret string
		return ret
	}
	return *o.MethodOfPayment
}

// GetMethodOfPaymentOk returns a tuple with the MethodOfPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetMethodOfPaymentOk() (*string, bool) {
	if o == nil || IsNil(o.MethodOfPayment) {
		return nil, false
	}
	return o.MethodOfPayment, true
}

// HasMethodOfPayment returns a boolean if a field has been set.
func (o *OrderV2) HasMethodOfPayment() bool {
	if o != nil && !IsNil(o.MethodOfPayment) {
		return true
	}

	return false
}

// SetMethodOfPayment gets a reference to the given string and assigns it to the MethodOfPayment field.
func (o *OrderV2) SetMethodOfPayment(v string) {
	o.MethodOfPayment = &v
}

// GetNaics returns the Naics field value if set, zero value otherwise.
func (o *OrderV2) GetNaics() string {
	if o == nil || IsNil(o.Naics) {
		var ret string
		return ret
	}
	return *o.Naics
}

// GetNaicsOk returns a tuple with the Naics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetNaicsOk() (*string, bool) {
	if o == nil || IsNil(o.Naics) {
		return nil, false
	}
	return o.Naics, true
}

// HasNaics returns a boolean if a field has been set.
func (o *OrderV2) HasNaics() bool {
	if o != nil && !IsNil(o.Naics) {
		return true
	}

	return false
}

// SetNaics gets a reference to the given string and assigns it to the Naics field.
func (o *OrderV2) SetNaics(v string) {
	o.Naics = &v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *OrderV2) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderV2) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *OrderV2) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *OrderV2) SetETag(v string) {
	o.ETag = &v
}

func (o OrderV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.CustomerID) {
		toSerialize["customerID"] = o.CustomerID
	}
	if !IsNil(o.Entitlement) {
		toSerialize["entitlement"] = o.Entitlement
	}
	if !IsNil(o.DestinationDutyLocation) {
		toSerialize["destinationDutyLocation"] = o.DestinationDutyLocation
	}
	if !IsNil(o.OriginDutyLocation) {
		toSerialize["originDutyLocation"] = o.OriginDutyLocation
	}
	if !IsNil(o.OriginDutyLocationGBLOC) {
		toSerialize["originDutyLocationGBLOC"] = o.OriginDutyLocationGBLOC
	}
	toSerialize["rank"] = o.Rank
	if !IsNil(o.ReportByDate) {
		toSerialize["reportByDate"] = o.ReportByDate
	}
	if !IsNil(o.OrdersType) {
		toSerialize["ordersType"] = o.OrdersType
	}
	toSerialize["orderNumber"] = o.OrderNumber
	toSerialize["linesOfAccounting"] = o.LinesOfAccounting
	if !IsNil(o.SupplyAndServicesCostEstimate) {
		toSerialize["supplyAndServicesCostEstimate"] = o.SupplyAndServicesCostEstimate
	}
	if !IsNil(o.PackingAndShippingInstructions) {
		toSerialize["packingAndShippingInstructions"] = o.PackingAndShippingInstructions
	}
	if !IsNil(o.MethodOfPayment) {
		toSerialize["methodOfPayment"] = o.MethodOfPayment
	}
	if !IsNil(o.Naics) {
		toSerialize["naics"] = o.Naics
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	return toSerialize, nil
}

func (o *OrderV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rank",
		"orderNumber",
		"linesOfAccounting",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderV2 := _OrderV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderV2)

	if err != nil {
		return err
	}

	*o = OrderV2(varOrderV2)

	return err
}

type NullableOrderV2 struct {
	value *OrderV2
	isSet bool
}

func (v NullableOrderV2) Get() *OrderV2 {
	return v.value
}

func (v *NullableOrderV2) Set(val *OrderV2) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderV2) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderV2(val *OrderV2) *NullableOrderV2 {
	return &NullableOrderV2{value: val, isSet: true}
}

func (v NullableOrderV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


