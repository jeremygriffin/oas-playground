/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ShipmentAddressUpdateStatus the model 'ShipmentAddressUpdateStatus'
type ShipmentAddressUpdateStatus string

// List of ShipmentAddressUpdateStatus
const (
	REQUESTED ShipmentAddressUpdateStatus = "REQUESTED"
	REJECTED ShipmentAddressUpdateStatus = "REJECTED"
	APPROVED ShipmentAddressUpdateStatus = "APPROVED"
)

// All allowed values of ShipmentAddressUpdateStatus enum
var AllowedShipmentAddressUpdateStatusEnumValues = []ShipmentAddressUpdateStatus{
	"REQUESTED",
	"REJECTED",
	"APPROVED",
}

func (v *ShipmentAddressUpdateStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ShipmentAddressUpdateStatus(value)
	for _, existing := range AllowedShipmentAddressUpdateStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ShipmentAddressUpdateStatus", value)
}

// NewShipmentAddressUpdateStatusFromValue returns a pointer to a valid ShipmentAddressUpdateStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewShipmentAddressUpdateStatusFromValue(v string) (*ShipmentAddressUpdateStatus, error) {
	ev := ShipmentAddressUpdateStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ShipmentAddressUpdateStatus: valid values are %v", v, AllowedShipmentAddressUpdateStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ShipmentAddressUpdateStatus) IsValid() bool {
	for _, existing := range AllowedShipmentAddressUpdateStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ShipmentAddressUpdateStatus value
func (v ShipmentAddressUpdateStatus) Ptr() *ShipmentAddressUpdateStatus {
	return &v
}

type NullableShipmentAddressUpdateStatus struct {
	value *ShipmentAddressUpdateStatus
	isSet bool
}

func (v NullableShipmentAddressUpdateStatus) Get() *ShipmentAddressUpdateStatus {
	return v.value
}

func (v *NullableShipmentAddressUpdateStatus) Set(val *ShipmentAddressUpdateStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentAddressUpdateStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentAddressUpdateStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentAddressUpdateStatus(val *ShipmentAddressUpdateStatus) *NullableShipmentAddressUpdateStatus {
	return &NullableShipmentAddressUpdateStatus{value: val, isSet: true}
}

func (v NullableShipmentAddressUpdateStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentAddressUpdateStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

