/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSITAddressUpdateRequestV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSITAddressUpdateRequestV3{}

// CreateSITAddressUpdateRequestV3 CreateSITAddressUpdateRequest contains the fields required for the prime to create a SIT address update request.
type CreateSITAddressUpdateRequestV3 struct {
	NewAddress *AddressV3V3 `json:"newAddress,omitempty"`
	ContractorRemarks string `json:"contractorRemarks"`
	MtoServiceItemID *string `json:"mtoServiceItemID,omitempty"`
}

type _CreateSITAddressUpdateRequestV3 CreateSITAddressUpdateRequestV3

// NewCreateSITAddressUpdateRequestV3 instantiates a new CreateSITAddressUpdateRequestV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSITAddressUpdateRequestV3(contractorRemarks string) *CreateSITAddressUpdateRequestV3 {
	this := CreateSITAddressUpdateRequestV3{}
	this.ContractorRemarks = contractorRemarks
	return &this
}

// NewCreateSITAddressUpdateRequestV3WithDefaults instantiates a new CreateSITAddressUpdateRequestV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSITAddressUpdateRequestV3WithDefaults() *CreateSITAddressUpdateRequestV3 {
	this := CreateSITAddressUpdateRequestV3{}
	return &this
}

// GetNewAddress returns the NewAddress field value if set, zero value otherwise.
func (o *CreateSITAddressUpdateRequestV3) GetNewAddress() AddressV3V3 {
	if o == nil || IsNil(o.NewAddress) {
		var ret AddressV3V3
		return ret
	}
	return *o.NewAddress
}

// GetNewAddressOk returns a tuple with the NewAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSITAddressUpdateRequestV3) GetNewAddressOk() (*AddressV3V3, bool) {
	if o == nil || IsNil(o.NewAddress) {
		return nil, false
	}
	return o.NewAddress, true
}

// HasNewAddress returns a boolean if a field has been set.
func (o *CreateSITAddressUpdateRequestV3) HasNewAddress() bool {
	if o != nil && !IsNil(o.NewAddress) {
		return true
	}

	return false
}

// SetNewAddress gets a reference to the given AddressV3V3 and assigns it to the NewAddress field.
func (o *CreateSITAddressUpdateRequestV3) SetNewAddress(v AddressV3V3) {
	o.NewAddress = &v
}

// GetContractorRemarks returns the ContractorRemarks field value
func (o *CreateSITAddressUpdateRequestV3) GetContractorRemarks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractorRemarks
}

// GetContractorRemarksOk returns a tuple with the ContractorRemarks field value
// and a boolean to check if the value has been set.
func (o *CreateSITAddressUpdateRequestV3) GetContractorRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractorRemarks, true
}

// SetContractorRemarks sets field value
func (o *CreateSITAddressUpdateRequestV3) SetContractorRemarks(v string) {
	o.ContractorRemarks = v
}

// GetMtoServiceItemID returns the MtoServiceItemID field value if set, zero value otherwise.
func (o *CreateSITAddressUpdateRequestV3) GetMtoServiceItemID() string {
	if o == nil || IsNil(o.MtoServiceItemID) {
		var ret string
		return ret
	}
	return *o.MtoServiceItemID
}

// GetMtoServiceItemIDOk returns a tuple with the MtoServiceItemID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSITAddressUpdateRequestV3) GetMtoServiceItemIDOk() (*string, bool) {
	if o == nil || IsNil(o.MtoServiceItemID) {
		return nil, false
	}
	return o.MtoServiceItemID, true
}

// HasMtoServiceItemID returns a boolean if a field has been set.
func (o *CreateSITAddressUpdateRequestV3) HasMtoServiceItemID() bool {
	if o != nil && !IsNil(o.MtoServiceItemID) {
		return true
	}

	return false
}

// SetMtoServiceItemID gets a reference to the given string and assigns it to the MtoServiceItemID field.
func (o *CreateSITAddressUpdateRequestV3) SetMtoServiceItemID(v string) {
	o.MtoServiceItemID = &v
}

func (o CreateSITAddressUpdateRequestV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSITAddressUpdateRequestV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewAddress) {
		toSerialize["newAddress"] = o.NewAddress
	}
	toSerialize["contractorRemarks"] = o.ContractorRemarks
	if !IsNil(o.MtoServiceItemID) {
		toSerialize["mtoServiceItemID"] = o.MtoServiceItemID
	}
	return toSerialize, nil
}

func (o *CreateSITAddressUpdateRequestV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contractorRemarks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSITAddressUpdateRequestV3 := _CreateSITAddressUpdateRequestV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSITAddressUpdateRequestV3)

	if err != nil {
		return err
	}

	*o = CreateSITAddressUpdateRequestV3(varCreateSITAddressUpdateRequestV3)

	return err
}

type NullableCreateSITAddressUpdateRequestV3 struct {
	value *CreateSITAddressUpdateRequestV3
	isSet bool
}

func (v NullableCreateSITAddressUpdateRequestV3) Get() *CreateSITAddressUpdateRequestV3 {
	return v.value
}

func (v *NullableCreateSITAddressUpdateRequestV3) Set(val *CreateSITAddressUpdateRequestV3) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSITAddressUpdateRequestV3) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSITAddressUpdateRequestV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSITAddressUpdateRequestV3(val *CreateSITAddressUpdateRequestV3) *NullableCreateSITAddressUpdateRequestV3 {
	return &NullableCreateSITAddressUpdateRequestV3{value: val, isSet: true}
}

func (v NullableCreateSITAddressUpdateRequestV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSITAddressUpdateRequestV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


