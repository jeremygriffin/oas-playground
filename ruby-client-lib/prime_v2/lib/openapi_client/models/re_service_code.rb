=begin
#MilMove Prime V2 API

#The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

The version of the OpenAPI document: 0.0.1
Contact: milmove-developers@caci.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0-SNAPSHOT

=end

require 'date'
require 'time'

module OpenapiClient
  class ReServiceCode
    CS = "CS".freeze
    DBHF = "DBHF".freeze
    DBTF = "DBTF".freeze
    DCRT = "DCRT".freeze
    DDASIT = "DDASIT".freeze
    DDDSIT = "DDDSIT".freeze
    DDFSIT = "DDFSIT".freeze
    DDP = "DDP".freeze
    DDSHUT = "DDSHUT".freeze
    DLH = "DLH".freeze
    DMHF = "DMHF".freeze
    DNPK = "DNPK".freeze
    DOASIT = "DOASIT".freeze
    DOFSIT = "DOFSIT".freeze
    DOP = "DOP".freeze
    DOPSIT = "DOPSIT".freeze
    DOSHUT = "DOSHUT".freeze
    DPK = "DPK".freeze
    DSH = "DSH".freeze
    DUCRT = "DUCRT".freeze
    DUPK = "DUPK".freeze
    FSC = "FSC".freeze
    IBHF = "IBHF".freeze
    IBTF = "IBTF".freeze
    ICOLH = "ICOLH".freeze
    ICOUB = "ICOUB".freeze
    ICRT = "ICRT".freeze
    ICRTSA = "ICRTSA".freeze
    IDASIT = "IDASIT".freeze
    IDDSIT = "IDDSIT".freeze
    IDFSIT = "IDFSIT".freeze
    IDSHUT = "IDSHUT".freeze
    IHPK = "IHPK".freeze
    IHUPK = "IHUPK".freeze
    INPK = "INPK".freeze
    IOASIT = "IOASIT".freeze
    IOCLH = "IOCLH".freeze
    IOCUB = "IOCUB".freeze
    IOFSIT = "IOFSIT".freeze
    IOOLH = "IOOLH".freeze
    IOOUB = "IOOUB".freeze
    IOPSIT = "IOPSIT".freeze
    IOSHUT = "IOSHUT".freeze
    IUBPK = "IUBPK".freeze
    IUBUPK = "IUBUPK".freeze
    IUCRT = "IUCRT".freeze
    MS = "MS".freeze
    NSTH = "NSTH".freeze
    NSTUB = "NSTUB".freeze

    def self.all_vars
      @all_vars ||= [CS, DBHF, DBTF, DCRT, DDASIT, DDDSIT, DDFSIT, DDP, DDSHUT, DLH, DMHF, DNPK, DOASIT, DOFSIT, DOP, DOPSIT, DOSHUT, DPK, DSH, DUCRT, DUPK, FSC, IBHF, IBTF, ICOLH, ICOUB, ICRT, ICRTSA, IDASIT, IDDSIT, IDFSIT, IDSHUT, IHPK, IHUPK, INPK, IOASIT, IOCLH, IOCUB, IOFSIT, IOOLH, IOOUB, IOPSIT, IOSHUT, IUBPK, IUBUPK, IUCRT, MS, NSTH, NSTUB].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if ReServiceCode.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #ReServiceCode"
    end
  end
end
