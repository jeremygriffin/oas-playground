/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOShipmentTypeV2 The type of shipment.   * `HHG` = Household goods move   * `HHG_INTO_NTS_DOMESTIC` = HHG into Non-temporary storage (NTS)   * `HHG_OUTOF_NTS_DOMESTIC` = HHG out of Non-temporary storage (NTS Release)   * `PPM` = Personally Procured Move also known as Do It Yourself (DITY) 
type MTOShipmentTypeV2 string

// List of MTOShipmentType
const (
	BOAT_HAUL_AWAY MTOShipmentTypeV2 = "BOAT_HAUL_AWAY"
	BOAT_TOW_AWAY MTOShipmentTypeV2 = "BOAT_TOW_AWAY"
	HHG MTOShipmentTypeV2 = "HHG"
	HHG_INTO_NTS_DOMESTIC MTOShipmentTypeV2 = "HHG_INTO_NTS_DOMESTIC"
	HHG_OUTOF_NTS_DOMESTIC MTOShipmentTypeV2 = "HHG_OUTOF_NTS_DOMESTIC"
	INTERNATIONAL_HHG MTOShipmentTypeV2 = "INTERNATIONAL_HHG"
	INTERNATIONAL_UB MTOShipmentTypeV2 = "INTERNATIONAL_UB"
	MOTORHOME MTOShipmentTypeV2 = "MOTORHOME"
	PPM MTOShipmentTypeV2 = "PPM"
)

// All allowed values of MTOShipmentTypeV2 enum
var AllowedMTOShipmentTypeV2EnumValues = []MTOShipmentTypeV2{
	"BOAT_HAUL_AWAY",
	"BOAT_TOW_AWAY",
	"HHG",
	"HHG_INTO_NTS_DOMESTIC",
	"HHG_OUTOF_NTS_DOMESTIC",
	"INTERNATIONAL_HHG",
	"INTERNATIONAL_UB",
	"MOTORHOME",
	"PPM",
}

func (v *MTOShipmentTypeV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOShipmentTypeV2(value)
	for _, existing := range AllowedMTOShipmentTypeV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOShipmentTypeV2", value)
}

// NewMTOShipmentTypeV2FromValue returns a pointer to a valid MTOShipmentTypeV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOShipmentTypeV2FromValue(v string) (*MTOShipmentTypeV2, error) {
	ev := MTOShipmentTypeV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOShipmentTypeV2: valid values are %v", v, AllowedMTOShipmentTypeV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOShipmentTypeV2) IsValid() bool {
	for _, existing := range AllowedMTOShipmentTypeV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOShipmentType value
func (v MTOShipmentTypeV2) Ptr() *MTOShipmentTypeV2 {
	return &v
}

type NullableMTOShipmentTypeV2 struct {
	value *MTOShipmentTypeV2
	isSet bool
}

func (v NullableMTOShipmentTypeV2) Get() *MTOShipmentTypeV2 {
	return v.value
}

func (v *NullableMTOShipmentTypeV2) Set(val *MTOShipmentTypeV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOShipmentTypeV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOShipmentTypeV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOShipmentTypeV2(val *MTOShipmentTypeV2) *NullableMTOShipmentTypeV2 {
	return &NullableMTOShipmentTypeV2{value: val, isSet: true}
}

func (v NullableMTOShipmentTypeV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOShipmentTypeV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

