/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateMTOServiceItemSITV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMTOServiceItemSITV3{}

// UpdateMTOServiceItemSITV3 Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating and existing service item. 
type UpdateMTOServiceItemSITV3 struct {
	UpdateMTOServiceItemV3
	// Service code allowed for this model type.
	ReServiceCode *string `json:"reServiceCode,omitempty"`
	// Departure date for SIT. This is the end date of the SIT at either origin or destination.
	SitDepartureDate *string `json:"sitDepartureDate,omitempty"`
	SitDestinationFinalAddress *AddressV3V3 `json:"sitDestinationFinalAddress,omitempty"`
	// Date of attempted contact by the prime corresponding to 'timeMilitary1'.
	DateOfContact1 NullableString `json:"dateOfContact1,omitempty"`
	// Time of attempted contact by the prime corresponding to 'dateOfContact1', in military format.
	TimeMilitary1 NullableString `json:"timeMilitary1,omitempty" validate:"regexp=\\\\d{4}Z"`
	// First available date that Prime can deliver SIT service item.
	FirstAvailableDeliveryDate1 NullableString `json:"firstAvailableDeliveryDate1,omitempty"`
	// Date of attempted contact by the prime corresponding to 'timeMilitary2'.
	DateOfContact2 NullableString `json:"dateOfContact2,omitempty"`
	// Time of attempted contact by the prime corresponding to 'dateOfContact2', in military format.
	TimeMilitary2 NullableString `json:"timeMilitary2,omitempty" validate:"regexp=\\\\d{4}Z"`
	// Second available date that Prime can deliver SIT service item.
	FirstAvailableDeliveryDate2 NullableString `json:"firstAvailableDeliveryDate2,omitempty"`
	// Date when the customer has requested delivery out of SIT.
	SitRequestedDelivery NullableString `json:"sitRequestedDelivery,omitempty"`
	// Date when the customer contacted the prime for a delivery out of SIT.
	SitCustomerContacted NullableString `json:"sitCustomerContacted,omitempty"`
	// Reason for updating service item.
	UpdateReason NullableString `json:"updateReason,omitempty"`
	SitPostalCode NullableString `json:"sitPostalCode,omitempty" validate:"regexp=^(\\\\d{5}([\\\\-]\\\\d{4})?)$"`
	// Entry date for the SIT.
	SitEntryDate NullableString `json:"sitEntryDate,omitempty"`
	// Indicates if \"Approvals Requested\" status is being requested.
	RequestApprovalsRequestedStatus NullableBool `json:"requestApprovalsRequestedStatus,omitempty"`
}

type _UpdateMTOServiceItemSITV3 UpdateMTOServiceItemSITV3

// NewUpdateMTOServiceItemSITV3 instantiates a new UpdateMTOServiceItemSITV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMTOServiceItemSITV3(modelType UpdateMTOServiceItemModelTypeV3V3) *UpdateMTOServiceItemSITV3 {
	this := UpdateMTOServiceItemSITV3{}
	this.ModelType = modelType
	return &this
}

// NewUpdateMTOServiceItemSITV3WithDefaults instantiates a new UpdateMTOServiceItemSITV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMTOServiceItemSITV3WithDefaults() *UpdateMTOServiceItemSITV3 {
	this := UpdateMTOServiceItemSITV3{}
	return &this
}

// GetReServiceCode returns the ReServiceCode field value if set, zero value otherwise.
func (o *UpdateMTOServiceItemSITV3) GetReServiceCode() string {
	if o == nil || IsNil(o.ReServiceCode) {
		var ret string
		return ret
	}
	return *o.ReServiceCode
}

// GetReServiceCodeOk returns a tuple with the ReServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOServiceItemSITV3) GetReServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReServiceCode) {
		return nil, false
	}
	return o.ReServiceCode, true
}

// HasReServiceCode returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasReServiceCode() bool {
	if o != nil && !IsNil(o.ReServiceCode) {
		return true
	}

	return false
}

// SetReServiceCode gets a reference to the given string and assigns it to the ReServiceCode field.
func (o *UpdateMTOServiceItemSITV3) SetReServiceCode(v string) {
	o.ReServiceCode = &v
}

// GetSitDepartureDate returns the SitDepartureDate field value if set, zero value otherwise.
func (o *UpdateMTOServiceItemSITV3) GetSitDepartureDate() string {
	if o == nil || IsNil(o.SitDepartureDate) {
		var ret string
		return ret
	}
	return *o.SitDepartureDate
}

// GetSitDepartureDateOk returns a tuple with the SitDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOServiceItemSITV3) GetSitDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.SitDepartureDate) {
		return nil, false
	}
	return o.SitDepartureDate, true
}

// HasSitDepartureDate returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitDepartureDate() bool {
	if o != nil && !IsNil(o.SitDepartureDate) {
		return true
	}

	return false
}

// SetSitDepartureDate gets a reference to the given string and assigns it to the SitDepartureDate field.
func (o *UpdateMTOServiceItemSITV3) SetSitDepartureDate(v string) {
	o.SitDepartureDate = &v
}

// GetSitDestinationFinalAddress returns the SitDestinationFinalAddress field value if set, zero value otherwise.
func (o *UpdateMTOServiceItemSITV3) GetSitDestinationFinalAddress() AddressV3V3 {
	if o == nil || IsNil(o.SitDestinationFinalAddress) {
		var ret AddressV3V3
		return ret
	}
	return *o.SitDestinationFinalAddress
}

// GetSitDestinationFinalAddressOk returns a tuple with the SitDestinationFinalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOServiceItemSITV3) GetSitDestinationFinalAddressOk() (*AddressV3V3, bool) {
	if o == nil || IsNil(o.SitDestinationFinalAddress) {
		return nil, false
	}
	return o.SitDestinationFinalAddress, true
}

// HasSitDestinationFinalAddress returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitDestinationFinalAddress() bool {
	if o != nil && !IsNil(o.SitDestinationFinalAddress) {
		return true
	}

	return false
}

// SetSitDestinationFinalAddress gets a reference to the given AddressV3V3 and assigns it to the SitDestinationFinalAddress field.
func (o *UpdateMTOServiceItemSITV3) SetSitDestinationFinalAddress(v AddressV3V3) {
	o.SitDestinationFinalAddress = &v
}

// GetDateOfContact1 returns the DateOfContact1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetDateOfContact1() string {
	if o == nil || IsNil(o.DateOfContact1.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfContact1.Get()
}

// GetDateOfContact1Ok returns a tuple with the DateOfContact1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetDateOfContact1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfContact1.Get(), o.DateOfContact1.IsSet()
}

// HasDateOfContact1 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasDateOfContact1() bool {
	if o != nil && o.DateOfContact1.IsSet() {
		return true
	}

	return false
}

// SetDateOfContact1 gets a reference to the given NullableString and assigns it to the DateOfContact1 field.
func (o *UpdateMTOServiceItemSITV3) SetDateOfContact1(v string) {
	o.DateOfContact1.Set(&v)
}
// SetDateOfContact1Nil sets the value for DateOfContact1 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetDateOfContact1Nil() {
	o.DateOfContact1.Set(nil)
}

// UnsetDateOfContact1 ensures that no value is present for DateOfContact1, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetDateOfContact1() {
	o.DateOfContact1.Unset()
}

// GetTimeMilitary1 returns the TimeMilitary1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetTimeMilitary1() string {
	if o == nil || IsNil(o.TimeMilitary1.Get()) {
		var ret string
		return ret
	}
	return *o.TimeMilitary1.Get()
}

// GetTimeMilitary1Ok returns a tuple with the TimeMilitary1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetTimeMilitary1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeMilitary1.Get(), o.TimeMilitary1.IsSet()
}

// HasTimeMilitary1 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasTimeMilitary1() bool {
	if o != nil && o.TimeMilitary1.IsSet() {
		return true
	}

	return false
}

// SetTimeMilitary1 gets a reference to the given NullableString and assigns it to the TimeMilitary1 field.
func (o *UpdateMTOServiceItemSITV3) SetTimeMilitary1(v string) {
	o.TimeMilitary1.Set(&v)
}
// SetTimeMilitary1Nil sets the value for TimeMilitary1 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetTimeMilitary1Nil() {
	o.TimeMilitary1.Set(nil)
}

// UnsetTimeMilitary1 ensures that no value is present for TimeMilitary1, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetTimeMilitary1() {
	o.TimeMilitary1.Unset()
}

// GetFirstAvailableDeliveryDate1 returns the FirstAvailableDeliveryDate1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetFirstAvailableDeliveryDate1() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate1.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate1.Get()
}

// GetFirstAvailableDeliveryDate1Ok returns a tuple with the FirstAvailableDeliveryDate1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetFirstAvailableDeliveryDate1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate1.Get(), o.FirstAvailableDeliveryDate1.IsSet()
}

// HasFirstAvailableDeliveryDate1 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasFirstAvailableDeliveryDate1() bool {
	if o != nil && o.FirstAvailableDeliveryDate1.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate1 gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate1 field.
func (o *UpdateMTOServiceItemSITV3) SetFirstAvailableDeliveryDate1(v string) {
	o.FirstAvailableDeliveryDate1.Set(&v)
}
// SetFirstAvailableDeliveryDate1Nil sets the value for FirstAvailableDeliveryDate1 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetFirstAvailableDeliveryDate1Nil() {
	o.FirstAvailableDeliveryDate1.Set(nil)
}

// UnsetFirstAvailableDeliveryDate1 ensures that no value is present for FirstAvailableDeliveryDate1, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetFirstAvailableDeliveryDate1() {
	o.FirstAvailableDeliveryDate1.Unset()
}

// GetDateOfContact2 returns the DateOfContact2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetDateOfContact2() string {
	if o == nil || IsNil(o.DateOfContact2.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfContact2.Get()
}

// GetDateOfContact2Ok returns a tuple with the DateOfContact2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetDateOfContact2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfContact2.Get(), o.DateOfContact2.IsSet()
}

// HasDateOfContact2 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasDateOfContact2() bool {
	if o != nil && o.DateOfContact2.IsSet() {
		return true
	}

	return false
}

// SetDateOfContact2 gets a reference to the given NullableString and assigns it to the DateOfContact2 field.
func (o *UpdateMTOServiceItemSITV3) SetDateOfContact2(v string) {
	o.DateOfContact2.Set(&v)
}
// SetDateOfContact2Nil sets the value for DateOfContact2 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetDateOfContact2Nil() {
	o.DateOfContact2.Set(nil)
}

// UnsetDateOfContact2 ensures that no value is present for DateOfContact2, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetDateOfContact2() {
	o.DateOfContact2.Unset()
}

// GetTimeMilitary2 returns the TimeMilitary2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetTimeMilitary2() string {
	if o == nil || IsNil(o.TimeMilitary2.Get()) {
		var ret string
		return ret
	}
	return *o.TimeMilitary2.Get()
}

// GetTimeMilitary2Ok returns a tuple with the TimeMilitary2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetTimeMilitary2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeMilitary2.Get(), o.TimeMilitary2.IsSet()
}

// HasTimeMilitary2 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasTimeMilitary2() bool {
	if o != nil && o.TimeMilitary2.IsSet() {
		return true
	}

	return false
}

// SetTimeMilitary2 gets a reference to the given NullableString and assigns it to the TimeMilitary2 field.
func (o *UpdateMTOServiceItemSITV3) SetTimeMilitary2(v string) {
	o.TimeMilitary2.Set(&v)
}
// SetTimeMilitary2Nil sets the value for TimeMilitary2 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetTimeMilitary2Nil() {
	o.TimeMilitary2.Set(nil)
}

// UnsetTimeMilitary2 ensures that no value is present for TimeMilitary2, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetTimeMilitary2() {
	o.TimeMilitary2.Unset()
}

// GetFirstAvailableDeliveryDate2 returns the FirstAvailableDeliveryDate2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetFirstAvailableDeliveryDate2() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate2.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate2.Get()
}

// GetFirstAvailableDeliveryDate2Ok returns a tuple with the FirstAvailableDeliveryDate2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetFirstAvailableDeliveryDate2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate2.Get(), o.FirstAvailableDeliveryDate2.IsSet()
}

// HasFirstAvailableDeliveryDate2 returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasFirstAvailableDeliveryDate2() bool {
	if o != nil && o.FirstAvailableDeliveryDate2.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate2 gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate2 field.
func (o *UpdateMTOServiceItemSITV3) SetFirstAvailableDeliveryDate2(v string) {
	o.FirstAvailableDeliveryDate2.Set(&v)
}
// SetFirstAvailableDeliveryDate2Nil sets the value for FirstAvailableDeliveryDate2 to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetFirstAvailableDeliveryDate2Nil() {
	o.FirstAvailableDeliveryDate2.Set(nil)
}

// UnsetFirstAvailableDeliveryDate2 ensures that no value is present for FirstAvailableDeliveryDate2, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetFirstAvailableDeliveryDate2() {
	o.FirstAvailableDeliveryDate2.Unset()
}

// GetSitRequestedDelivery returns the SitRequestedDelivery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetSitRequestedDelivery() string {
	if o == nil || IsNil(o.SitRequestedDelivery.Get()) {
		var ret string
		return ret
	}
	return *o.SitRequestedDelivery.Get()
}

// GetSitRequestedDeliveryOk returns a tuple with the SitRequestedDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetSitRequestedDeliveryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitRequestedDelivery.Get(), o.SitRequestedDelivery.IsSet()
}

// HasSitRequestedDelivery returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitRequestedDelivery() bool {
	if o != nil && o.SitRequestedDelivery.IsSet() {
		return true
	}

	return false
}

// SetSitRequestedDelivery gets a reference to the given NullableString and assigns it to the SitRequestedDelivery field.
func (o *UpdateMTOServiceItemSITV3) SetSitRequestedDelivery(v string) {
	o.SitRequestedDelivery.Set(&v)
}
// SetSitRequestedDeliveryNil sets the value for SitRequestedDelivery to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetSitRequestedDeliveryNil() {
	o.SitRequestedDelivery.Set(nil)
}

// UnsetSitRequestedDelivery ensures that no value is present for SitRequestedDelivery, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetSitRequestedDelivery() {
	o.SitRequestedDelivery.Unset()
}

// GetSitCustomerContacted returns the SitCustomerContacted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetSitCustomerContacted() string {
	if o == nil || IsNil(o.SitCustomerContacted.Get()) {
		var ret string
		return ret
	}
	return *o.SitCustomerContacted.Get()
}

// GetSitCustomerContactedOk returns a tuple with the SitCustomerContacted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetSitCustomerContactedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitCustomerContacted.Get(), o.SitCustomerContacted.IsSet()
}

// HasSitCustomerContacted returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitCustomerContacted() bool {
	if o != nil && o.SitCustomerContacted.IsSet() {
		return true
	}

	return false
}

// SetSitCustomerContacted gets a reference to the given NullableString and assigns it to the SitCustomerContacted field.
func (o *UpdateMTOServiceItemSITV3) SetSitCustomerContacted(v string) {
	o.SitCustomerContacted.Set(&v)
}
// SetSitCustomerContactedNil sets the value for SitCustomerContacted to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetSitCustomerContactedNil() {
	o.SitCustomerContacted.Set(nil)
}

// UnsetSitCustomerContacted ensures that no value is present for SitCustomerContacted, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetSitCustomerContacted() {
	o.SitCustomerContacted.Unset()
}

// GetUpdateReason returns the UpdateReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetUpdateReason() string {
	if o == nil || IsNil(o.UpdateReason.Get()) {
		var ret string
		return ret
	}
	return *o.UpdateReason.Get()
}

// GetUpdateReasonOk returns a tuple with the UpdateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetUpdateReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdateReason.Get(), o.UpdateReason.IsSet()
}

// HasUpdateReason returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasUpdateReason() bool {
	if o != nil && o.UpdateReason.IsSet() {
		return true
	}

	return false
}

// SetUpdateReason gets a reference to the given NullableString and assigns it to the UpdateReason field.
func (o *UpdateMTOServiceItemSITV3) SetUpdateReason(v string) {
	o.UpdateReason.Set(&v)
}
// SetUpdateReasonNil sets the value for UpdateReason to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetUpdateReasonNil() {
	o.UpdateReason.Set(nil)
}

// UnsetUpdateReason ensures that no value is present for UpdateReason, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetUpdateReason() {
	o.UpdateReason.Unset()
}

// GetSitPostalCode returns the SitPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetSitPostalCode() string {
	if o == nil || IsNil(o.SitPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.SitPostalCode.Get()
}

// GetSitPostalCodeOk returns a tuple with the SitPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetSitPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitPostalCode.Get(), o.SitPostalCode.IsSet()
}

// HasSitPostalCode returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitPostalCode() bool {
	if o != nil && o.SitPostalCode.IsSet() {
		return true
	}

	return false
}

// SetSitPostalCode gets a reference to the given NullableString and assigns it to the SitPostalCode field.
func (o *UpdateMTOServiceItemSITV3) SetSitPostalCode(v string) {
	o.SitPostalCode.Set(&v)
}
// SetSitPostalCodeNil sets the value for SitPostalCode to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetSitPostalCodeNil() {
	o.SitPostalCode.Set(nil)
}

// UnsetSitPostalCode ensures that no value is present for SitPostalCode, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetSitPostalCode() {
	o.SitPostalCode.Unset()
}

// GetSitEntryDate returns the SitEntryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetSitEntryDate() string {
	if o == nil || IsNil(o.SitEntryDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitEntryDate.Get()
}

// GetSitEntryDateOk returns a tuple with the SitEntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetSitEntryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEntryDate.Get(), o.SitEntryDate.IsSet()
}

// HasSitEntryDate returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasSitEntryDate() bool {
	if o != nil && o.SitEntryDate.IsSet() {
		return true
	}

	return false
}

// SetSitEntryDate gets a reference to the given NullableString and assigns it to the SitEntryDate field.
func (o *UpdateMTOServiceItemSITV3) SetSitEntryDate(v string) {
	o.SitEntryDate.Set(&v)
}
// SetSitEntryDateNil sets the value for SitEntryDate to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetSitEntryDateNil() {
	o.SitEntryDate.Set(nil)
}

// UnsetSitEntryDate ensures that no value is present for SitEntryDate, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetSitEntryDate() {
	o.SitEntryDate.Unset()
}

// GetRequestApprovalsRequestedStatus returns the RequestApprovalsRequestedStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOServiceItemSITV3) GetRequestApprovalsRequestedStatus() bool {
	if o == nil || IsNil(o.RequestApprovalsRequestedStatus.Get()) {
		var ret bool
		return ret
	}
	return *o.RequestApprovalsRequestedStatus.Get()
}

// GetRequestApprovalsRequestedStatusOk returns a tuple with the RequestApprovalsRequestedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOServiceItemSITV3) GetRequestApprovalsRequestedStatusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestApprovalsRequestedStatus.Get(), o.RequestApprovalsRequestedStatus.IsSet()
}

// HasRequestApprovalsRequestedStatus returns a boolean if a field has been set.
func (o *UpdateMTOServiceItemSITV3) HasRequestApprovalsRequestedStatus() bool {
	if o != nil && o.RequestApprovalsRequestedStatus.IsSet() {
		return true
	}

	return false
}

// SetRequestApprovalsRequestedStatus gets a reference to the given NullableBool and assigns it to the RequestApprovalsRequestedStatus field.
func (o *UpdateMTOServiceItemSITV3) SetRequestApprovalsRequestedStatus(v bool) {
	o.RequestApprovalsRequestedStatus.Set(&v)
}
// SetRequestApprovalsRequestedStatusNil sets the value for RequestApprovalsRequestedStatus to be an explicit nil
func (o *UpdateMTOServiceItemSITV3) SetRequestApprovalsRequestedStatusNil() {
	o.RequestApprovalsRequestedStatus.Set(nil)
}

// UnsetRequestApprovalsRequestedStatus ensures that no value is present for RequestApprovalsRequestedStatus, not even an explicit nil
func (o *UpdateMTOServiceItemSITV3) UnsetRequestApprovalsRequestedStatus() {
	o.RequestApprovalsRequestedStatus.Unset()
}

func (o UpdateMTOServiceItemSITV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMTOServiceItemSITV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedUpdateMTOServiceItemV3, errUpdateMTOServiceItemV3 := json.Marshal(o.UpdateMTOServiceItemV3)
	if errUpdateMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errUpdateMTOServiceItemV3
	}
	errUpdateMTOServiceItemV3 = json.Unmarshal([]byte(serializedUpdateMTOServiceItemV3), &toSerialize)
	if errUpdateMTOServiceItemV3 != nil {
		return map[string]interface{}{}, errUpdateMTOServiceItemV3
	}
	if !IsNil(o.ReServiceCode) {
		toSerialize["reServiceCode"] = o.ReServiceCode
	}
	if !IsNil(o.SitDepartureDate) {
		toSerialize["sitDepartureDate"] = o.SitDepartureDate
	}
	if !IsNil(o.SitDestinationFinalAddress) {
		toSerialize["sitDestinationFinalAddress"] = o.SitDestinationFinalAddress
	}
	if o.DateOfContact1.IsSet() {
		toSerialize["dateOfContact1"] = o.DateOfContact1.Get()
	}
	if o.TimeMilitary1.IsSet() {
		toSerialize["timeMilitary1"] = o.TimeMilitary1.Get()
	}
	if o.FirstAvailableDeliveryDate1.IsSet() {
		toSerialize["firstAvailableDeliveryDate1"] = o.FirstAvailableDeliveryDate1.Get()
	}
	if o.DateOfContact2.IsSet() {
		toSerialize["dateOfContact2"] = o.DateOfContact2.Get()
	}
	if o.TimeMilitary2.IsSet() {
		toSerialize["timeMilitary2"] = o.TimeMilitary2.Get()
	}
	if o.FirstAvailableDeliveryDate2.IsSet() {
		toSerialize["firstAvailableDeliveryDate2"] = o.FirstAvailableDeliveryDate2.Get()
	}
	if o.SitRequestedDelivery.IsSet() {
		toSerialize["sitRequestedDelivery"] = o.SitRequestedDelivery.Get()
	}
	if o.SitCustomerContacted.IsSet() {
		toSerialize["sitCustomerContacted"] = o.SitCustomerContacted.Get()
	}
	if o.UpdateReason.IsSet() {
		toSerialize["updateReason"] = o.UpdateReason.Get()
	}
	if o.SitPostalCode.IsSet() {
		toSerialize["sitPostalCode"] = o.SitPostalCode.Get()
	}
	if o.SitEntryDate.IsSet() {
		toSerialize["sitEntryDate"] = o.SitEntryDate.Get()
	}
	if o.RequestApprovalsRequestedStatus.IsSet() {
		toSerialize["requestApprovalsRequestedStatus"] = o.RequestApprovalsRequestedStatus.Get()
	}
	return toSerialize, nil
}

func (o *UpdateMTOServiceItemSITV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"modelType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateMTOServiceItemSITV3 := _UpdateMTOServiceItemSITV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateMTOServiceItemSITV3)

	if err != nil {
		return err
	}

	*o = UpdateMTOServiceItemSITV3(varUpdateMTOServiceItemSITV3)

	return err
}

type NullableUpdateMTOServiceItemSITV3 struct {
	value *UpdateMTOServiceItemSITV3
	isSet bool
}

func (v NullableUpdateMTOServiceItemSITV3) Get() *UpdateMTOServiceItemSITV3 {
	return v.value
}

func (v *NullableUpdateMTOServiceItemSITV3) Set(val *UpdateMTOServiceItemSITV3) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMTOServiceItemSITV3) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMTOServiceItemSITV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMTOServiceItemSITV3(val *UpdateMTOServiceItemSITV3) *NullableUpdateMTOServiceItemSITV3 {
	return &NullableUpdateMTOServiceItemSITV3{value: val, isSet: true}
}

func (v NullableUpdateMTOServiceItemSITV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMTOServiceItemSITV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


