/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ServiceItemParamOrigin the model 'ServiceItemParamOrigin'
type ServiceItemParamOrigin string

// List of ServiceItemParamOrigin
const (
	PRIME ServiceItemParamOrigin = "PRIME"
	SYSTEM ServiceItemParamOrigin = "SYSTEM"
	PRICER ServiceItemParamOrigin = "PRICER"
	PAYMENT_REQUEST ServiceItemParamOrigin = "PAYMENT_REQUEST"
)

// All allowed values of ServiceItemParamOrigin enum
var AllowedServiceItemParamOriginEnumValues = []ServiceItemParamOrigin{
	"PRIME",
	"SYSTEM",
	"PRICER",
	"PAYMENT_REQUEST",
}

func (v *ServiceItemParamOrigin) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceItemParamOrigin(value)
	for _, existing := range AllowedServiceItemParamOriginEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceItemParamOrigin", value)
}

// NewServiceItemParamOriginFromValue returns a pointer to a valid ServiceItemParamOrigin
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceItemParamOriginFromValue(v string) (*ServiceItemParamOrigin, error) {
	ev := ServiceItemParamOrigin(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceItemParamOrigin: valid values are %v", v, AllowedServiceItemParamOriginEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceItemParamOrigin) IsValid() bool {
	for _, existing := range AllowedServiceItemParamOriginEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceItemParamOrigin value
func (v ServiceItemParamOrigin) Ptr() *ServiceItemParamOrigin {
	return &v
}

type NullableServiceItemParamOrigin struct {
	value *ServiceItemParamOrigin
	isSet bool
}

func (v NullableServiceItemParamOrigin) Get() *ServiceItemParamOrigin {
	return v.value
}

func (v *NullableServiceItemParamOrigin) Set(val *ServiceItemParamOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItemParamOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItemParamOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItemParamOrigin(val *ServiceItemParamOrigin) *NullableServiceItemParamOrigin {
	return &NullableServiceItemParamOrigin{value: val, isSet: true}
}

func (v NullableServiceItemParamOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItemParamOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

