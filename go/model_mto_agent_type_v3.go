/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOAgentTypeV3 The type for this agent. `RELEASING` means they have authority on pickup, `RECEIVING` means they can receive the shipment on delivery. 
type MTOAgentTypeV3 string

// List of MTOAgentType
const (
	RELEASING_AGENT MTOAgentTypeV3 = "RELEASING_AGENT"
	RECEIVING_AGENT MTOAgentTypeV3 = "RECEIVING_AGENT"
)

// All allowed values of MTOAgentTypeV3 enum
var AllowedMTOAgentTypeV3EnumValues = []MTOAgentTypeV3{
	"RELEASING_AGENT",
	"RECEIVING_AGENT",
}

func (v *MTOAgentTypeV3) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOAgentTypeV3(value)
	for _, existing := range AllowedMTOAgentTypeV3EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOAgentTypeV3", value)
}

// NewMTOAgentTypeV3FromValue returns a pointer to a valid MTOAgentTypeV3
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOAgentTypeV3FromValue(v string) (*MTOAgentTypeV3, error) {
	ev := MTOAgentTypeV3(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOAgentTypeV3: valid values are %v", v, AllowedMTOAgentTypeV3EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOAgentTypeV3) IsValid() bool {
	for _, existing := range AllowedMTOAgentTypeV3EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOAgentType value
func (v MTOAgentTypeV3) Ptr() *MTOAgentTypeV3 {
	return &v
}

type NullableMTOAgentTypeV3 struct {
	value *MTOAgentTypeV3
	isSet bool
}

func (v NullableMTOAgentTypeV3) Get() *MTOAgentTypeV3 {
	return v.value
}

func (v *NullableMTOAgentTypeV3) Set(val *MTOAgentTypeV3) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOAgentTypeV3) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOAgentTypeV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOAgentTypeV3(val *MTOAgentTypeV3) *NullableMTOAgentTypeV3 {
	return &NullableMTOAgentTypeV3{value: val, isSet: true}
}

func (v NullableMTOAgentTypeV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOAgentTypeV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

