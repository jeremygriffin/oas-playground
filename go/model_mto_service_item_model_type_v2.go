/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOServiceItemModelTypeV2 Describes all model sub-types for a MTOServiceItem model.  Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.   * DOFSIT, DOASIT - MTOServiceItemOriginSIT   * DDFSIT, DDASIT - MTOServiceItemDestSIT   * DOSHUT, DDSHUT - MTOServiceItemShuttle   * DCRT, DUCRT - MTOServiceItemDomesticCrating  The documentation will then update with the supported fields. 
type MTOServiceItemModelTypeV2 string

// List of MTOServiceItemModelType
const (
	MTO_SERVICE_ITEM_BASIC MTOServiceItemModelTypeV2 = "MTOServiceItemBasic"
	MTO_SERVICE_ITEM_ORIGIN_SIT MTOServiceItemModelTypeV2 = "MTOServiceItemOriginSIT"
	MTO_SERVICE_ITEM_DEST_SIT MTOServiceItemModelTypeV2 = "MTOServiceItemDestSIT"
	MTO_SERVICE_ITEM_SHUTTLE MTOServiceItemModelTypeV2 = "MTOServiceItemShuttle"
	MTO_SERVICE_ITEM_DOMESTIC_CRATING MTOServiceItemModelTypeV2 = "MTOServiceItemDomesticCrating"
)

// All allowed values of MTOServiceItemModelTypeV2 enum
var AllowedMTOServiceItemModelTypeV2EnumValues = []MTOServiceItemModelTypeV2{
	"MTOServiceItemBasic",
	"MTOServiceItemOriginSIT",
	"MTOServiceItemDestSIT",
	"MTOServiceItemShuttle",
	"MTOServiceItemDomesticCrating",
}

func (v *MTOServiceItemModelTypeV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOServiceItemModelTypeV2(value)
	for _, existing := range AllowedMTOServiceItemModelTypeV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOServiceItemModelTypeV2", value)
}

// NewMTOServiceItemModelTypeV2FromValue returns a pointer to a valid MTOServiceItemModelTypeV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOServiceItemModelTypeV2FromValue(v string) (*MTOServiceItemModelTypeV2, error) {
	ev := MTOServiceItemModelTypeV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOServiceItemModelTypeV2: valid values are %v", v, AllowedMTOServiceItemModelTypeV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOServiceItemModelTypeV2) IsValid() bool {
	for _, existing := range AllowedMTOServiceItemModelTypeV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOServiceItemModelType value
func (v MTOServiceItemModelTypeV2) Ptr() *MTOServiceItemModelTypeV2 {
	return &v
}

type NullableMTOServiceItemModelTypeV2 struct {
	value *MTOServiceItemModelTypeV2
	isSet bool
}

func (v NullableMTOServiceItemModelTypeV2) Get() *MTOServiceItemModelTypeV2 {
	return v.value
}

func (v *NullableMTOServiceItemModelTypeV2) Set(val *MTOServiceItemModelTypeV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemModelTypeV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemModelTypeV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemModelTypeV2(val *MTOServiceItemModelTypeV2) *NullableMTOServiceItemModelTypeV2 {
	return &NullableMTOServiceItemModelTypeV2{value: val, isSet: true}
}

func (v NullableMTOServiceItemModelTypeV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemModelTypeV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

