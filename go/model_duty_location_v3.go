/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DutyLocationV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DutyLocationV3{}

// DutyLocationV3 struct for DutyLocationV3
type DutyLocationV3 struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	AddressID *string `json:"addressID,omitempty"`
	Address *AddressV3V3 `json:"address,omitempty"`
	ETag *string `json:"eTag,omitempty"`
}

// NewDutyLocationV3 instantiates a new DutyLocationV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDutyLocationV3() *DutyLocationV3 {
	this := DutyLocationV3{}
	return &this
}

// NewDutyLocationV3WithDefaults instantiates a new DutyLocationV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDutyLocationV3WithDefaults() *DutyLocationV3 {
	this := DutyLocationV3{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DutyLocationV3) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DutyLocationV3) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DutyLocationV3) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DutyLocationV3) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DutyLocationV3) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DutyLocationV3) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DutyLocationV3) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DutyLocationV3) SetName(v string) {
	o.Name = &v
}

// GetAddressID returns the AddressID field value if set, zero value otherwise.
func (o *DutyLocationV3) GetAddressID() string {
	if o == nil || IsNil(o.AddressID) {
		var ret string
		return ret
	}
	return *o.AddressID
}

// GetAddressIDOk returns a tuple with the AddressID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DutyLocationV3) GetAddressIDOk() (*string, bool) {
	if o == nil || IsNil(o.AddressID) {
		return nil, false
	}
	return o.AddressID, true
}

// HasAddressID returns a boolean if a field has been set.
func (o *DutyLocationV3) HasAddressID() bool {
	if o != nil && !IsNil(o.AddressID) {
		return true
	}

	return false
}

// SetAddressID gets a reference to the given string and assigns it to the AddressID field.
func (o *DutyLocationV3) SetAddressID(v string) {
	o.AddressID = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DutyLocationV3) GetAddress() AddressV3V3 {
	if o == nil || IsNil(o.Address) {
		var ret AddressV3V3
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DutyLocationV3) GetAddressOk() (*AddressV3V3, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DutyLocationV3) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressV3V3 and assigns it to the Address field.
func (o *DutyLocationV3) SetAddress(v AddressV3V3) {
	o.Address = &v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *DutyLocationV3) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DutyLocationV3) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *DutyLocationV3) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *DutyLocationV3) SetETag(v string) {
	o.ETag = &v
}

func (o DutyLocationV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DutyLocationV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AddressID) {
		toSerialize["addressID"] = o.AddressID
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	return toSerialize, nil
}

type NullableDutyLocationV3 struct {
	value *DutyLocationV3
	isSet bool
}

func (v NullableDutyLocationV3) Get() *DutyLocationV3 {
	return v.value
}

func (v *NullableDutyLocationV3) Set(val *DutyLocationV3) {
	v.value = val
	v.isSet = true
}

func (v NullableDutyLocationV3) IsSet() bool {
	return v.isSet
}

func (v *NullableDutyLocationV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDutyLocationV3(val *DutyLocationV3) *NullableDutyLocationV3 {
	return &NullableDutyLocationV3{value: val, isSet: true}
}

func (v NullableDutyLocationV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDutyLocationV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


