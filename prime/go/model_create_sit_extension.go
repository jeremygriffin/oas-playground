/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSITExtension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSITExtension{}

// CreateSITExtension CreateSITExtension contains the fields required for the prime to create a SIT Extension request.
type CreateSITExtension struct {
	RequestReason string `json:"requestReason"`
	ContractorRemarks string `json:"contractorRemarks"`
	RequestedDays int32 `json:"requestedDays"`
}

type _CreateSITExtension CreateSITExtension

// NewCreateSITExtension instantiates a new CreateSITExtension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSITExtension(requestReason string, contractorRemarks string, requestedDays int32) *CreateSITExtension {
	this := CreateSITExtension{}
	this.RequestReason = requestReason
	this.ContractorRemarks = contractorRemarks
	this.RequestedDays = requestedDays
	return &this
}

// NewCreateSITExtensionWithDefaults instantiates a new CreateSITExtension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSITExtensionWithDefaults() *CreateSITExtension {
	this := CreateSITExtension{}
	return &this
}

// GetRequestReason returns the RequestReason field value
func (o *CreateSITExtension) GetRequestReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestReason
}

// GetRequestReasonOk returns a tuple with the RequestReason field value
// and a boolean to check if the value has been set.
func (o *CreateSITExtension) GetRequestReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestReason, true
}

// SetRequestReason sets field value
func (o *CreateSITExtension) SetRequestReason(v string) {
	o.RequestReason = v
}

// GetContractorRemarks returns the ContractorRemarks field value
func (o *CreateSITExtension) GetContractorRemarks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractorRemarks
}

// GetContractorRemarksOk returns a tuple with the ContractorRemarks field value
// and a boolean to check if the value has been set.
func (o *CreateSITExtension) GetContractorRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractorRemarks, true
}

// SetContractorRemarks sets field value
func (o *CreateSITExtension) SetContractorRemarks(v string) {
	o.ContractorRemarks = v
}

// GetRequestedDays returns the RequestedDays field value
func (o *CreateSITExtension) GetRequestedDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestedDays
}

// GetRequestedDaysOk returns a tuple with the RequestedDays field value
// and a boolean to check if the value has been set.
func (o *CreateSITExtension) GetRequestedDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedDays, true
}

// SetRequestedDays sets field value
func (o *CreateSITExtension) SetRequestedDays(v int32) {
	o.RequestedDays = v
}

func (o CreateSITExtension) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSITExtension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestReason"] = o.RequestReason
	toSerialize["contractorRemarks"] = o.ContractorRemarks
	toSerialize["requestedDays"] = o.RequestedDays
	return toSerialize, nil
}

func (o *CreateSITExtension) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestReason",
		"contractorRemarks",
		"requestedDays",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSITExtension := _CreateSITExtension{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSITExtension)

	if err != nil {
		return err
	}

	*o = CreateSITExtension(varCreateSITExtension)

	return err
}

type NullableCreateSITExtension struct {
	value *CreateSITExtension
	isSet bool
}

func (v NullableCreateSITExtension) Get() *CreateSITExtension {
	return v.value
}

func (v *NullableCreateSITExtension) Set(val *CreateSITExtension) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSITExtension) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSITExtension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSITExtension(val *CreateSITExtension) *NullableCreateSITExtension {
	return &NullableCreateSITExtension{value: val, isSet: true}
}

func (v NullableCreateSITExtension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSITExtension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


