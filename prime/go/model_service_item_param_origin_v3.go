/*
MilMove Prime V3 API

The Prime V3 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v3/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ServiceItemParamOriginV3 the model 'ServiceItemParamOriginV3'
type ServiceItemParamOriginV3 string

// List of ServiceItemParamOrigin
const (
	PRIME ServiceItemParamOriginV3 = "PRIME"
	SYSTEM ServiceItemParamOriginV3 = "SYSTEM"
	PRICER ServiceItemParamOriginV3 = "PRICER"
	PAYMENT_REQUEST ServiceItemParamOriginV3 = "PAYMENT_REQUEST"
)

// All allowed values of ServiceItemParamOriginV3 enum
var AllowedServiceItemParamOriginV3EnumValues = []ServiceItemParamOriginV3{
	"PRIME",
	"SYSTEM",
	"PRICER",
	"PAYMENT_REQUEST",
}

func (v *ServiceItemParamOriginV3) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceItemParamOriginV3(value)
	for _, existing := range AllowedServiceItemParamOriginV3EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceItemParamOriginV3", value)
}

// NewServiceItemParamOriginV3FromValue returns a pointer to a valid ServiceItemParamOriginV3
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceItemParamOriginV3FromValue(v string) (*ServiceItemParamOriginV3, error) {
	ev := ServiceItemParamOriginV3(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceItemParamOriginV3: valid values are %v", v, AllowedServiceItemParamOriginV3EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceItemParamOriginV3) IsValid() bool {
	for _, existing := range AllowedServiceItemParamOriginV3EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceItemParamOrigin value
func (v ServiceItemParamOriginV3) Ptr() *ServiceItemParamOriginV3 {
	return &v
}

type NullableServiceItemParamOriginV3 struct {
	value *ServiceItemParamOriginV3
	isSet bool
}

func (v NullableServiceItemParamOriginV3) Get() *ServiceItemParamOriginV3 {
	return v.value
}

func (v *NullableServiceItemParamOriginV3) Set(val *ServiceItemParamOriginV3) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItemParamOriginV3) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItemParamOriginV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItemParamOriginV3(val *ServiceItemParamOriginV3) *NullableServiceItemParamOriginV3 {
	return &NullableServiceItemParamOriginV3{value: val, isSet: true}
}

func (v NullableServiceItemParamOriginV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItemParamOriginV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

