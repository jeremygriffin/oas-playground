/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SitAddressUpdateStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SitAddressUpdateStatus{}

// SitAddressUpdateStatus The status of a SIT address update, indicating where it is in the TOO's approval process.
type SitAddressUpdateStatus struct {
}

// NewSitAddressUpdateStatus instantiates a new SitAddressUpdateStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSitAddressUpdateStatus() *SitAddressUpdateStatus {
	this := SitAddressUpdateStatus{}
	return &this
}

// NewSitAddressUpdateStatusWithDefaults instantiates a new SitAddressUpdateStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSitAddressUpdateStatusWithDefaults() *SitAddressUpdateStatus {
	this := SitAddressUpdateStatus{}
	return &this
}

func (o SitAddressUpdateStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SitAddressUpdateStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableSitAddressUpdateStatus struct {
	value SitAddressUpdateStatus
	isSet bool
}

func (v NullableSitAddressUpdateStatus) Get() SitAddressUpdateStatus {
	return v.value
}

func (v *NullableSitAddressUpdateStatus) Set(val SitAddressUpdateStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSitAddressUpdateStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSitAddressUpdateStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSitAddressUpdateStatus(val SitAddressUpdateStatus) *NullableSitAddressUpdateStatus {
	return &NullableSitAddressUpdateStatus{value: val, isSet: true}
}

func (v NullableSitAddressUpdateStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSitAddressUpdateStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


