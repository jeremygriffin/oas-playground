openapi: 3.0.1
info:
  contact:
    email: milmove-developers@caci.com
  description: |
    The Prime API is a RESTful API that enables the Prime contractor to request
    information about upcoming moves, update the details and status of those moves,
    and make payment requests. It uses Mutual TLS for authentication procedures.

    All endpoints are located at `/prime/v1/`.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: MilMove Prime API
  version: 0.0.1
servers:
- url: /prime/v1
tags:
- description: |
    The **moveTaskOrder** represents a military move that has been sent to a contractor. It contains all the information about shipments, including service items, estimated weights, actual weights, requested and scheduled move dates, etc.
  name: moveTaskOrder
- description: |
    A shipment is some (or all) of a customer's belongings picked up in one location and delivered to another location.
    All of the items in a shipment are weighed and transported as a discrete unit. One move may include multiple shipments.
    An **mtoShipment**, in particular, is a shipment that belongs to a [moveTaskOrder](#tag/moveTaskOrder).

    The weights for all of the shipments in a move are combined and compared to the customer's weight allowance.
    If the sum of the shipments is greater, the customer is liable for paying excess weight cost. Both the customer and
    the contractor should keep this potential cost in mind when planning a move and the shipments within it.
  name: mtoShipment
- description: |
    A service item is a service that the contractor can bill for. For example, if the movers pack and/or unpack a
    customer's belongings, those are billable services (packing and unpacking). All **mtoServiceItems** must be
    approved by the TOO before payment can be requested.

    There are three types of service items: accessorial, MTO-level, and standard.

    **WIP:** Add an external link to an article that explains the different types of service items in more detail.
  name: mtoServiceItem
- description: |
    The contractor submits a **paymentRequest** to the TIO for approval in order to be reimbursed for 1 or more
    **mtoServiceItems** on a **moveTaskOrder**. A service item can be on multiple payment requests if necessary.

    Proof of service documentation may be uploaded for each **mtoServiceItem** in a **paymentRequest** after the payment
    request is created via the endpoint [createUpload](#operation/createUpload).

    All weight entered should be in *pounds* and no other unit of measurement.
  name: paymentRequest
- description: |
    **THIS ENDPOINT WILL BE DEPRECATED ON AUGUST 5TH, 2024 - REFER TO DESCRIPTION FOR DETAILS**

    A **sitAddressUpdate** is submitted when the prime or office user wishes to update the final address for an
    approved service item. sitAddressUpdates with a distance less than or equal to 50 miles will be automatically
    approved while a distance greater than 50 miles will typically require office user approval.
  name: sitAddressUpdate
paths:
  /moves:
    get:
      description: |
        Gets all moves that have been reviewed and approved by the TOO. The `since` parameter can be used to filter this
        list down to only the moves that have been updated since the provided timestamp. A move will be considered
        updated if the `updatedAt` timestamp on the move or on its orders, shipments, service items, or payment
        requests, is later than the provided date and time.

        **WIP**: Include what causes moves to leave this list. Currently, once the `availableToPrimeAt` timestamp has
        been set, that move will always appear in this list.
      operationId: listMoves
      parameters:
      - description: Only return moves updated since this time. Formatted like "2021-07-23T18:30:47.116Z"
        in: query
        name: since
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMoves'
          description: Successfully retrieved moves. A successful fetch might still
            return zero moves.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: listMoves
      tags:
      - moveTaskOrder
  /move-task-orders/{moveID}:
    get:
      description: |
        ### Functionality
        This endpoint gets an individual MoveTaskOrder by ID.

        It will provide information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.
      operationId: getMoveTaskOrder
      parameters:
      - description: UUID or MoveCode of move task order to use.
        in: path
        name: moveID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveTaskOrder'
          description: Successfully retrieve an individual move task order.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: getMoveTaskOrder
      tags:
      - moveTaskOrder
  /move-task-orders/{moveTaskOrderID}/excess-weight-record:
    post:
      description: |
        Uploads an excess weight record, which is a document that proves that the movers or contractors have counseled the customer about their excess weight. Excess weight counseling should occur after the sum of the shipments for the customer's move crosses the excess weight alert threshold.
      operationId: createExcessWeightRecord
      parameters:
      - description: UUID of the move being updated.
        in: path
        name: moveTaskOrderID
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createExcessWeightRecord_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcessWeightRecord'
          description: Successfully uploaded the excess weight record file.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createExcessWeightRecord
      tags:
      - moveTaskOrder
  /move-task-orders/{moveTaskOrderID}/post-counseling-info:
    patch:
      description: |
        ### Functionality
        This endpoint **updates** the MoveTaskOrder to indicate that the Prime has completed Counseling.
        This update uses the moveTaskOrderID provided in the path, updates the move status and marks child elements of the move to indicate the update.
        No body object is expected for this request.

        **For Full/Partial PPMs**: This action is required so that the customer can start uploading their proof of service docs.

        **For other move types**: This action is required for auditing reasons so that we have a record of when the Prime counseled the customer.
      operationId: updateMTOPostCounselingInformation
      parameters:
      - description: ID of move task order to use.
        in: path
        name: moveTaskOrderID
        required: true
        schema:
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveTaskOrder'
          description: Successfully updated move task order with post counseling information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOPostCounselingInformation
      tags:
      - moveTaskOrder
  /mto-shipments:
    post:
      description: |
        _[Deprecated: sunset on 2024-04-08]_ This endpoint is deprecated and will be removed in a future version.
        Please use the new endpoint at `/prime/v2/createMTOShipment` instead.

        Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a
        need for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must
        approve it before the contractor can proceed with billing.

        **WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to
        one of their moves. Otherwise, the Prime can fetch the related move using the
        [getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status `"APPROVED"`.
      operationId: createMTOShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMTOShipment'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOShipment'
          description: Successfully created a MTO shipment.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createMTOShipment
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}:
    delete:
      description: |
        ### Functionality
        This endpoint deletes an individual shipment by ID.

        ### Errors
        * The mtoShipment should be associated with an MTO that is available to prime.
        * The mtoShipment must be a PPM shipment.
        * Counseling should not have already been completed for the associated MTO.
      operationId: deleteMTOShipment
      parameters:
      - description: UUID of the shipment to be deleted
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: Successfully deleted the MTO shipment.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: deleteMTOShipment
      tags:
      - mtoShipment
    patch:
      description: |
        _[Deprecated: sunset on August 5th, 2024]_ This endpoint is deprecated and will be removed in a future version.
        Please use the new endpoint at `/prime/v2/updateMTOShipment` instead.

        **DEPRECATION ON AUGUST 5TH, 2024**
        Following deprecation, there is an edge case scenario where a PPM shipment with no addresses could be updated and it would also update the final destination SIT address
        for SIT service items. This edge case has been removed as you should not be able to update items using this endpoint. Third-party APIs have confirmed they will require
        deprecation for this change.

        Updates an existing shipment for a move.

        Note that there are some restrictions on nested objects:

        * Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead.
        * Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead.
        * Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.

        These restrictions are due to our [optimistic locking/concurrency control](https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/use-optimistic-locking) mechanism.

        Note that some fields cannot be manually changed but will still be updated automatically, such as `primeEstimatedWeightRecordedDate` and `requiredDeliveryDate`.
      operationId: updateMTOShipment
      parameters:
      - description: UUID of the shipment being updated.
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMTOShipment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOShipment'
          description: Successfully updated the MTO shipment.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOShipment
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/addresses/{addressID}:
    put:
      description: |
        ### Functionality
        This endpoint is used to **update** the pickup, secondary, and destination addresses on an MTO Shipment. mto-shipments/{mtoShipmentID}/shipment-address-updates is for updating a delivery address. The address details completely replace the original, except for the UUID.
        Therefore a complete address should be sent in the request.
        When a destination address on a shipment is updated, the destination SIT service items address ID will also be updated so that shipment and service item final destinations match.

        This endpoint **cannot create** an address.
        To create an address on an MTO shipment, the caller must use [updateMTOShipment](#operation/updateMTOShipment) as the parent shipment has to be updated with the appropriate link to the address.

        ### Errors
        The address must be associated with the mtoShipment passed in the url.
        In other words, it should be listed as pickupAddress, destinationAddress, secondaryPickupAddress or secondaryDeliveryAddress on the mtoShipment provided.
        If it is not, caller will receive a **Conflict** Error.

        The mtoShipment should be associated with an MTO that is available to prime.
        If the caller requests an update to an address, and the shipment is not on an available MTO, the caller will receive a **NotFound** Error.
      operationId: updateMTOShipmentAddress
      parameters:
      - description: UUID of the shipment associated with the address
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: UUID of the address being updated
        in: path
        name: addressID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: Successfully updated the address.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOShipmentAddress
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/shipment-address-updates:
    post:
      description: |
        ### Functionality
        This endpoint is used so the Prime can request an **update** for the destination address on an MTO Shipment,
        after the destination address has already been approved.
        If automatically approved or TOO approves, this will update the final destination address values for destination SIT service items to be the same as the changed destination address that was approved.
        Address updates will be automatically approved unless they change:
          - The service area
          - Mileage bracket for direct delivery
          - the address and the distance between the old and new address is > 50
          - Domestic Short Haul to Domestic Line Haul or vice versa
              - Shipments that start and end in one ZIP3 use Short Haul pricing
              - Shipments that start and end in different ZIP3s use Line Haul pricing

        For those, changes will require TOO approval.
      operationId: updateShipmentDestinationAddress
      parameters:
      - description: UUID of the shipment associated with the address
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Needs to be the eTag of the mtoShipment. Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentDestinationAddress'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAddressUpdate'
          description: Successfully created the address update request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateShipmentDestinationAddress
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/agents:
    post:
      description: |
        ### Functionality
        This endpoint is used to **create** and add agents for an existing MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Pime.
        If the caller requests a new agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.
      operationId: createMTOAgent
      parameters:
      - description: UUID of the shipment associated with the agent
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTOAgent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOAgent'
          description: Successfully added the agent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createMTOAgent
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/agents/{agentID}:
    put:
      description: |
        ### Functionality
        This endpoint is used to **update** the agents for an MTO Shipment. Only the fields being modified need to be sent in the request body.

        ### Errors:
        The agent must always have a name and at least one method of contact (either `email` or `phone`).

        The agent must be associated with the MTO shipment passed in the url.

        The shipment should be associated with an MTO that is available to the Prime.
        If the caller requests an update to an agent, and the shipment is not on an available MTO, the caller will receive a **NotFound** response.
      operationId: updateMTOAgent
      parameters:
      - description: UUID of the shipment associated with the agent
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: UUID of the agent being updated
        in: path
        name: agentID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTOAgent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOAgent'
          description: Successfully updated the agent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOAgent
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/reweighs/{reweighID}:
    patch:
      description: |
        ### Functionality
        This endpoint can be used to update a reweigh with a new weight or to provide the reason why a reweigh did not occur.
        Only one of weight or verificationReason should be sent in the request body.

        A reweigh is the second recorded weight for a shipment, as validated by certified weight tickets. Applies to one shipment.
        A reweigh can be triggered automatically, or requested by the customer or transportation office. Not all shipments are reweighed,
        so not all shipments will have a reweigh weight.
      operationId: updateReweigh
      parameters:
      - description: UUID of the shipment associated with the reweigh
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: UUID of the reweigh being updated
        in: path
        name: reweighID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReweigh'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reweigh'
          description: Successfully updated the reweigh.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateReweigh
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/sit-extensions:
    post:
      description: |
        ### Functionality
        This endpoint creates a storage in transit (SIT) extension request for a shipment. A SIT extension request is a request an
        increase in the shipment day allowance for the number of days a shipment is allowed to be in SIT. The total SIT day allowance
        includes time spent in both origin and destination SIT.
      operationId: createSITExtension
      parameters:
      - description: UUID of the shipment associated with the agent
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSITExtension'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SITExtension'
          description: Successfully created the sit extension request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createSITExtension
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-shipments/{mtoShipmentID}/status:
    patch:
      description: |
        ### Functionality
        This endpoint should be used by the Prime to confirm the cancellation of a shipment. It allows the shipment
        status to be changed to "CANCELED." Currently, the Prime cannot update the shipment to any other status.
      operationId: updateMTOShipmentStatus
      parameters:
      - description: UUID of the shipment associated with the agent
        in: path
        name: mtoShipmentID
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMTOShipmentStatus'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOShipment'
          description: Successfully updated the shipment's status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOShipmentStatus
      tags:
      - mtoShipment
      x-codegen-request-body-name: body
  /mto-service-items:
    post:
      description: |
        Creates one or more MTOServiceItems. Not all service items may be created, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to create and the documentation will update with the new definition.

        Upon creation these items are associated with a Move Task Order and an MTO Shipment.
        The request must include UUIDs for the MTO and MTO Shipment connected to this service item. Some service item types require
        additional service items to be autogenerated when added - all created service items, autogenerated included,
        will be returned in the response.

        To update a service item, please use [updateMTOServiceItem](#operation/updateMTOServiceItem) endpoint.

        ---

        **`MTOServiceItemOriginSIT`**

        MTOServiceItemOriginSIT is a subtype of MTOServiceItem.

        This model type describes a domestic origin SIT service item. Items can be created using this
        model type with the following codes:

        **DOFSIT**

        **1st day origin SIT service item**. When a DOFSIT is requested, the API will auto-create the following group of service items:
          * DOFSIT - Domestic origin 1st day SIT
          * DOASIT - Domestic origin Additional day SIT
          * DOPSIT - Domestic origin SIT pickup
          * DOSFSC - Domestic origin SIT fuel surcharge

        **DOASIT**

        **Addt'l days origin SIT service item**. This represents an additional day of storage for the same item.
        Additional DOASIT service items can be created and added to an existing shipment that **includes a DOFSIT service item**.

        ---

        **`MTOServiceItemDestSIT`**

        MTOServiceItemDestSIT is a subtype of MTOServiceItem.

        This model type describes a domestic destination SIT service item. Items can be created using this
        model type with the following codes:

        **DDFSIT**

        **1st day destination SIT service item**.

        These additional fields are optional for creating a DDFSIT:
          * `firstAvailableDeliveryDate1`
            * string <date>
            * First available date that Prime can deliver SIT service item.
            * firstAvailableDeliveryDate1, dateOfContact1, and timeMilitary1 are required together
          * `dateOfContact1`
            * string <date>
            * Date of attempted contact by the prime corresponding to `timeMilitary1`
            * dateOfContact1, timeMilitary1, and firstAvailableDeliveryDate1 are required together
          * `timeMilitary1`
            * string\d{4}Z
            * Time of attempted contact corresponding to `dateOfContact1`, in military format.
            * timeMilitary1, dateOfContact1, and firstAvailableDeliveryDate1 are required together
          * `firstAvailableDeliveryDate2`
            * string <date>
            * Second available date that Prime can deliver SIT service item.
            * firstAvailableDeliveryDate2, dateOfContact2, and timeMilitary2 are required together
          * `dateOfContact2`
            * string <date>
            * Date of attempted contact delivery by the prime corresponding to `timeMilitary2`
            * dateOfContact2, timeMilitary2, and firstAvailableDeliveryDate2 are required together
          * `timeMilitary2`
            * string\d{4}Z
            * Time of attempted contact corresponding to `dateOfContact2`, in military format.
            * timeMilitary2, dateOfContact2, and firstAvailableDeliveryDate2 are required together

        When a DDFSIT is requested, the API will auto-create the following group of service items:
          * DDFSIT - Domestic destination 1st day SIT
          * DDASIT - Domestic destination Additional day SIT
          * DDDSIT - Domestic destination SIT delivery
          * DDSFSC - Domestic destination SIT fuel surcharge

        **DDASIT**

        **Addt'l days destination SIT service item**. This represents an additional day of storage for the same item.
        Additional DDASIT service items can be created and added to an existing shipment that **includes a DDFSIT service item**.
      operationId: createMTOServiceItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTOServiceItem'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MTOServiceItem'
                type: array
          description: Successfully created an MTO service item.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createMTOServiceItem
      tags:
      - mtoServiceItem
      x-codegen-request-body-name: body
  /mto-service-items/{mtoServiceItemID}:
    patch:
      description: |
        Updates MTOServiceItems after creation. Not all service items or fields may be updated, please see details below.

        This endpoint supports different body definitions. In the modelType field below, select the modelType corresponding
         to the service item you wish to update and the documentation will update with the new definition.

        * Addresses: To update a destination service item's SIT destination final address, update the shipment destination address.
        For approved shipments, please use [updateShipmentDestinationAddress](#mtoShipment/updateShipmentDestinationAddress).
        For shipments not yet approved, please use [updateMTOShipmentAddress](#mtoShipment/updateMTOShipmentAddress).

        * SIT Service Items: Take note that when updating `sitCustomerContacted`, `sitDepartureDate`, or `sitRequestedDelivery`, we want
        those to be updated on `DOASIT` (for origin SIT) and `DDASIT` (for destination SIT). If updating those values in other service
        items, the office users will not have as much attention to those values.

        To create a service item, please use [createMTOServiceItem](#mtoServiceItem/createMTOServiceItem)) endpoint.
      operationId: updateMTOServiceItem
      parameters:
      - description: UUID of service item to update.
        in: path
        name: mtoServiceItemID
        required: true
        schema:
          type: string
      - description: |
          Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMTOServiceItem'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MTOServiceItem'
          description: Successfully updated the MTO service item.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: "Precondition failed, likely due to a stale eTag (If-Match).\
            \ Fetch the request again to get the updated eTag value."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: updateMTOServiceItem
      tags:
      - mtoServiceItem
      x-codegen-request-body-name: body
  /mto-service-items/{mtoServiceItemID}/uploads:
    post:
      description: |
        ### Functionality

        This endpoint **uploads** a Service Request document for a
        ServiceItem.

        The ServiceItem should already exist.

        ServiceItems are created with the
        [createMTOServiceItem](#operation/createMTOServiceItem)
        endpoint.
      operationId: createServiceRequestDocumentUpload
      parameters:
      - description: UUID of the service item to use.
        in: path
        name: mtoServiceItemID
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createExcessWeightRecord_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadWithOmissions'
          description: Successfully created upload of digital file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createServiceRequestDocumentUpload
      tags:
      - mtoServiceItem
  /payment-requests:
    post:
      description: |
        Creates a new instance of a paymentRequest and is assigned the status `PENDING`.
        A move task order can have multiple payment requests, and
        a final payment request can be marked using boolean `isFinal`.

        If a `PENDING` payment request is recalculated,
        a new payment request is created and the original request is
        marked with the status `DEPRECATED`.

        **NOTE**: In order to create a payment request for most service items, the shipment *must*
        be updated with the `PrimeActualWeight` value via [updateMTOShipment](#operation/updateMTOShipment).

        **FSC - Fuel Surcharge** service items require `ActualPickupDate` to be updated on the shipment.

        A service item can be on several payment requests in the case of partial payment requests and payments.

        In the request, if no params are necessary, then just the `serviceItem` `id` is required. For example:
        ```json
        {
          "isFinal": false,
          "moveTaskOrderID": "uuid",
          "serviceItems": [
            {
              "id": "uuid",
            },
            {
              "id": "uuid",
              "params": [
                {
                  "key": "Service Item Parameter Name",
                  "value": "Service Item Parameter Value"
                }
              ]
            }
          ],
          "pointOfContact": "string"
        }
        ```

        SIT Service Items & Accepted Payment Request Parameters:
        ---
        If `WeightBilled` is not provided then the full shipment weight (`PrimeActualWeight`) will be considered in the calculation.

        **NOTE**: Diversions have a unique calcuation for payment requests without a `WeightBilled` parameter.

        If you created a payment request for a diversion and `WeightBilled` is not provided, then the following will be used in the calculation:
        - The lowest shipment weight (`PrimeActualWeight`) found in the diverted shipment chain.
        - The lowest reweigh weight found in the diverted shipment chain.

        The diverted shipment chain is created by referencing the `diversion` boolean, `divertedFromShipmentId` UUID, and matching destination to pickup addresses.
        If the chain cannot be established it will fall back to the `PrimeActualWeight` of the current shipment. This is utilized because diverted shipments are all one single shipment, but going to different locations.
        The lowest weight found is the true shipment weight, and thus we search the chain of shipments for the lowest weight found.

        **DOFSIT - Domestic origin 1st day SIT**
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```

        **DOASIT - Domestic origin add'l SIT** *(SITPaymentRequestStart & SITPaymentRequestEnd are **REQUIRED**)*
        *To create a paymentRequest for this service item, the `SITPaymentRequestStart` and `SITPaymentRequestEnd` dates must not overlap previously requested SIT dates.*
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            },
            {
              "key": "SITPaymentRequestStart",
              "value": "date"
            },
            {
              "key": "SITPaymentRequestEnd",
              "value": "date"
            }
          ]
        ```

        **DOPSIT - Domestic origin SIT pickup**
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```

        **DOSHUT - Domestic origin shuttle service**
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```

        **DDFSIT - Domestic destination 1st day SIT**
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```

        **DDASIT - Domestic destination add'l SIT** *(SITPaymentRequestStart & SITPaymentRequestEnd are **REQUIRED**)*
        *To create a paymentRequest for this service item, the `SITPaymentRequestStart` and `SITPaymentRequestEnd` dates must not overlap previously requested SIT dates.*
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            },
            {
              "key": "SITPaymentRequestStart",
              "value": "date"
            },
            {
              "key": "SITPaymentRequestEnd",
              "value": "date"
            }
          ]
        ```

        **DDDSIT - Domestic destination SIT delivery**
        *To create a paymentRequest for this service item, it must first have a final address set via [updateMTOServiceItem](#operation/updateMTOServiceItem).*
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```

        **DDSHUT - Domestic destination shuttle service**
        ```json
          "params": [
            {
              "key": "WeightBilled",
              "value": "integer"
            }
          ]
        ```
        ---
      operationId: createPaymentRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequest'
          description: Successfully created a paymentRequest object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createPaymentRequest
      tags:
      - paymentRequest
      x-codegen-request-body-name: body
  /payment-requests/{paymentRequestID}/uploads:
    post:
      description: |
        ### Functionality
        This endpoint **uploads** a Proof of Service document for a PaymentRequest.

        The PaymentRequest should already exist.

        Optional key of **isWeightTicket** indicates if the document is a weight ticket or not.
        This will be used for partial and full deliveries and makes it easier for the Task Invoicing Officers to locate and review service item documents.
        If left empty, it will assume it is NOT a weight ticket.

        The formdata in the body of the POST request that is sent should look like this if it IS a weight ticket being attached to an existing payment request:
          ```json
          {
            "file": "filePath",
            "isWeightTicket": true
          }
          ```
          If the proof of service doc is NOT a weight ticket, it will look like this - or you can leave it empty:
          ```json
          {
            "file": "filePath",
            "isWeightTicket": false
          }
          ```
          ```json
          {
            "file": "filePath",
          }
          ```

        PaymentRequests are created with the [createPaymentRequest](#operation/createPaymentRequest) endpoint.
      operationId: createUpload
      parameters:
      - description: UUID of payment request to use.
        in: path
        name: paymentRequestID
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createUpload_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadWithOmissions'
          description: Successfully created upload of digital file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createUpload
      tags:
      - paymentRequest
  /sit-address-updates:
    post:
      description: |
        **Functionality:**
        Creates an update request for a SIT service item's final delivery address.
        A newly created update request is assigned the status 'REQUESTED'  if the change in address
        is > 50 miles and automatically approved otherwise.

        **Limitations:**
        The update can be requested for APPROVED SIT service items only.
        Only ONE request is allowed per approved SIT service item.

        **DEPRECATION ON AUGUST 5TH, 2024**
        Following deprecation, when updating a service item's final delivery address, you will need to update the shipment's destination address. This will update the destination SIT service items' final delivery address upon approval.
        For `APPROVED` shipments, you can use [updateShipmentDestinationAddress](#mtoShipment/updateShipmentDestinationAddress)
        For shipments in any other status, you can use [updateMTOShipmentAddress](#mtoShipment/updateMTOShipmentAddress)
      operationId: createSITAddressUpdateRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSITAddressUpdateRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitAddressUpdate'
          description: Succesfully created a SIT address update request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request could not be processed because of conflict in the
            current state of the resource.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: createSITAddressUpdateRequest
      tags:
      - sitAddressUpdate
      x-codegen-request-body-name: body
  /moves/{locator}/documents:
    get:
      description: |
        ### Functionality
        This endpoint downloads all uploaded move order documentations into one download file by locator.

        ### Errors
        * The move must be in need counseling state.
        * The move client's origin duty location must not currently have gov counseling.
      operationId: downloadMoveOrder
      parameters:
      - description: the locator code for move order to be downloaded
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: upload type
        in: query
        name: type
        schema:
          default: ALL
          enum:
          - ALL
          - ORDERS
          - AMENDMENTS
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Move Order PDF
          headers:
            Content-Disposition:
              description: File name to download
              schema:
                type: string
        "400":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request payload is invalid.
        "403":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The request was denied.
        "404":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ClientError'
          description: The requested resource wasn't found.
        "422":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: "The request was unprocessable, likely due to bad input from\
            \ the requester."
        "500":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred.
      summary: Downloads move order as a PDF
      tags:
      - moveTaskOrder
components:
  parameters:
    ifMatch:
      description: |
        Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
      in: header
      name: If-Match
      required: true
      schema:
        type: string
  responses:
    InvalidRequest:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClientError'
      description: The request payload is invalid.
    ServerError:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: A server error occurred.
    NotImplemented:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: The requested feature is still in development.
    PreconditionFailed:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClientError'
      description: "Precondition failed, likely due to a stale eTag (If-Match). Fetch\
        \ the request again to get the updated eTag value."
    PermissionDenied:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClientError'
      description: The request was denied.
    NotFound:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClientError'
      description: The requested resource wasn't found.
    UnprocessableEntity:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ValidationError'
      description: "The request was unprocessable, likely due to bad input from the\
        \ requester."
    Conflict:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClientError'
      description: The request could not be processed because of conflict in the current
        state of the resource.
  schemas:
    Amendments:
      description: |
        Metadata outlining number of amendments for given order.
      example:
        total: 0
        availableSince: 6
      properties:
        total:
          description: The total count of amendments.
          type: integer
        availableSince:
          description: The total count of amendments available since specified time.
          type: integer
      required:
      - availableSince
      - total
      type: object
    CreateMTOShipment:
      example:
        ppmShipment:
          proGearWeight: 0
          sitExpected: true
          destinationAddress: "{}"
          estimatedWeight: 4200
          pickupAddress: "{}"
          sitEstimatedWeight: 2000
          hasProGear: true
          sitLocation: "{}"
          sitEstimatedEntryDate: 2000-01-23
          sitEstimatedDepartureDate: 2000-01-23
          spouseProGearWeight: 6
          expectedDepartureDate: 2000-01-23
        moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        primeEstimatedWeight: 4500
        destinationAddress: "{}"
        counselorRemarks: counselor approved
        requestedPickupDate: 2000-01-23
        agents:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          lastName: lastName
          agentType: RELEASING_AGENT
          phone: phone
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          lastName: lastName
          agentType: RELEASING_AGENT
          phone: phone
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        shipmentType: HHG
        mtoServiceItems:
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
        pickupAddress: "{}"
        diversion: true
        customerRemarks: handle with care
        pointOfContact: pointOfContact
      properties:
        moveTaskOrderID:
          description: The ID of the move this new shipment is for.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        requestedPickupDate:
          description: |
            The customer's preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.
          format: date
          nullable: true
          type: string
        primeEstimatedWeight:
          description: |
            The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contractor will need to contact the TOO to change it.
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        customerRemarks:
          description: |
            The customer can use the customer remarks field to inform the services counselor and the movers about any
            special circumstances for this shipment. Typical examples:
              * bulky or fragile items,
              * weapons,
              * access info for their address.

            Customer enters this information during onboarding. Optional field.
          example: handle with care
          nullable: true
          type: string
        agents:
          description: |
            A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment.
          items:
            $ref: '#/components/schemas/MTOAgent'
          maxItems: 2
          type: array
        mtoServiceItems:
          description: A list of service items connected to this shipment.
          items:
            $ref: '#/components/schemas/MTOServiceItem'
          type: array
        pickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The address where the movers should pick up this shipment.
          type: object
        destinationAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: Where the movers should deliver this shipment.
          type: object
        shipmentType:
          $ref: '#/components/schemas/MTOShipmentType'
        diversion:
          description: |
            This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.
          type: boolean
        pointOfContact:
          description: |
            Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.
          type: string
        counselorRemarks:
          example: counselor approved
          nullable: true
          type: string
        ppmShipment:
          $ref: '#/components/schemas/CreatePPMShipment'
      required:
      - moveTaskOrderID
      - shipmentType
      type: object
    CreatePPMShipment:
      description: "Creation object containing the `PPM` shipmentType specific data,\
        \ not used for other shipment types."
      example:
        proGearWeight: 0
        sitExpected: true
        destinationAddress: "{}"
        estimatedWeight: 4200
        pickupAddress: "{}"
        sitEstimatedWeight: 2000
        hasProGear: true
        sitLocation: "{}"
        sitEstimatedEntryDate: 2000-01-23
        sitEstimatedDepartureDate: 2000-01-23
        spouseProGearWeight: 6
        expectedDepartureDate: 2000-01-23
      properties:
        expectedDepartureDate:
          description: |
            Date the customer expects to begin moving from their origin.
          format: date
          type: string
        pickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The address of the origin location where goods are being moved
            from.
          type: object
        destinationAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The address of the destination location where goods are being
            delivered to.
          type: object
        sitExpected:
          description: |
            Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.

            Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`.
          type: boolean
        sitLocation:
          allOf:
          - $ref: '#/components/schemas/SITLocationType'
          - type: object
            x-nullable: true
          type: object
        sitEstimatedWeight:
          description: The estimated weight of the goods being put into storage in
            pounds.
          example: 2000
          nullable: true
          type: integer
        sitEstimatedEntryDate:
          description: The date that goods will first enter the storage location.
          format: date
          nullable: true
          type: string
        sitEstimatedDepartureDate:
          description: The date that goods will exit the storage location.
          format: date
          nullable: true
          type: string
        estimatedWeight:
          description: The estimated weight of the PPM shipment goods being moved
            in pounds.
          example: 4200
          type: integer
        hasProGear:
          description: |
            Indicates whether PPM shipment has pro gear for themselves or their spouse.
          type: boolean
        proGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to the service member in pounds.
          nullable: true
          type: integer
        spouseProGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to a spouse in pounds.
          nullable: true
          type: integer
      required:
      - estimatedWeight
      - expectedDepartureDate
      - hasProGear
      - sitExpected
      type: object
    CreatePaymentRequest:
      example:
        moveTaskOrderID: c56a4180-65aa-42ec-a945-5fd21dec0538
        isFinal: false
        serviceItems:
        - eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          params:
          - value: Service Item Parameter Value
            key: Service Item Parameter Name
          - value: Service Item Parameter Value
            key: Service Item Parameter Name
        - eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          params:
          - value: Service Item Parameter Value
            key: Service Item Parameter Name
          - value: Service Item Parameter Value
            key: Service Item Parameter Name
        pointOfContact: pointOfContact
      properties:
        isFinal:
          default: false
          type: boolean
        moveTaskOrderID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        serviceItems:
          items:
            $ref: '#/components/schemas/ServiceItem'
          minItems: 1
          type: array
        pointOfContact:
          description: Email or id of a contact person for this update.
          type: string
      required:
      - moveTaskOrderID
      - serviceItems
      type: object
    CreateSITExtension:
      description: CreateSITExtension contains the fields required for the prime to
        create a SIT Extension request.
      example:
        requestedDays: 30
        requestReason: SERIOUS_ILLNESS_MEMBER
        contractorRemarks: We need SIT additional days. The customer has not found
          a house yet.
      properties:
        requestReason:
          enum:
          - SERIOUS_ILLNESS_MEMBER
          - SERIOUS_ILLNESS_DEPENDENT
          - IMPENDING_ASSIGNEMENT
          - DIRECTED_TEMPORARY_DUTY
          - NONAVAILABILITY_OF_CIVILIAN_HOUSING
          - AWAITING_COMPLETION_OF_RESIDENCE
          - OTHER
          type: string
        contractorRemarks:
          example: We need SIT additional days. The customer has not found a house
            yet.
          type: string
        requestedDays:
          example: 30
          minimum: 1
          type: integer
      required:
      - contractorRemarks
      - requestReason
      - requestedDays
      type: object
    Error:
      example:
        instance: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detail: detail
        title: title
      properties:
        title:
          type: string
        detail:
          type: string
        instance:
          format: uuid
          type: string
      required:
      - detail
      - title
      type: object
    ListMove:
      description: |
        An abbreviated definition for a move, without all the nested information (shipments, service items, etc). Used to fetch a list of moves more efficiently.
      example:
        moveCode: HYXFJF
        createdAt: 2000-01-23T04:56:07.000+00:00
        orderID: c56a4180-65aa-42ec-a945-5fd21dec0538
        ppmType: FULL
        amendments:
          total: 0
          availableSince: 6
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        referenceId: 1001-3456
        availableToPrimeAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        moveCode:
          example: HYXFJF
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        orderID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        referenceId:
          example: 1001-3456
          type: string
        availableToPrimeAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        ppmType:
          enum:
          - FULL
          - PARTIAL
          type: string
        eTag:
          readOnly: true
          type: string
        amendments:
          $ref: '#/components/schemas/Amendments'
      type: object
    ListMoves:
      items:
        $ref: '#/components/schemas/ListMove'
      type: array
    MoveTaskOrder:
      example:
        moveCode: HYXFJF
        paymentRequests:
        - moveTaskOrderID: c56a4180-65aa-42ec-a945-5fd21dec0538
          paymentRequestNumber: 1234-5678-1
          proofOfServiceDocs:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          recalculationOfPaymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          isFinal: false
          rejectionReason: documentation was incomplete
          status: PENDING
          paymentServiceItems:
          - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
            priceCents: 6
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            rejectionReason: documentation was incomplete
            paymentServiceItemParams:
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            referenceID: 1234-5678-c56a4180
            mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            status: REQUESTED
          - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
            priceCents: 6
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            rejectionReason: documentation was incomplete
            paymentServiceItemParams:
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            referenceID: 1234-5678-c56a4180
            mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            status: REQUESTED
        - moveTaskOrderID: c56a4180-65aa-42ec-a945-5fd21dec0538
          paymentRequestNumber: 1234-5678-1
          proofOfServiceDocs:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          recalculationOfPaymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          isFinal: false
          rejectionReason: documentation was incomplete
          status: PENDING
          paymentServiceItems:
          - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
            priceCents: 6
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            rejectionReason: documentation was incomplete
            paymentServiceItemParams:
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            referenceID: 1234-5678-c56a4180
            mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            status: REQUESTED
          - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
            priceCents: 6
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            rejectionReason: documentation was incomplete
            paymentServiceItemParams:
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
              origin: PRIME
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              type: STRING
              value: "3025"
              key: ActualPickupDate
            referenceID: 1234-5678-c56a4180
            mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            status: REQUESTED
        orderID: c56a4180-65aa-42ec-a945-5fd21dec0538
        ppmType: PARTIAL
        referenceId: 1001-3456
        excessWeightAcknowledgedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        mtoShipments:
        - sitExtensions:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            requestedDays: 30
            requestReason: SERIOUS_ILLNESS_MEMBER
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            approvedDays: 30
            officeRemarks: officeRemarks
            contractorRemarks: We need SIT additional days. The customer has not found
              a house yet.
            status: PENDING
            decisionDate: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            requestedDays: 30
            requestReason: SERIOUS_ILLNESS_MEMBER
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            approvedDays: 30
            officeRemarks: officeRemarks
            contractorRemarks: We need SIT additional days. The customer has not found
              a house yet.
            status: PENDING
            decisionDate: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          secondaryDeliveryAddress: "{}"
          ppmShipment:
            hasProGear: true
            actualMoveDate: 2000-01-23
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            sitEstimatedCost: 2
            createdAt: 2000-01-23T04:56:07.000+00:00
            estimatedIncentive: 7
            advanceAmountRequested: 9
            sitEstimatedWeight: 2000
            hasRequestedAdvance: true
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            submittedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
            actualPickupPostalCode: "90210"
            sitExpected: true
            advanceAmountReceived: 3
            approvedAt: 2000-01-23T04:56:07.000+00:00
            sitEstimatedDepartureDate: 2000-01-23
            expectedDepartureDate: 2000-01-23
            proGearWeight: 5
            hasReceivedAdvance: true
            estimatedWeight: 4200
            shipmentId: 1f2270c7-7166-40ae-981e-b200ebdf3054
            sitLocation: "{}"
            sitEstimatedEntryDate: 2000-01-23
            spouseProGearWeight: 2
            status: DRAFT
            actualDestinationPostalCode: "90210"
          moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          primeEstimatedWeight: 4500
          destinationAddress: "{}"
          secondaryPickupAddress: "{}"
          counselorRemarks: handle with care
          requestedPickupDate: 2000-01-23
          scheduledDeliveryDate: 2000-01-23
          shipmentType: HHG
          createdAt: 2000-01-23T04:56:07.000+00:00
          originSitAuthEndDate: 2000-01-23
          primeEstimatedWeightRecordedDate: 2000-01-23
          storageFacility:
            address:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            phone: phone
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            facilityName: facilityName
            lotNumber: lotNumber
            email: email
          deliveryAddressUpdate:
            newSitDistanceBetween: 88
            sitOriginalAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            originalAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            shipmentID: c56a4180-65aa-42ec-a945-5fd21dec0538
            oldSitDistanceBetween: 50
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            officeRemarks: This is an office remark
            contractorRemarks: This is a contractor remark
            newAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            status: REQUESTED
          scheduledPickupDate: 2000-01-23
          destinationType: OTHER_THAN_AUTHORIZED
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          diversionReason: diversionReason
          updatedAt: 2000-01-23T04:56:07.000+00:00
          pointOfContact: pointOfContact
          actualDeliveryDate: 2000-01-23
          actualSpouseProGearWeight: 5
          actualPickupDate: 2000-01-23
          primeActualWeight: 4500
          agents:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            firstName: firstName
            lastName: lastName
            agentType: RELEASING_AGENT
            phone: phone
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            email: email
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            firstName: firstName
            lastName: lastName
            agentType: RELEASING_AGENT
            phone: phone
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            email: email
            updatedAt: 2000-01-23T04:56:07.000+00:00
          approvedDate: 2000-01-23
          requiredDeliveryDate: 2000-01-23
          actualProGearWeight: 1
          reweigh:
            requestedBy: CUSTOMER
            createdAt: 2000-01-23T04:56:07.000+00:00
            requestedAt: 2000-01-23T04:56:07.000+00:00
            shipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            weight: 2000
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            verificationProvidedAt: 2000-01-23T04:56:07.000+00:00
            verificationReason: The reweigh was not performed due to some justification
              provided by the Prime
            updatedAt: 2000-01-23T04:56:07.000+00:00
          pickupAddress: "{}"
          destinationSitAuthEndDate: 2000-01-23
          requestedDeliveryDate: 2000-01-23
          diversion: true
          customerRemarks: handle with care
          firstAvailableDeliveryDate: 2000-01-23
          ntsRecordedWeight: 4500
          status: SUBMITTED
        - sitExtensions:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            requestedDays: 30
            requestReason: SERIOUS_ILLNESS_MEMBER
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            approvedDays: 30
            officeRemarks: officeRemarks
            contractorRemarks: We need SIT additional days. The customer has not found
              a house yet.
            status: PENDING
            decisionDate: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            requestedDays: 30
            requestReason: SERIOUS_ILLNESS_MEMBER
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            approvedDays: 30
            officeRemarks: officeRemarks
            contractorRemarks: We need SIT additional days. The customer has not found
              a house yet.
            status: PENDING
            decisionDate: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          secondaryDeliveryAddress: "{}"
          ppmShipment:
            hasProGear: true
            actualMoveDate: 2000-01-23
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            sitEstimatedCost: 2
            createdAt: 2000-01-23T04:56:07.000+00:00
            estimatedIncentive: 7
            advanceAmountRequested: 9
            sitEstimatedWeight: 2000
            hasRequestedAdvance: true
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            submittedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
            actualPickupPostalCode: "90210"
            sitExpected: true
            advanceAmountReceived: 3
            approvedAt: 2000-01-23T04:56:07.000+00:00
            sitEstimatedDepartureDate: 2000-01-23
            expectedDepartureDate: 2000-01-23
            proGearWeight: 5
            hasReceivedAdvance: true
            estimatedWeight: 4200
            shipmentId: 1f2270c7-7166-40ae-981e-b200ebdf3054
            sitLocation: "{}"
            sitEstimatedEntryDate: 2000-01-23
            spouseProGearWeight: 2
            status: DRAFT
            actualDestinationPostalCode: "90210"
          moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          primeEstimatedWeight: 4500
          destinationAddress: "{}"
          secondaryPickupAddress: "{}"
          counselorRemarks: handle with care
          requestedPickupDate: 2000-01-23
          scheduledDeliveryDate: 2000-01-23
          shipmentType: HHG
          createdAt: 2000-01-23T04:56:07.000+00:00
          originSitAuthEndDate: 2000-01-23
          primeEstimatedWeightRecordedDate: 2000-01-23
          storageFacility:
            address:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            phone: phone
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            facilityName: facilityName
            lotNumber: lotNumber
            email: email
          deliveryAddressUpdate:
            newSitDistanceBetween: 88
            sitOriginalAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            originalAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            shipmentID: c56a4180-65aa-42ec-a945-5fd21dec0538
            oldSitDistanceBetween: 50
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            officeRemarks: This is an office remark
            contractorRemarks: This is a contractor remark
            newAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            status: REQUESTED
          scheduledPickupDate: 2000-01-23
          destinationType: OTHER_THAN_AUTHORIZED
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          diversionReason: diversionReason
          updatedAt: 2000-01-23T04:56:07.000+00:00
          pointOfContact: pointOfContact
          actualDeliveryDate: 2000-01-23
          actualSpouseProGearWeight: 5
          actualPickupDate: 2000-01-23
          primeActualWeight: 4500
          agents:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            firstName: firstName
            lastName: lastName
            agentType: RELEASING_AGENT
            phone: phone
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            email: email
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            firstName: firstName
            lastName: lastName
            agentType: RELEASING_AGENT
            phone: phone
            mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            email: email
            updatedAt: 2000-01-23T04:56:07.000+00:00
          approvedDate: 2000-01-23
          requiredDeliveryDate: 2000-01-23
          actualProGearWeight: 1
          reweigh:
            requestedBy: CUSTOMER
            createdAt: 2000-01-23T04:56:07.000+00:00
            requestedAt: 2000-01-23T04:56:07.000+00:00
            shipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
            weight: 2000
            eTag: eTag
            id: 1f2270c7-7166-40ae-981e-b200ebdf3054
            verificationProvidedAt: 2000-01-23T04:56:07.000+00:00
            verificationReason: The reweigh was not performed due to some justification
              provided by the Prime
            updatedAt: 2000-01-23T04:56:07.000+00:00
          pickupAddress: "{}"
          destinationSitAuthEndDate: 2000-01-23
          requestedDeliveryDate: 2000-01-23
          diversion: true
          customerRemarks: handle with care
          firstAvailableDeliveryDate: 2000-01-23
          ntsRecordedWeight: 4500
          status: SUBMITTED
        excessWeightUploadId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mtoServiceItems:
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
        ppmEstimatedWeight: 4
        eTag: eTag
        id: a502b4f1-b9c4-4faf-8bdd-68292501bf26
        availableToPrimeAt: 2000-01-23T04:56:07.000+00:00
        order:
          orderNumber: orderNumber
          linesOfAccounting: linesOfAccounting
          entitlement:
            proGearWeightSpouse: 500
            authorizedWeight: 2000
            proGearWeight: 2000
            nonTemporaryStorage: false
            organizationalClothingAndIndividualEquipment: false
            gunSafe: false
            privatelyOwnedVehicle: false
            requiredMedicalEquipmentWeight: 500
            storageInTransit: 90
            totalWeight: 500
            totalDependents: 2
            eTag: eTag
            id: 571008b1-b0de-454d-b843-d71be9f02c04
            dependentsAuthorized: true
          destinationDutyLocation:
            address:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            name: Fort Bragg North Station
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            addressID: c56a4180-65aa-42ec-a945-5fd21dec0538
          originDutyLocation:
            address:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
            name: Fort Bragg North Station
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            addressID: c56a4180-65aa-42ec-a945-5fd21dec0538
          originDutyLocationGBLOC: KKFA
          customerID: c56a4180-65aa-42ec-a945-5fd21dec0538
          rank: E_5
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          reportByDate: 2000-01-23
          ordersType: PERMANENT_CHANGE_OF_STATION
          customer:
            dodID: dodID
            emplid: emplid
            firstName: Vanya
            lastName: Petrovna
            phone: phone
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            userID: c56a4180-65aa-42ec-a945-5fd21dec0538
            branch: COAST_GUARD
            email: fake@example.com
            currentAddress:
              country: USA
              city: Anytown
              postalCode: "90210"
              streetAddress1: 123 Main Ave
              county: LOS ANGELES
              streetAddress2: Apartment 9000
              streetAddress3: Montmârtre
              eTag: eTag
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              state: AL
        updatedAt: 2000-01-23T04:56:07.000+00:00
        primeCounselingCompletedAt: 2000-01-23T04:56:07.000+00:00
        excessWeightQualifiedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: a502b4f1-b9c4-4faf-8bdd-68292501bf26
          format: uuid
          type: string
        moveCode:
          example: HYXFJF
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        orderID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        order:
          $ref: '#/components/schemas/Order'
        referenceId:
          example: 1001-3456
          type: string
        availableToPrimeAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        primeCounselingCompletedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        paymentRequests:
          items:
            $ref: '#/components/schemas/PaymentRequest'
          type: array
        mtoServiceItems:
          items:
            $ref: '#/components/schemas/MTOServiceItem'
          type: array
        mtoShipments:
          description: A list of shipments without their associated service items.
          items:
            $ref: '#/components/schemas/MTOShipmentWithoutServiceItems'
          type: array
        ppmType:
          enum:
          - PARTIAL
          - FULL
          type: string
        ppmEstimatedWeight:
          type: integer
        excessWeightQualifiedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        excessWeightAcknowledgedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        excessWeightUploadId:
          format: uuid
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        eTag:
          readOnly: true
          type: string
      required:
      - mtoServiceItems
      - mtoShipments
      - paymentRequests
      type: object
    MTOServiceItemBasic:
      allOf:
      - $ref: '#/components/schemas/MTOServiceItem'
      - properties:
          reServiceCode:
            $ref: '#/components/schemas/ReServiceCode'
        required:
        - reServiceCode
        type: object
      description: Describes a basic service item subtype of a MTOServiceItem.
    MTOServiceItemDestSIT:
      allOf:
      - $ref: '#/components/schemas/MTOServiceItem'
      - properties:
          reServiceCode:
            description: Service code allowed for this model type.
            enum:
            - DDFSIT
            - DDASIT
            type: string
          dateOfContact1:
            description: Date of attempted contact by the prime corresponding to `timeMilitary1`.
            format: date
            nullable: true
            type: string
          dateOfContact2:
            description: Date of attempted contact by the prime corresponding to `timeMilitary2`.
            format: date
            nullable: true
            type: string
          timeMilitary1:
            description: "Time of attempted contact corresponding to `dateOfContact1`,\
              \ in military format."
            example: 1400Z
            nullable: true
            pattern: "\\d{4}Z"
            type: string
          timeMilitary2:
            description: "Time of attempted contact corresponding to `dateOfContact2`,\
              \ in military format."
            example: 1400Z
            nullable: true
            pattern: "\\d{4}Z"
            type: string
          firstAvailableDeliveryDate1:
            description: First available date that Prime can deliver SIT service item.
            format: date
            nullable: true
            type: string
          firstAvailableDeliveryDate2:
            description: Second available date that Prime can deliver SIT service
              item.
            format: date
            nullable: true
            type: string
          sitEntryDate:
            description: Entry date for the SIT
            format: date
            type: string
          sitDepartureDate:
            description: Departure date for SIT. This is the end date of the SIT at
              either origin or destination. This is optional as it can be updated
              using the UpdateMTOServiceItemSIT modelType at a later date.
            format: date
            nullable: true
            type: string
          sitDestinationFinalAddress:
            $ref: '#/components/schemas/Address'
          reason:
            description: |
              The reason item has been placed in SIT.
            nullable: true
            type: string
            x-omitempty: false
          sitAddressUpdates:
            $ref: '#/components/schemas/SitAddressUpdates'
          sitRequestedDelivery:
            description: Date when the customer has requested delivery out of SIT.
            format: date
            nullable: true
            type: string
          sitCustomerContacted:
            description: Date when the customer contacted the prime for a delivery
              out of SIT.
            format: date
            nullable: true
            type: string
        required:
        - reServiceCode
        - reason
        - sitEntryDate
        type: object
      description: Describes a domestic destination SIT service item. Subtype of a
        MTOServiceItem.
    MTOServiceItemDomesticCrating:
      allOf:
      - $ref: '#/components/schemas/MTOServiceItem'
      - properties:
          reServiceCode:
            description: A unique code for the service item. Indicates if the service
              is for crating (DCRT) or uncrating (DUCRT).
            enum:
            - DCRT
            - DUCRT
            type: string
          item:
            $ref: '#/components/schemas/MTOServiceItemDomesticCrating_allOf_item'
          crate:
            $ref: '#/components/schemas/MTOServiceItemDomesticCrating_allOf_crate'
          description:
            description: A description of the item being crated.
            example: Decorated horse head to be crated.
            type: string
          reason:
            description: |
              The contractor's explanation for why an item needed to be crated or uncrated. Used by the TOO while deciding to approve or reject the service item.
            example: Storage items need to be picked up
            nullable: true
            type: string
            x-omitempty: false
          standaloneCrate:
            nullable: true
            type: boolean
        required:
        - crate
        - description
        - item
        - reServiceCode
        type: object
      description: Describes a domestic crating/uncrating service item subtype of
        a MTOServiceItem.
    MTOServiceItemOriginSIT:
      allOf:
      - $ref: '#/components/schemas/MTOServiceItem'
      - properties:
          reServiceCode:
            description: Service code allowed for this model type.
            enum:
            - DOFSIT
            - DOASIT
            type: string
          reason:
            description: Explanation of why Prime is picking up SIT item.
            example: Storage items need to be picked up
            type: string
          sitPostalCode:
            example: "90210"
            format: zip
            pattern: "^(\\d{5}([\\-]\\d{4})?)$"
            type: string
          sitEntryDate:
            description: Entry date for the SIT
            format: date
            type: string
          sitDepartureDate:
            description: Departure date for SIT. This is the end date of the SIT at
              either origin or destination. This is optional as it can be updated
              using the UpdateMTOServiceItemSIT modelType at a later date.
            format: date
            nullable: true
            type: string
          sitHHGActualOrigin:
            $ref: '#/components/schemas/Address'
          sitHHGOriginalOrigin:
            $ref: '#/components/schemas/Address'
          requestApprovalsRequestedStatus:
            type: boolean
          sitRequestedDelivery:
            description: Date when the customer has requested delivery out of SIT.
            format: date
            nullable: true
            type: string
          sitCustomerContacted:
            description: Date when the customer contacted the prime for a delivery
              out of SIT.
            format: date
            nullable: true
            type: string
        required:
        - reServiceCode
        - reason
        - sitEntryDate
        - sitPostalCode
        type: object
      description: Describes a domestic origin SIT service item. Subtype of a MTOServiceItem.
    MTOServiceItemShuttle:
      allOf:
      - $ref: '#/components/schemas/MTOServiceItem'
      - properties:
          reServiceCode:
            description: |
              A unique code for the service item. Indicates if shuttling is requested for the shipment origin (`DOSHUT`) or destination (`DDSHUT`).
            enum:
            - DOSHUT
            - DDSHUT
            type: string
          reason:
            description: |
              The contractor's explanation for why a shuttle service is requested. Used by the TOO while deciding to approve or reject the service item.
            example: Storage items need to be picked up.
            type: string
          estimatedWeight:
            description: An estimate of how much weight from a shipment will be included
              in the shuttling service.
            example: 4200
            nullable: true
            type: integer
            x-omitempty: false
          actualWeight:
            description: "A record of the actual weight that was shuttled. Provided\
              \ by the movers, based on weight tickets."
            example: 4000
            nullable: true
            type: integer
            x-omitempty: false
        required:
        - reServiceCode
        - reason
        type: object
      description: Describes a shuttle service item.
    MTOShipment:
      allOf:
      - $ref: '#/components/schemas/MTOShipmentWithoutServiceItems'
      example:
        mtoServiceItems:
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
        - moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          serviceRequestDocuments:
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          - uploads:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              filename: filename.pdf
              bytes: 0
              id: c56a4180-65aa-42ec-a945-5fd21dec0538
              contentType: application/pdf
              url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
              status: INFECTED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          reServiceName: reServiceName
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          modelType: MTOServiceItemBasic
          rejectionReason: item was too heavy
          status: SUBMITTED
      properties:
        mtoServiceItems:
          description: A list of service items connected to this shipment.
          items:
            $ref: '#/components/schemas/MTOServiceItem'
          readOnly: true
          type: array
    UpdateShipmentDestinationAddress:
      description: UpdateShipmentDestinationAddress contains the fields required for
        the prime to request an update for the destination address on an MTO Shipment.
      example:
        newAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        contractorRemarks: Customer reached out to me this week and let me know they
          want to move somewhere else.
      properties:
        newAddress:
          $ref: '#/components/schemas/Address'
        contractorRemarks:
          description: "This is the remark the Prime has entered, which would be the\
            \ reason there is an address change."
          example: Customer reached out to me this week and let me know they want
            to move somewhere else.
          type: string
      required:
      - contractorRemarks
      - newAddress
      type: object
    CreateSITAddressUpdateRequest:
      description: CreateSITAddressUpdateRequest contains the fields required for
        the prime to create a SIT address update request.
      example:
        newAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        contractorRemarks: Customer reached out to me this week & let me know they
          want to move closer to family.
        mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
      properties:
        newAddress:
          $ref: '#/components/schemas/Address'
        contractorRemarks:
          example: Customer reached out to me this week & let me know they want to
            move closer to family.
          type: string
        mtoServiceItemID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
      required:
      - contractorRemarks
      type: object
    ServiceItem:
      example:
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        params:
        - value: Service Item Parameter Value
          key: Service Item Parameter Name
        - value: Service Item Parameter Value
          key: Service Item Parameter Name
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        params:
          description: |
            This should be populated for the following service items:
              * DOASIT(Domestic origin Additional day SIT)
              * DDASIT(Domestic destination Additional day SIT)

            Both take in the following param keys:
              * `SITPaymentRequestStart`
              * `SITPaymentRequestEnd`

            The value of each is a date string in the format "YYYY-MM-DD" (e.g. "2023-01-15")
          items:
            $ref: '#/components/schemas/ServiceItem_params_inner'
          type: array
        eTag:
          readOnly: true
          type: string
      type: object
    UpdateMTOServiceItem:
      description: UpdateMTOServiceItem describes a base type of a service item. Polymorphic
        type. Both Move Task Orders and MTO Shipments will have MTO Service Items.
      discriminator:
        propertyName: modelType
      example:
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        modelType: UpdateMTOServiceItemSIT
      properties:
        id:
          description: ID of the service item. Must match path.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        modelType:
          $ref: '#/components/schemas/UpdateMTOServiceItemModelType'
      required:
      - modelType
      type: object
    UpdateMTOServiceItemModelType:
      description: |
        Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
          * DDDSIT - UpdateMTOServiceItemSIT
          * DOPSIT - UpdateMTOServiceItemSIT
          * DOASIT - UpdateMTOServiceItemSIT
          * DOFSIT - UpdateMTOServiceItemSIT
          * DDSHUT - UpdateMTOServiceItemShuttle
          * DOSHUT - UpdateMTOServiceItemShuttle

        The documentation will then update with the supported fields.
      enum:
      - UpdateMTOServiceItemSIT
      - UpdateMTOServiceItemShuttle
      type: string
    UpdateMTOServiceItemShuttle:
      allOf:
      - $ref: '#/components/schemas/UpdateMTOServiceItem'
      - properties:
          actualWeight:
            description: "Provided by the movers, based on weight tickets. Relevant\
              \ for shuttling (DDSHUT & DOSHUT) service items."
            example: 4000
            nullable: true
            type: integer
            x-omitempty: false
          estimatedWeight:
            description: An estimate of how much weight from a shipment will be included
              in a shuttling (DDSHUT & DOSHUT) service item.
            example: 4200
            nullable: true
            type: integer
            x-omitempty: false
          reServiceCode:
            description: Service code allowed for this model type.
            enum:
            - DDSHUT
            - DOSHUT
            type: string
        type: object
      description: |
        Subtype used to provide the estimated weight and actual weight for shuttle. This is not creating a new service item but rather updating an existing service item.
    UpdateMTOServiceItemSIT:
      allOf:
      - $ref: '#/components/schemas/UpdateMTOServiceItem'
      - properties:
          reServiceCode:
            description: Service code allowed for this model type.
            enum:
            - DDDSIT
            - DDASIT
            - DOPSIT
            - DOASIT
            - DOFSIT
            type: string
          sitDepartureDate:
            description: Departure date for SIT. This is the end date of the SIT at
              either origin or destination.
            format: date
            type: string
          sitDestinationFinalAddress:
            $ref: '#/components/schemas/Address'
          dateOfContact1:
            description: Date of attempted contact by the prime corresponding to 'timeMilitary1'.
            format: date
            nullable: true
            type: string
          timeMilitary1:
            description: "Time of attempted contact by the prime corresponding to\
              \ 'dateOfContact1', in military format."
            example: 1400Z
            nullable: true
            pattern: "\\d{4}Z"
            type: string
          firstAvailableDeliveryDate1:
            description: First available date that Prime can deliver SIT service item.
            format: date
            nullable: true
            type: string
          dateOfContact2:
            description: Date of attempted contact by the prime corresponding to 'timeMilitary2'.
            format: date
            nullable: true
            type: string
          timeMilitary2:
            description: "Time of attempted contact by the prime corresponding to\
              \ 'dateOfContact2', in military format."
            example: 1400Z
            nullable: true
            pattern: "\\d{4}Z"
            type: string
          firstAvailableDeliveryDate2:
            description: Second available date that Prime can deliver SIT service
              item.
            format: date
            nullable: true
            type: string
          sitRequestedDelivery:
            description: Date when the customer has requested delivery out of SIT.
            format: date
            nullable: true
            type: string
          sitCustomerContacted:
            description: Date when the customer contacted the prime for a delivery
              out of SIT.
            format: date
            nullable: true
            type: string
          updateReason:
            description: Reason for updating service item.
            nullable: true
            type: string
          sitPostalCode:
            example: "90210"
            format: zip
            nullable: true
            pattern: "^(\\d{5}([\\-]\\d{4})?)$"
            type: string
          sitEntryDate:
            description: Entry date for the SIT.
            format: date
            nullable: true
            type: string
          requestApprovalsRequestedStatus:
            description: Indicates if "Approvals Requested" status is being requested.
            nullable: true
            type: boolean
        type: object
      description: |
        Subtype used to provide the departure date for origin or destination SIT. This is not creating a new service item but rather updating and existing service item.
    UpdateMTOShipment:
      example:
        secondaryDeliveryAddress: "{}"
        actualDeliveryDate: 2000-01-23
        ppmShipment:
          proGearWeight: 0
          sitExpected: true
          estimatedWeight: 4200
          sitEstimatedWeight: 2000
          hasProGear: true
          sitLocation: "{}"
          sitEstimatedEntryDate: 2000-01-23
          sitEstimatedDepartureDate: 2000-01-23
          spouseProGearWeight: 6
          expectedDepartureDate: 2000-01-23
        actualSpouseProGearWeight: 4500
        primeEstimatedWeight: 4500
        destinationAddress: "{}"
        secondaryPickupAddress: "{}"
        actualPickupDate: 2000-01-23
        counselorRemarks: counselor approved
        primeActualWeight: 4500
        scheduledDeliveryDate: 2000-01-23
        shipmentType: HHG
        actualProGearWeight: 4500
        pickupAddress: "{}"
        storageFacility:
          address:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          phone: phone
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          facilityName: facilityName
          lotNumber: lotNumber
          email: email
        diversion: true
        scheduledPickupDate: 2000-01-23
        destinationType: OTHER_THAN_AUTHORIZED
        firstAvailableDeliveryDate: 2000-01-23
        ntsRecordedWeight: 4500
        pointOfContact: pointOfContact
      properties:
        actualProGearWeight:
          description: The actual weight of any pro gear shipped during a move.
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        actualSpouseProGearWeight:
          description: The actual weight of any pro gear shipped during a move.
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        scheduledPickupDate:
          description: The date the Prime contractor scheduled to pick up this shipment
            after consultation with the customer.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        actualPickupDate:
          description: The date when the Prime contractor actually picked up the shipment.
            Updated after-the-fact.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        firstAvailableDeliveryDate:
          description: |
            The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        scheduledDeliveryDate:
          description: The date the Prime contractor scheduled to deliver this shipment
            after consultation with the customer.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        actualDeliveryDate:
          description: The date when the Prime contractor actually delivered the shipment.
            Updated after-the-fact.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        primeEstimatedWeight:
          description: |
            The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        primeActualWeight:
          description: "The actual weight of the shipment, provided after the Prime\
            \ packs, picks up, and weighs a customer's shipment."
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        ntsRecordedWeight:
          description: The previously recorded weight for the NTS Shipment. Used for
            NTS Release to know what the previous primeActualWeight or billable weight
            was.
          example: 4500
          nullable: true
          type: integer
          x-formatting: weight
        pickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: |
            The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.
          type: object
        destinationAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: |
            Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details
            during onboarding, if they know their new address already.

            May be blank when entered by the customer, required when entered by the Prime. May not represent the true
            final destination due to the shipment being diverted or placed in SIT.
          type: object
        destinationType:
          $ref: '#/components/schemas/DestinationType'
        secondaryPickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: "A second pickup address for this shipment, if the customer\
            \ entered one. An optional field."
          type: object
        secondaryDeliveryAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: "A second delivery address for this shipment, if the customer\
            \ entered one. An optional field."
          type: object
        storageFacility:
          $ref: '#/components/schemas/UpdateMTOShipment_storageFacility'
        shipmentType:
          $ref: '#/components/schemas/MTOShipmentType'
        diversion:
          description: |
            This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.
          type: boolean
        pointOfContact:
          description: |
            Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.
          type: string
        counselorRemarks:
          example: counselor approved
          nullable: true
          type: string
        ppmShipment:
          $ref: '#/components/schemas/UpdatePPMShipment'
      type: object
    UpdatePPMShipment:
      description: The PPM specific fields of the shipment with values being changed
      example:
        proGearWeight: 0
        sitExpected: true
        estimatedWeight: 4200
        sitEstimatedWeight: 2000
        hasProGear: true
        sitLocation: "{}"
        sitEstimatedEntryDate: 2000-01-23
        sitEstimatedDepartureDate: 2000-01-23
        spouseProGearWeight: 6
        expectedDepartureDate: 2000-01-23
      properties:
        expectedDepartureDate:
          description: |
            Date the customer expects to begin moving from their origin.
          format: date
          nullable: true
          type: string
        sitExpected:
          description: |
            Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.

            Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`.
          nullable: true
          type: boolean
        sitLocation:
          allOf:
          - $ref: '#/components/schemas/SITLocationType'
          - type: object
            x-nullable: true
          type: object
        sitEstimatedWeight:
          description: The estimated weight of the goods being put into storage.
          example: 2000
          nullable: true
          type: integer
        sitEstimatedEntryDate:
          description: The date that goods will first enter the storage location.
          format: date
          nullable: true
          type: string
        sitEstimatedDepartureDate:
          description: The date that goods will exit the storage location.
          format: date
          nullable: true
          type: string
        estimatedWeight:
          description: The estimated weight of the PPM shipment goods being moved.
          example: 4200
          nullable: true
          type: integer
        hasProGear:
          description: |
            Indicates whether PPM shipment has pro gear for themselves or their spouse.
          nullable: true
          type: boolean
        proGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to the service member.
          nullable: true
          type: integer
        spouseProGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to a spouse.
          nullable: true
          type: integer
      type: object
    UpdateMTOShipmentStatus:
      description: Contains the statuses available to the Prime when updating the
        state of a shipment.
      example:
        status: CANCELED
      properties:
        status:
          enum:
          - CANCELED
          type: string
      type: object
    UpdateReweigh:
      description: Contains the fields available to the Prime when updating a reweigh
        record.
      example:
        weight: 2000
        verificationReason: The reweigh was not performed because the shipment was
          already delivered
      properties:
        weight:
          description: The total reweighed weight for the shipment in pounds.
          example: 2000
          minimum: 1
          nullable: true
          type: integer
          x-omitempty: false
          x-formatting: weight
        verificationReason:
          description: In lieu of a document being uploaded indicating why a reweigh
            did not occur.
          example: The reweigh was not performed because the shipment was already
            delivered
          nullable: true
          type: string
          x-omitempty: false
      type: object
    ClientError:
      example:
        instance: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detail: detail
        title: title
      properties:
        title:
          type: string
        detail:
          type: string
        instance:
          format: uuid
          type: string
      required:
      - detail
      - instance
      - title
      type: object
    Address:
      description: A postal address
      example:
        country: USA
        city: Anytown
        postalCode: "90210"
        streetAddress1: 123 Main Ave
        county: LOS ANGELES
        streetAddress2: Apartment 9000
        streetAddress3: Montmârtre
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        state: AL
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        streetAddress1:
          example: 123 Main Ave
          title: Street address 1
          type: string
        streetAddress2:
          example: Apartment 9000
          nullable: true
          title: Street address 2
          type: string
        streetAddress3:
          example: Montmârtre
          nullable: true
          title: Address Line 3
          type: string
        city:
          example: Anytown
          title: City
          type: string
        eTag:
          readOnly: true
          type: string
        state:
          enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
          title: State
          type: string
          x-display-value:
            AL: AL
            AK: AK
            AR: AR
            AZ: AZ
            CA: CA
            CO: CO
            CT: CT
            DC: DC
            DE: DE
            FL: FL
            GA: GA
            HI: HI
            IA: IA
            ID: ID
            IL: IL
            IN: IN
            KS: KS
            KY: KY
            LA: LA
            MA: MA
            MD: MD
            ME: ME
            MI: MI
            MN: MN
            MO: MO
            MS: MS
            MT: MT
            NC: NC
            ND: ND
            NE: NE
            NH: NH
            NJ: NJ
            NM: NM
            NV: NV
            NY: NY
            OH: OH
            OK: OK
            OR: OR
            PA: PA
            RI: RI
            SC: SC
            SD: SD
            TN: TN
            TX: TX
            UT: UT
            VA: VA
            VT: VT
            WA: WA
            WI: WI
            WV: WV
            WY: WY
        postalCode:
          example: "90210"
          format: zip
          pattern: "^(\\d{5}([\\-]\\d{4})?)$"
          title: ZIP
          type: string
        country:
          default: USA
          example: USA
          nullable: true
          title: Country
          type: string
        county:
          example: LOS ANGELES
          nullable: true
          title: County
          type: string
      required:
      - city
      - postalCode
      - state
      - streetAddress1
      type: object
    Customer:
      example:
        dodID: dodID
        emplid: emplid
        firstName: Vanya
        lastName: Petrovna
        phone: phone
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        userID: c56a4180-65aa-42ec-a945-5fd21dec0538
        branch: COAST_GUARD
        email: fake@example.com
        currentAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        dodID:
          type: string
        emplid:
          type: string
        userID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        currentAddress:
          $ref: '#/components/schemas/Address'
        firstName:
          example: Vanya
          type: string
        lastName:
          example: Petrovna
          type: string
        branch:
          example: COAST_GUARD
          type: string
        phone:
          format: telephone
          type: string
        email:
          example: fake@example.com
          format: x-email
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          type: string
        eTag:
          readOnly: true
          type: string
      type: object
    Entitlements:
      example:
        proGearWeightSpouse: 500
        authorizedWeight: 2000
        proGearWeight: 2000
        nonTemporaryStorage: false
        organizationalClothingAndIndividualEquipment: false
        gunSafe: false
        privatelyOwnedVehicle: false
        requiredMedicalEquipmentWeight: 500
        storageInTransit: 90
        totalWeight: 500
        totalDependents: 2
        eTag: eTag
        id: 571008b1-b0de-454d-b843-d71be9f02c04
        dependentsAuthorized: true
      properties:
        id:
          example: 571008b1-b0de-454d-b843-d71be9f02c04
          format: uuid
          type: string
        authorizedWeight:
          example: 2000
          nullable: true
          type: integer
          x-formatting: weight
        dependentsAuthorized:
          example: true
          nullable: true
          type: boolean
        gunSafe:
          example: false
          type: boolean
        nonTemporaryStorage:
          example: false
          nullable: true
          type: boolean
        privatelyOwnedVehicle:
          example: false
          nullable: true
          type: boolean
        proGearWeight:
          example: 2000
          type: integer
          x-formatting: weight
        proGearWeightSpouse:
          example: 500
          type: integer
          x-formatting: weight
        requiredMedicalEquipmentWeight:
          example: 500
          type: integer
          x-formatting: weight
        organizationalClothingAndIndividualEquipment:
          example: false
          type: boolean
        storageInTransit:
          example: 90
          type: integer
        totalWeight:
          example: 500
          type: integer
          x-formatting: weight
        totalDependents:
          example: 2
          type: integer
        eTag:
          readOnly: true
          type: string
      type: object
    DutyLocation:
      example:
        address:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        name: Fort Bragg North Station
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        addressID: c56a4180-65aa-42ec-a945-5fd21dec0538
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        name:
          example: Fort Bragg North Station
          type: string
        addressID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        address:
          $ref: '#/components/schemas/Address'
        eTag:
          readOnly: true
          type: string
      type: object
    OrdersType:
      enum:
      - PERMANENT_CHANGE_OF_STATION
      - LOCAL_MOVE
      - RETIREMENT
      - SEPARATION
      - WOUNDED_WARRIOR
      - BLUEBARK
      - SAFETY
      title: Orders type
      type: string
      x-display-value:
        PERMANENT_CHANGE_OF_STATION: Permanent Change Of Station
        LOCAL_MOVE: Local Move
        RETIREMENT: Retirement
        SEPARATION: Separation
        WOUNDED_WARRIOR: Wounded Warrior
        BLUEBARK: BLUEBARK
        SAFETY: Safety
    Order:
      example:
        orderNumber: orderNumber
        linesOfAccounting: linesOfAccounting
        entitlement:
          proGearWeightSpouse: 500
          authorizedWeight: 2000
          proGearWeight: 2000
          nonTemporaryStorage: false
          organizationalClothingAndIndividualEquipment: false
          gunSafe: false
          privatelyOwnedVehicle: false
          requiredMedicalEquipmentWeight: 500
          storageInTransit: 90
          totalWeight: 500
          totalDependents: 2
          eTag: eTag
          id: 571008b1-b0de-454d-b843-d71be9f02c04
          dependentsAuthorized: true
        destinationDutyLocation:
          address:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          name: Fort Bragg North Station
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          addressID: c56a4180-65aa-42ec-a945-5fd21dec0538
        originDutyLocation:
          address:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          name: Fort Bragg North Station
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          addressID: c56a4180-65aa-42ec-a945-5fd21dec0538
        originDutyLocationGBLOC: KKFA
        customerID: c56a4180-65aa-42ec-a945-5fd21dec0538
        rank: E_5
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        reportByDate: 2000-01-23
        ordersType: PERMANENT_CHANGE_OF_STATION
        customer:
          dodID: dodID
          emplid: emplid
          firstName: Vanya
          lastName: Petrovna
          phone: phone
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          userID: c56a4180-65aa-42ec-a945-5fd21dec0538
          branch: COAST_GUARD
          email: fake@example.com
          currentAddress:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        customerID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        entitlement:
          $ref: '#/components/schemas/Entitlements'
        destinationDutyLocation:
          $ref: '#/components/schemas/DutyLocation'
        originDutyLocation:
          $ref: '#/components/schemas/DutyLocation'
        originDutyLocationGBLOC:
          example: KKFA
          type: string
        rank:
          example: E_5
          type: string
        reportByDate:
          format: date
          type: string
        ordersType:
          $ref: '#/components/schemas/OrdersType'
        orderNumber:
          type: string
        linesOfAccounting:
          type: string
        eTag:
          readOnly: true
          type: string
      required:
      - linesOfAccounting
      - orderNumber
      - rank
      type: object
    PaymentRequestStatus:
      enum:
      - PENDING
      - REVIEWED
      - REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED
      - SENT_TO_GEX
      - RECEIVED_BY_GEX
      - PAID
      - EDI_ERROR
      - DEPRECATED
      title: Payment Request Status
      type: string
    UploadWithOmissions:
      description: An uploaded file.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        filename: filename.pdf
        bytes: 0
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        contentType: application/pdf
        url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
        status: INFECTED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        url:
          example: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uri
          type: string
        filename:
          example: filename.pdf
          type: string
        contentType:
          example: application/pdf
          format: mime-type
          type: string
        bytes:
          type: integer
        status:
          enum:
          - INFECTED
          - CLEAN
          - PROCESSING
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - bytes
      - contentType
      - filename
      type: object
    ProofOfServiceDoc:
      example:
        uploads:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          filename: filename.pdf
          bytes: 0
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          contentType: application/pdf
          url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
          status: INFECTED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          filename: filename.pdf
          bytes: 0
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          contentType: application/pdf
          url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
          status: INFECTED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        uploads:
          items:
            $ref: '#/components/schemas/UploadWithOmissions'
          type: array
      type: object
    ProofOfServiceDocs:
      items:
        $ref: '#/components/schemas/ProofOfServiceDoc'
      type: array
    PaymentServiceItemStatus:
      enum:
      - REQUESTED
      - APPROVED
      - DENIED
      - SENT_TO_GEX
      - PAID
      - EDI_ERROR
      title: Payment Service Item Status
      type: string
    ServiceItemParamName:
      enum:
      - ActualPickupDate
      - ContractCode
      - ContractYearName
      - CubicFeetBilled
      - CubicFeetCrating
      - DimensionHeight
      - DimensionLength
      - DimensionWidth
      - DistanceZip
      - DistanceZipSITDest
      - DistanceZipSITOrigin
      - EIAFuelPrice
      - EscalationCompounded
      - FSCMultiplier
      - FSCPriceDifferenceInCents
      - FSCWeightBasedDistanceMultiplier
      - IsPeak
      - MarketDest
      - MarketOrigin
      - MTOAvailableToPrimeAt
      - NTSPackingFactor
      - NumberDaysSIT
      - PriceAreaDest
      - PriceAreaIntlDest
      - PriceAreaIntlOrigin
      - PriceAreaOrigin
      - PriceRateOrFactor
      - PSI_LinehaulDom
      - PSI_LinehaulDomPrice
      - PSI_LinehaulShort
      - PSI_LinehaulShortPrice
      - PSI_PriceDomDest
      - PSI_PriceDomDestPrice
      - PSI_PriceDomOrigin
      - PSI_PriceDomOriginPrice
      - PSI_ShippingLinehaulIntlCO
      - PSI_ShippingLinehaulIntlCOPrice
      - PSI_ShippingLinehaulIntlOC
      - PSI_ShippingLinehaulIntlOCPrice
      - PSI_ShippingLinehaulIntlOO
      - PSI_ShippingLinehaulIntlOOPrice
      - RateAreaNonStdDest
      - RateAreaNonStdOrigin
      - ReferenceDate
      - RequestedPickupDate
      - ServiceAreaDest
      - ServiceAreaOrigin
      - ServicesScheduleDest
      - ServicesScheduleOrigin
      - SITPaymentRequestEnd
      - SITPaymentRequestStart
      - SITScheduleDest
      - SITScheduleOrigin
      - SITServiceAreaDest
      - SITServiceAreaOrigin
      - WeightAdjusted
      - WeightBilled
      - WeightEstimated
      - WeightOriginal
      - WeightReweigh
      - ZipDestAddress
      - ZipPickupAddress
      - ZipSITDestHHGFinalAddress
      - ZipSITDestHHGOriginalAddress
      - ZipSITOriginHHGActualAddress
      - ZipSITOriginHHGOriginalAddress
      - StandaloneCrate
      - StandaloneCrateCap
      - UncappedRequestTotal
      type: string
    ServiceItemParamType:
      enum:
      - STRING
      - DATE
      - INTEGER
      - DECIMAL
      - TIMESTAMP
      - PaymentServiceItemUUID
      - BOOLEAN
      type: string
    ServiceItemParamOrigin:
      enum:
      - PRIME
      - SYSTEM
      - PRICER
      - PAYMENT_REQUEST
      type: string
    PaymentServiceItemParam:
      example:
        paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
        origin: PRIME
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        type: STRING
        value: "3025"
        key: ActualPickupDate
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          readOnly: true
          type: string
        paymentServiceItemID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        key:
          $ref: '#/components/schemas/ServiceItemParamName'
        value:
          example: "3025"
          type: string
        type:
          $ref: '#/components/schemas/ServiceItemParamType'
        origin:
          $ref: '#/components/schemas/ServiceItemParamOrigin'
        eTag:
          readOnly: true
          type: string
      type: object
    PaymentServiceItemParams:
      items:
        $ref: '#/components/schemas/PaymentServiceItemParam'
      type: array
    PaymentServiceItem:
      example:
        paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
        priceCents: 6
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        rejectionReason: documentation was incomplete
        paymentServiceItemParams:
        - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
          origin: PRIME
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          type: STRING
          value: "3025"
          key: ActualPickupDate
        - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
          origin: PRIME
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          type: STRING
          value: "3025"
          key: ActualPickupDate
        referenceID: 1234-5678-c56a4180
        mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
        status: REQUESTED
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          readOnly: true
          type: string
        paymentRequestID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        mtoServiceItemID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        status:
          $ref: '#/components/schemas/PaymentServiceItemStatus'
        priceCents:
          format: cents
          nullable: true
          title: Price of the service item in cents
          type: integer
        rejectionReason:
          example: documentation was incomplete
          nullable: true
          type: string
        referenceID:
          example: 1234-5678-c56a4180
          format: string
          readOnly: true
          type: object
        paymentServiceItemParams:
          items:
            $ref: '#/components/schemas/PaymentServiceItemParam'
          type: array
        eTag:
          readOnly: true
          type: string
      type: object
    PaymentServiceItems:
      items:
        $ref: '#/components/schemas/PaymentServiceItem'
      type: array
    PaymentRequest:
      example:
        moveTaskOrderID: c56a4180-65aa-42ec-a945-5fd21dec0538
        paymentRequestNumber: 1234-5678-1
        proofOfServiceDocs:
        - uploads:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - uploads:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        recalculationOfPaymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        isFinal: false
        rejectionReason: documentation was incomplete
        status: PENDING
        paymentServiceItems:
        - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
          priceCents: 6
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          rejectionReason: documentation was incomplete
          paymentServiceItemParams:
          - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            origin: PRIME
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            type: STRING
            value: "3025"
            key: ActualPickupDate
          - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            origin: PRIME
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            type: STRING
            value: "3025"
            key: ActualPickupDate
          referenceID: 1234-5678-c56a4180
          mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
          status: REQUESTED
        - paymentRequestID: c56a4180-65aa-42ec-a945-5fd21dec0538
          priceCents: 6
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          rejectionReason: documentation was incomplete
          paymentServiceItemParams:
          - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            origin: PRIME
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            type: STRING
            value: "3025"
            key: ActualPickupDate
          - paymentServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
            origin: PRIME
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            type: STRING
            value: "3025"
            key: ActualPickupDate
          referenceID: 1234-5678-c56a4180
          mtoServiceItemID: c56a4180-65aa-42ec-a945-5fd21dec0538
          status: REQUESTED
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          readOnly: true
          type: string
        isFinal:
          default: false
          type: boolean
        moveTaskOrderID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        rejectionReason:
          example: documentation was incomplete
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentRequestStatus'
        paymentRequestNumber:
          example: 1234-5678-1
          readOnly: true
          type: string
        recalculationOfPaymentRequestID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          nullable: true
          readOnly: true
          type: string
        proofOfServiceDocs:
          items:
            $ref: '#/components/schemas/ProofOfServiceDoc'
          type: array
        paymentServiceItems:
          items:
            $ref: '#/components/schemas/PaymentServiceItem'
          type: array
        eTag:
          readOnly: true
          type: string
      type: object
    PaymentRequests:
      items:
        $ref: '#/components/schemas/PaymentRequest'
      type: array
    MTOServiceItemStatus:
      description: "The status of a service item, indicating where it is in the TOO's\
        \ approval process."
      enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
      type: string
    MTOServiceItemModelType:
      description: |
        Describes all model sub-types for a MTOServiceItem model.

        Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.
          * DOFSIT, DOASIT - MTOServiceItemOriginSIT
          * DDFSIT, DDASIT - MTOServiceItemDestSIT
          * DOSHUT, DDSHUT - MTOServiceItemShuttle
          * DCRT, DUCRT - MTOServiceItemDomesticCrating

        The documentation will then update with the supported fields.
      enum:
      - MTOServiceItemBasic
      - MTOServiceItemOriginSIT
      - MTOServiceItemDestSIT
      - MTOServiceItemShuttle
      - MTOServiceItemDomesticCrating
      type: string
    ServiceRequestDocument:
      example:
        uploads:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          filename: filename.pdf
          bytes: 0
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          contentType: application/pdf
          url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
          status: INFECTED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          filename: filename.pdf
          bytes: 0
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          contentType: application/pdf
          url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
          status: INFECTED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        uploads:
          items:
            $ref: '#/components/schemas/UploadWithOmissions'
          type: array
      type: object
    ServiceRequestDocuments:
      items:
        $ref: '#/components/schemas/ServiceRequestDocument'
      type: array
    MTOServiceItem:
      description: MTOServiceItem describes a base type of a service item. Polymorphic
        type.
      discriminator:
        propertyName: modelType
      example:
        moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        serviceRequestDocuments:
        - uploads:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - uploads:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            filename: filename.pdf
            bytes: 0
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            contentType: application/pdf
            url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
            status: INFECTED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        reServiceName: reServiceName
        mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        modelType: MTOServiceItemBasic
        rejectionReason: item was too heavy
        status: SUBMITTED
      properties:
        id:
          description: The ID of the service item.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        moveTaskOrderID:
          description: The ID of the move for this service item.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        mtoShipmentID:
          description: "The ID of the shipment this service is for, if any. Optional."
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        reServiceName:
          description: The full descriptive name of the service.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/MTOServiceItemStatus'
        rejectionReason:
          description: The reason why this service item was rejected by the TOO.
          example: item was too heavy
          nullable: true
          readOnly: true
          type: string
        modelType:
          $ref: '#/components/schemas/MTOServiceItemModelType'
        serviceRequestDocuments:
          items:
            $ref: '#/components/schemas/ServiceRequestDocument'
          type: array
        eTag:
          description: A hash unique to this service item that should be used as the
            "If-Match" header for any updates.
          readOnly: true
          type: string
      required:
      - modelType
      - moveTaskOrderID
      type: object
    MTOAgentType:
      description: |
        The type for this agent. `RELEASING` means they have authority on pickup, `RECEIVING` means they can receive the shipment on delivery.
      enum:
      - RELEASING_AGENT
      - RECEIVING_AGENT
      example: RELEASING_AGENT
      title: Agent Type
      type: string
    MTOAgent:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        lastName: lastName
        agentType: RELEASING_AGENT
        phone: phone
        mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        email: email
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The ID of the agent.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        mtoShipmentID:
          description: The ID of the shipment this agent is permitted to release/receive.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          format: x-email
          nullable: true
          pattern: "^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})?$"
          type: string
        phone:
          format: telephone
          nullable: true
          pattern: "^([2-9]\\d{2}-\\d{3}-\\d{4})?$"
          type: string
        agentType:
          $ref: '#/components/schemas/MTOAgentType'
        eTag:
          readOnly: true
          type: string
      type: object
    MTOAgents:
      description: |
        A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment.
      items:
        $ref: '#/components/schemas/MTOAgent'
      maxItems: 2
      type: array
    SITExtension:
      description: A storage in transit (SIT) Extension is a request for an increase
        in the billable number of days a shipment is allowed to be in SIT.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        requestedDays: 30
        requestReason: SERIOUS_ILLNESS_MEMBER
        mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        approvedDays: 30
        officeRemarks: officeRemarks
        contractorRemarks: We need SIT additional days. The customer has not found
          a house yet.
        status: PENDING
        decisionDate: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        mtoShipmentID:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        requestReason:
          enum:
          - SERIOUS_ILLNESS_MEMBER
          - SERIOUS_ILLNESS_DEPENDENT
          - IMPENDING_ASSIGNEMENT
          - DIRECTED_TEMPORARY_DUTY
          - NONAVAILABILITY_OF_CIVILIAN_HOUSING
          - AWAITING_COMPLETION_OF_RESIDENCE
          - OTHER
          type: string
        contractorRemarks:
          example: We need SIT additional days. The customer has not found a house
            yet.
          nullable: true
          type: string
          x-omitempty: false
        requestedDays:
          example: 30
          type: integer
        status:
          enum:
          - PENDING
          - APPROVED
          - DENIED
          type: string
        approvedDays:
          example: 30
          nullable: true
          type: integer
          x-omitempty: false
        decisionDate:
          format: date-time
          nullable: true
          type: string
          x-omitempty: false
        officeRemarks:
          nullable: true
          type: string
          x-omitempty: false
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        eTag:
          readOnly: true
          type: string
      type: object
    SITExtensions:
      items:
        $ref: '#/components/schemas/SITExtension'
      type: array
    ReweighRequester:
      enum:
      - CUSTOMER
      - PRIME
      - SYSTEM
      - TOO
      type: string
    Reweigh:
      description: "A reweigh  is when a shipment is weighed for a second time due\
        \ to the request of a customer, the contractor, system or TOO."
      example:
        requestedBy: CUSTOMER
        createdAt: 2000-01-23T04:56:07.000+00:00
        requestedAt: 2000-01-23T04:56:07.000+00:00
        shipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        weight: 2000
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        verificationProvidedAt: 2000-01-23T04:56:07.000+00:00
        verificationReason: The reweigh was not performed due to some justification
          provided by the Prime
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        requestedAt:
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/ReweighRequester'
        verificationProvidedAt:
          format: date-time
          nullable: true
          type: string
          x-omitempty: false
        verificationReason:
          example: The reweigh was not performed due to some justification provided
            by the Prime
          nullable: true
          type: string
          x-omitempty: false
        weight:
          example: 2000
          nullable: true
          type: integer
          x-omitempty: false
          x-formatting: weight
        shipmentID:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        eTag:
          readOnly: true
          type: string
      type: object
    DestinationType:
      enum:
      - HOME_OF_RECORD
      - HOME_OF_SELECTION
      - PLACE_ENTERED_ACTIVE_DUTY
      - OTHER_THAN_AUTHORIZED
      example: OTHER_THAN_AUTHORIZED
      nullable: true
      title: Destination Type
      type: string
      x-nullable: true
    StorageFacility:
      description: The Storage Facility information for the shipment
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          type: string
        facilityName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        lotNumber:
          nullable: true
          type: string
        phone:
          format: telephone
          nullable: true
          pattern: "^[2-9]\\d{2}-\\d{3}-\\d{4}$"
          type: string
        email:
          format: x-email
          nullable: true
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          type: string
        eTag:
          readOnly: true
          type: string
      type: object
    MTOShipmentType:
      description: |
        The type of shipment.
          * `HHG` = Household goods move
          * `HHG_INTO_NTS_DOMESTIC` = HHG into Non-temporary storage (NTS)
          * `HHG_OUTOF_NTS_DOMESTIC` = HHG out of Non-temporary storage (NTS Release)
          * `PPM` = Personally Procured Move also known as Do It Yourself (DITY)
      enum:
      - BOAT_HAUL_AWAY
      - BOAT_TOW_AWAY
      - HHG
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
      - INTERNATIONAL_HHG
      - INTERNATIONAL_UB
      - MOTORHOME
      - PPM
      example: HHG
      title: Shipment Type
      type: string
      x-display-value:
        HHG: Household goods move (HHG)
        HHG_INTO_NTS_DOMESTIC: HHG into Non-temporary storage (NTS)
        HHG_OUTOF_NTS_DOMESTIC: HHG out of Non-temporary storage (NTS Release)
        PPM: Personally Procured Move also known as Do It Yourself (DITY)
    PPMShipmentStatus:
      description: |
        Status of the PPM Shipment:
          * **DRAFT**: The customer has created the PPM shipment but has not yet submitted their move for counseling.
          * **SUBMITTED**: The shipment belongs to a move that has been submitted by the customer or has been created by a Service Counselor or Prime Contractor for a submitted move.
          * **WAITING_ON_CUSTOMER**: The PPM shipment has been approved and the customer may now provide their actual move closeout information and documentation required to get paid.
          * **NEEDS_ADVANCE_APPROVAL**: The shipment was counseled by the Prime Contractor and approved but an advance was requested so will need further financial approval from the government.
          * **NEEDS_CLOSEOUT**: The customer has provided their closeout weight tickets, receipts, and expenses and certified it for the Service Counselor to approve, exclude or reject.
          * **CLOSEOUT_COMPLETE**: The Service Counselor has reviewed all of the customer's PPM closeout documentation and authorizes the customer can download and submit their finalized SSW packet.
      enum:
      - DRAFT
      - SUBMITTED
      - WAITING_ON_CUSTOMER
      - NEEDS_ADVANCE_APPROVAL
      - NEEDS_CLOSEOUT
      - CLOSEOUT_COMPLETE
      type: string
    SITLocationType:
      description: The list of SIT location types.
      enum:
      - ORIGIN
      - DESTINATION
      type: string
    PPMShipment:
      description: A personally procured move is a type of shipment that a service
        member moves themselves.
      example:
        hasProGear: true
        actualMoveDate: 2000-01-23
        reviewedAt: 2000-01-23T04:56:07.000+00:00
        sitEstimatedCost: 2
        createdAt: 2000-01-23T04:56:07.000+00:00
        estimatedIncentive: 7
        advanceAmountRequested: 9
        sitEstimatedWeight: 2000
        hasRequestedAdvance: true
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        submittedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
        actualPickupPostalCode: "90210"
        sitExpected: true
        advanceAmountReceived: 3
        approvedAt: 2000-01-23T04:56:07.000+00:00
        sitEstimatedDepartureDate: 2000-01-23
        expectedDepartureDate: 2000-01-23
        proGearWeight: 5
        hasReceivedAdvance: true
        estimatedWeight: 4200
        shipmentId: 1f2270c7-7166-40ae-981e-b200ebdf3054
        sitLocation: "{}"
        sitEstimatedEntryDate: 2000-01-23
        spouseProGearWeight: 2
        status: DRAFT
        actualDestinationPostalCode: "90210"
      nullable: true
      properties:
        id:
          description: The primary unique identifier of this PPM shipment
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        shipmentId:
          description: The id of the parent MTOShipment record
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        createdAt:
          description: The timestamp of when the PPM shipment was created (UTC)
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The timestamp of when a property of this object was last updated
            (UTC)
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/PPMShipmentStatus'
        expectedDepartureDate:
          description: |
            Date the customer expects to begin moving from their origin.
          format: date
          type: string
        actualMoveDate:
          description: The actual start date of when the PPM shipment left the origin.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        submittedAt:
          description: The timestamp of when the customer submitted their PPM documentation
            to the counselor for review.
          format: date-time
          nullable: true
          type: string
          x-omitempty: false
        reviewedAt:
          description: The timestamp of when the Service Counselor has reviewed all
            of the closeout documents.
          format: date-time
          nullable: true
          type: string
          x-omitempty: false
        approvedAt:
          description: The timestamp of when the shipment was approved and the service
            member can begin their move.
          format: date-time
          nullable: true
          type: string
          x-omitempty: false
        actualPickupPostalCode:
          description: |
            The actual postal code where the PPM shipment started. To be filled once the customer has moved the shipment.
          example: "90210"
          format: zip
          nullable: true
          pattern: "^(\\d{5})$"
          title: ZIP
          type: string
          x-omitempty: false
        actualDestinationPostalCode:
          description: |
            The actual postal code where the PPM shipment ended. To be filled once the customer has moved the shipment.
          example: "90210"
          format: zip
          nullable: true
          pattern: "^(\\d{5})$"
          title: ZIP
          type: string
          x-omitempty: false
        sitExpected:
          description: |
            Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.

            Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`.
          type: boolean
        estimatedWeight:
          description: The estimated weight of the PPM shipment goods being moved
            in pounds.
          example: 4200
          nullable: true
          type: integer
          x-omitempty: false
        hasProGear:
          description: |
            Indicates whether PPM shipment has pro gear for themselves or their spouse.
          nullable: true
          type: boolean
          x-omitempty: false
        proGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to the service member in pounds.
          nullable: true
          type: integer
          x-omitempty: false
        spouseProGearWeight:
          description: The estimated weight of the pro-gear being moved belonging
            to a spouse in pounds.
          nullable: true
          type: integer
          x-omitempty: false
        estimatedIncentive:
          description: "The estimated amount the government will pay the service member\
            \ to move their belongings based on the moving date, locations, and shipment\
            \ weight."
          format: cents
          nullable: true
          type: integer
          x-omitempty: false
        hasRequestedAdvance:
          description: |
            Indicates whether an advance has been requested for the PPM shipment.
          nullable: true
          type: boolean
          x-omitempty: false
        advanceAmountRequested:
          description: |
            The amount requested as an advance by the service member, up to a maximum percentage of the estimated incentive.
          format: cents
          nullable: true
          type: integer
          x-omitempty: false
        hasReceivedAdvance:
          description: |
            Indicates whether an advance was received for the PPM shipment.
          nullable: true
          type: boolean
          x-omitempty: false
        advanceAmountReceived:
          description: |
            The amount received for an advance, or null if no advance is received.
          format: cents
          nullable: true
          type: integer
          x-omitempty: false
        sitLocation:
          allOf:
          - $ref: '#/components/schemas/SITLocationType'
          - type: object
            x-nullable: true
          - type: object
            x-omitempty: false
          type: object
        sitEstimatedWeight:
          description: The estimated weight of the goods being put into storage in
            pounds.
          example: 2000
          nullable: true
          type: integer
          x-omitempty: false
        sitEstimatedEntryDate:
          description: The date that goods will first enter the storage location.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        sitEstimatedDepartureDate:
          description: The date that goods will exit the storage location.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        sitEstimatedCost:
          description: The estimated amount that the government will pay the service
            member to put their goods into storage. This estimated storage cost is
            separate from the estimated incentive.
          format: cents
          nullable: true
          type: integer
          x-omitempty: false
        eTag:
          description: A hash unique to this shipment that should be used as the "If-Match"
            header for any updates.
          readOnly: true
          type: string
      required:
      - createdAt
      - eTag
      - expectedDepartureDate
      - id
      - shipmentId
      - sitExpected
      - status
      type: object
      x-nullable: true
    ShipmentAddressUpdateStatus:
      enum:
      - REQUESTED
      - REJECTED
      - APPROVED
      title: Status
      type: string
      x-display-value:
        REQUESTED: REQUESTED
        REJECTED: REJECTED
        APPROVED: APPROVED
    ShipmentAddressUpdate:
      description: |
        This represents a destination address change request made by the Prime that is either auto-approved or requires review if the pricing criteria has changed. If criteria has changed, then it must be approved or rejected by a TOO.
      example:
        newSitDistanceBetween: 88
        sitOriginalAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        originalAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        shipmentID: c56a4180-65aa-42ec-a945-5fd21dec0538
        oldSitDistanceBetween: 50
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        officeRemarks: This is an office remark
        contractorRemarks: This is a contractor remark
        newAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        status: REQUESTED
      properties:
        id:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          readOnly: true
          type: string
        contractorRemarks:
          description: The reason there is an address change.
          example: This is a contractor remark
          readOnly: true
          title: Contractor Remarks
          type: string
        officeRemarks:
          description: The TOO comment on approval or rejection.
          example: This is an office remark
          nullable: true
          title: Office Remarks
          type: string
        status:
          $ref: '#/components/schemas/ShipmentAddressUpdateStatus'
        shipmentID:
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
          format: uuid
          readOnly: true
          type: string
        originalAddress:
          $ref: '#/components/schemas/Address'
        newAddress:
          $ref: '#/components/schemas/Address'
        sitOriginalAddress:
          $ref: '#/components/schemas/Address'
        oldSitDistanceBetween:
          description: The distance between the original SIT address and the previous/old
            destination address of shipment
          example: 50
          minimum: 0
          type: integer
        newSitDistanceBetween:
          description: The distance between the original SIT address and requested
            new destination address of shipment
          example: 88
          minimum: 0
          type: integer
      required:
      - contractorRemarks
      - id
      - newAddress
      - originalAddress
      - shipmentID
      - status
      type: object
    MTOShipmentWithoutServiceItems:
      example:
        sitExtensions:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          requestedDays: 30
          requestReason: SERIOUS_ILLNESS_MEMBER
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          approvedDays: 30
          officeRemarks: officeRemarks
          contractorRemarks: We need SIT additional days. The customer has not found
            a house yet.
          status: PENDING
          decisionDate: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          requestedDays: 30
          requestReason: SERIOUS_ILLNESS_MEMBER
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          approvedDays: 30
          officeRemarks: officeRemarks
          contractorRemarks: We need SIT additional days. The customer has not found
            a house yet.
          status: PENDING
          decisionDate: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        secondaryDeliveryAddress: "{}"
        ppmShipment:
          hasProGear: true
          actualMoveDate: 2000-01-23
          reviewedAt: 2000-01-23T04:56:07.000+00:00
          sitEstimatedCost: 2
          createdAt: 2000-01-23T04:56:07.000+00:00
          estimatedIncentive: 7
          advanceAmountRequested: 9
          sitEstimatedWeight: 2000
          hasRequestedAdvance: true
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          submittedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
          actualPickupPostalCode: "90210"
          sitExpected: true
          advanceAmountReceived: 3
          approvedAt: 2000-01-23T04:56:07.000+00:00
          sitEstimatedDepartureDate: 2000-01-23
          expectedDepartureDate: 2000-01-23
          proGearWeight: 5
          hasReceivedAdvance: true
          estimatedWeight: 4200
          shipmentId: 1f2270c7-7166-40ae-981e-b200ebdf3054
          sitLocation: "{}"
          sitEstimatedEntryDate: 2000-01-23
          spouseProGearWeight: 2
          status: DRAFT
          actualDestinationPostalCode: "90210"
        moveTaskOrderID: 1f2270c7-7166-40ae-981e-b200ebdf3054
        primeEstimatedWeight: 4500
        destinationAddress: "{}"
        secondaryPickupAddress: "{}"
        counselorRemarks: handle with care
        requestedPickupDate: 2000-01-23
        scheduledDeliveryDate: 2000-01-23
        shipmentType: HHG
        createdAt: 2000-01-23T04:56:07.000+00:00
        originSitAuthEndDate: 2000-01-23
        primeEstimatedWeightRecordedDate: 2000-01-23
        storageFacility:
          address:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          phone: phone
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          facilityName: facilityName
          lotNumber: lotNumber
          email: email
        deliveryAddressUpdate:
          newSitDistanceBetween: 88
          sitOriginalAddress:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          originalAddress:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          shipmentID: c56a4180-65aa-42ec-a945-5fd21dec0538
          oldSitDistanceBetween: 50
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          officeRemarks: This is an office remark
          contractorRemarks: This is a contractor remark
          newAddress:
            country: USA
            city: Anytown
            postalCode: "90210"
            streetAddress1: 123 Main Ave
            county: LOS ANGELES
            streetAddress2: Apartment 9000
            streetAddress3: Montmârtre
            eTag: eTag
            id: c56a4180-65aa-42ec-a945-5fd21dec0538
            state: AL
          status: REQUESTED
        scheduledPickupDate: 2000-01-23
        destinationType: OTHER_THAN_AUTHORIZED
        eTag: eTag
        id: 1f2270c7-7166-40ae-981e-b200ebdf3054
        diversionReason: diversionReason
        updatedAt: 2000-01-23T04:56:07.000+00:00
        pointOfContact: pointOfContact
        actualDeliveryDate: 2000-01-23
        actualSpouseProGearWeight: 5
        actualPickupDate: 2000-01-23
        primeActualWeight: 4500
        agents:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          lastName: lastName
          agentType: RELEASING_AGENT
          phone: phone
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          lastName: lastName
          agentType: RELEASING_AGENT
          phone: phone
          mtoShipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        approvedDate: 2000-01-23
        requiredDeliveryDate: 2000-01-23
        actualProGearWeight: 1
        reweigh:
          requestedBy: CUSTOMER
          createdAt: 2000-01-23T04:56:07.000+00:00
          requestedAt: 2000-01-23T04:56:07.000+00:00
          shipmentID: 1f2270c7-7166-40ae-981e-b200ebdf3054
          weight: 2000
          eTag: eTag
          id: 1f2270c7-7166-40ae-981e-b200ebdf3054
          verificationProvidedAt: 2000-01-23T04:56:07.000+00:00
          verificationReason: The reweigh was not performed due to some justification
            provided by the Prime
          updatedAt: 2000-01-23T04:56:07.000+00:00
        pickupAddress: "{}"
        destinationSitAuthEndDate: 2000-01-23
        requestedDeliveryDate: 2000-01-23
        diversion: true
        customerRemarks: handle with care
        firstAvailableDeliveryDate: 2000-01-23
        ntsRecordedWeight: 4500
        status: SUBMITTED
      properties:
        id:
          description: The ID of the shipment.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        moveTaskOrderID:
          description: The ID of the move for this shipment.
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          readOnly: true
          type: string
        approvedDate:
          description: The date when the Task Ordering Officer first approved this
            shipment for the move.
          format: date
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        requestedPickupDate:
          description: |
            The date the customer selects during onboarding as their preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date.
          format: date
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        requestedDeliveryDate:
          description: The customer's preferred delivery date.
          format: date
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        scheduledPickupDate:
          description: The date the Prime contractor scheduled to pick up this shipment
            after consultation with the customer.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        actualPickupDate:
          description: The date when the Prime contractor actually picked up the shipment.
            Updated after-the-fact.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        firstAvailableDeliveryDate:
          description: |
            The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        requiredDeliveryDate:
          description: |
            The latest date by which the Prime can deliver a customer's shipment without violating the contract. This is calculated based on weight, distance, and the scheduled pickup date. It cannot be modified.
          format: date
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        scheduledDeliveryDate:
          description: The date the Prime contractor scheduled to deliver this shipment
            after consultation with the customer.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        actualDeliveryDate:
          description: The date when the Prime contractor actually delivered the shipment.
            Updated after-the-fact.
          format: date
          nullable: true
          type: string
          x-omitempty: false
        primeEstimatedWeight:
          description: |
            The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it.
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        primeEstimatedWeightRecordedDate:
          description: The date when the Prime contractor recorded the shipment's
            estimated weight.
          format: date
          nullable: true
          readOnly: true
          type: string
          x-omitempty: false
        primeActualWeight:
          description: "The actual weight of the shipment, provided after the Prime\
            \ packs, picks up, and weighs a customer's shipment."
          example: 4500
          minimum: 1
          nullable: true
          type: integer
        ntsRecordedWeight:
          description: The previously recorded weight for the NTS Shipment. Used for
            NTS Release to know what the previous primeActualWeight or billable weight
            was.
          example: 4500
          nullable: true
          type: integer
          x-formatting: weight
        customerRemarks:
          description: |
            The customer can use the customer remarks field to inform the services counselor and the movers about any
            special circumstances for this shipment. Typical examples:
              * bulky or fragile items,
              * weapons,
              * access info for their address.

            Customer enters this information during onboarding. Optional field.
          example: handle with care
          nullable: true
          readOnly: true
          type: string
        counselorRemarks:
          description: |
            The counselor can use the counselor remarks field to inform the movers about any
            special circumstances for this shipment. Typical examples:
              * bulky or fragile items,
              * weapons,
              * access info for their address.

            Counselors enters this information when creating or editing an MTO Shipment. Optional field.
          example: handle with care
          nullable: true
          readOnly: true
          type: string
        actualProGearWeight:
          description: |
            The actual weight of any pro gear being shipped.
          nullable: true
          type: integer
          x-omitempty: false
        actualSpouseProGearWeight:
          description: |
            The actual weight of any spouse pro gear being shipped.
          nullable: true
          type: integer
          x-omitempty: false
        agents:
          description: |
            A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment.
          items:
            $ref: '#/components/schemas/MTOAgent'
          maxItems: 2
          type: array
        sitExtensions:
          items:
            $ref: '#/components/schemas/SITExtension'
          type: array
        reweigh:
          $ref: '#/components/schemas/Reweigh'
        pickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: |
            The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details.
          type: object
        destinationAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: |
            Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details
            during onboarding, if they know their new address already.

            May be blank when entered by the customer, required when entered by the Prime. May not represent the true
            final destination due to the shipment being diverted or placed in SIT.
          type: object
        destinationType:
          $ref: '#/components/schemas/DestinationType'
        secondaryPickupAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: "A second pickup address for this shipment, if the customer\
            \ entered one. An optional field."
          type: object
        secondaryDeliveryAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: "A second delivery address for this shipment, if the customer\
            \ entered one. An optional field."
          type: object
        storageFacility:
          $ref: '#/components/schemas/UpdateMTOShipment_storageFacility'
        shipmentType:
          $ref: '#/components/schemas/MTOShipmentType'
        diversion:
          description: |
            This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion.
          type: boolean
        diversionReason:
          description: |
            The reason the TOO provided when requesting a diversion for this shipment.
          nullable: true
          readOnly: true
          type: string
        status:
          description: |
            The status of a shipment, indicating where it is in the TOO's approval process. Can only be updated by the contractor in special circumstances.
          enum:
          - SUBMITTED
          - APPROVED
          - REJECTED
          - CANCELLATION_REQUESTED
          - CANCELED
          - DIVERSION_REQUESTED
          readOnly: true
          type: string
        ppmShipment:
          $ref: '#/components/schemas/PPMShipment'
        deliveryAddressUpdate:
          $ref: '#/components/schemas/ShipmentAddressUpdate'
        eTag:
          description: A hash unique to this shipment that should be used as the "If-Match"
            header for any updates.
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        pointOfContact:
          description: |
            Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor.
          type: string
        originSitAuthEndDate:
          description: The SIT authorized end date for origin SIT.
          format: date
          nullable: true
          type: string
        destinationSitAuthEndDate:
          description: The SIT authorized end date for destination SIT.
          format: date
          nullable: true
          type: string
      type: object
    MTOShipmentsWithoutServiceObjects:
      description: A list of shipments without their associated service items.
      items:
        $ref: '#/components/schemas/MTOShipmentWithoutServiceItems'
      type: array
    ExcessWeightRecord:
      allOf:
      - $ref: '#/components/schemas/UploadWithOmissions'
      - properties:
          moveId:
            description: The UUID of the move this excess weight record belongs to.
            example: 1f2270c7-7166-40ae-981e-b200ebdf3054
            format: uuid
            type: string
          moveExcessWeightQualifiedAt:
            description: |
              The date and time when the sum of all the move's shipments met the excess weight qualification threshold. The system monitors these weights and will update this field automatically.
            format: date-time
            nullable: true
            readOnly: true
            type: string
            x-omitempty: false
          moveExcessWeightAcknowledgedAt:
            description: |
              The date and time when the TOO acknowledged the excess weight alert, either by dismissing the risk or updating the max billable weight. This will occur after the excess weight record has been uploaded.
            format: date-time
            nullable: true
            readOnly: true
            type: string
            x-omitempty: false
        required:
        - moveId
        type: object
      description: A document uploaded by the movers proving that the customer has
        been counseled about excess weight.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        moveExcessWeightAcknowledgedAt: 2000-01-23T04:56:07.000+00:00
        filename: filename.pdf
        bytes: 0
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        moveExcessWeightQualifiedAt: 2000-01-23T04:56:07.000+00:00
        contentType: application/pdf
        url: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
        status: INFECTED
        updatedAt: 2000-01-23T04:56:07.000+00:00
        moveId: 1f2270c7-7166-40ae-981e-b200ebdf3054
    ValidationError:
      allOf:
      - $ref: '#/components/schemas/ClientError'
      - properties:
          invalidFields:
            additionalProperties:
              description: List of errors for the field
              items:
                type: string
              type: array
            type: object
        required:
        - invalidFields
        type: object
      example:
        instance: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invalidFields:
          key:
          - invalidFields
          - invalidFields
        detail: detail
        title: title
    SitAddressUpdateStatus:
      description: "The status of a SIT address update, indicating where it is in\
        \ the TOO's approval process."
      enum:
      - REQUESTED
      - APPROVED
      - REJECTED
      type: object
    SitAddressUpdate:
      example:
        distance: 25
        newAddressId: 31a2ad3c-1682-4d5b-8423-ff40053a056b
        oldAddressId: 31a2ad3c-1682-4d5b-8423-ff40053a056b
        contractorRemarks: Customer reached out to me this week & let me know they
          want to move closer to family.
        mtoServiceItemId: 12d9e103-5a56-4636-906d-6e993b97ef51
        oldAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        createdAt: 2000-01-23T04:56:07.000+00:00
        eTag: eTag
        id: ddd7bb48-4730-47c4-9781-6500384f4941
        officeRemarks: The customer has found a new house closer to base.
        newAddress:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        status: "{}"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: ddd7bb48-4730-47c4-9781-6500384f4941
          format: uuid
          readOnly: true
          type: string
        mtoServiceItemId:
          example: 12d9e103-5a56-4636-906d-6e993b97ef51
          format: uuid
          readOnly: true
          type: string
        newAddressId:
          example: 31a2ad3c-1682-4d5b-8423-ff40053a056b
          format: uuid
          readOnly: true
          type: string
        newAddress:
          $ref: '#/components/schemas/Address'
        oldAddressId:
          example: 31a2ad3c-1682-4d5b-8423-ff40053a056b
          format: uuid
          readOnly: true
          type: string
        oldAddress:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/SitAddressUpdateStatus'
        distance:
          example: 25
          maximum: 50
          readOnly: true
          type: integer
        contractorRemarks:
          example: Customer reached out to me this week & let me know they want to
            move closer to family.
          nullable: true
          type: string
          x-omitempty: false
        officeRemarks:
          example: The customer has found a new house closer to base.
          nullable: true
          type: string
          x-omitempty: false
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        eTag:
          description: A hash unique to this shipment that should be used as the "If-Match"
            header for any updates.
          readOnly: true
          type: string
      type: object
    ReServiceCode:
      description: |
        This is the full list of service items that can be found on a shipment. Not all service items
        may be requested by the Prime, but may be returned in a response.

        Documentation of all the service items will be provided.
      enum:
      - CS
      - DBHF
      - DBTF
      - DCRT
      - DDASIT
      - DDDSIT
      - DDFSIT
      - DDP
      - DDSHUT
      - DLH
      - DMHF
      - DNPK
      - DOASIT
      - DOFSIT
      - DOP
      - DOPSIT
      - DOSHUT
      - DPK
      - DSH
      - DUCRT
      - DUPK
      - FSC
      - IBHF
      - IBTF
      - ICOLH
      - ICOUB
      - ICRT
      - ICRTSA
      - IDASIT
      - IDDSIT
      - IDFSIT
      - IDSHUT
      - IHPK
      - IHUPK
      - INPK
      - IOASIT
      - IOCLH
      - IOCUB
      - IOFSIT
      - IOOLH
      - IOOUB
      - IOPSIT
      - IOSHUT
      - IUBPK
      - IUBUPK
      - IUCRT
      - MS
      - NSTH
      - NSTUB
      type: string
    SitAddressUpdates:
      description: A list of updates to a SIT service item address.
      items:
        $ref: '#/components/schemas/SitAddressUpdate'
      type: array
    MTOServiceItemDimension:
      description: The dimensions for either the item or the crate associated with
        a crating service item.
      properties:
        id:
          example: 1f2270c7-7166-40ae-981e-b200ebdf3054
          format: uuid
          type: string
        length:
          description: Length in thousandth inches. 1000 thou = 1 inch.
          example: 1000
          format: int32
          type: integer
        width:
          description: Width in thousandth inches. 1000 thou = 1 inch.
          example: 1000
          format: int32
          type: integer
        height:
          description: Height in thousandth inches. 1000 thou = 1 inch.
          example: 1000
          format: int32
          type: integer
      required:
      - height
      - length
      - width
      type: object
    createExcessWeightRecord_request:
      properties:
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
      type: object
    createUpload_request:
      properties:
        file:
          description: The file to upload.
          format: binary
          type: string
        isWeightTicket:
          description: Indicates whether the file is a weight ticket.
          type: boolean
      required:
      - file
      type: object
    MTOServiceItemDomesticCrating_allOf_item:
      description: The dimensions of the item being crated.
      type: object
    MTOServiceItemDomesticCrating_allOf_crate:
      description: The dimensions for the crate the item will be shipped in.
      type: object
    ServiceItem_params_inner:
      example:
        value: Service Item Parameter Value
        key: Service Item Parameter Name
      properties:
        key:
          example: Service Item Parameter Name
          type: string
        value:
          example: Service Item Parameter Value
          type: string
      type: object
    UpdateMTOShipment_storageFacility:
      allOf:
      - type: object
        x-nullable: true
      - $ref: '#/components/schemas/StorageFacility'
      example:
        address:
          country: USA
          city: Anytown
          postalCode: "90210"
          streetAddress1: 123 Main Ave
          county: LOS ANGELES
          streetAddress2: Apartment 9000
          streetAddress3: Montmârtre
          eTag: eTag
          id: c56a4180-65aa-42ec-a945-5fd21dec0538
          state: AL
        phone: phone
        eTag: eTag
        id: c56a4180-65aa-42ec-a945-5fd21dec0538
        facilityName: facilityName
        lotNumber: lotNumber
        email: email
      type: object
x-tagGroups:
- name: Endpoints
  tags:
  - moveTaskOrder
  - mtoShipment
  - mtoServiceItem
  - paymentRequest
  - sitAddressUpdate
x-original-swagger-version: "2.0"
