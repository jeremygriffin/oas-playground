/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateMTOShipmentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMTOShipmentStatus{}

// UpdateMTOShipmentStatus Contains the statuses available to the Prime when updating the state of a shipment.
type UpdateMTOShipmentStatus struct {
	Status *string `json:"status,omitempty"`
}

// NewUpdateMTOShipmentStatus instantiates a new UpdateMTOShipmentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMTOShipmentStatus() *UpdateMTOShipmentStatus {
	this := UpdateMTOShipmentStatus{}
	return &this
}

// NewUpdateMTOShipmentStatusWithDefaults instantiates a new UpdateMTOShipmentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMTOShipmentStatusWithDefaults() *UpdateMTOShipmentStatus {
	this := UpdateMTOShipmentStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateMTOShipmentStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipmentStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateMTOShipmentStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateMTOShipmentStatus) SetStatus(v string) {
	o.Status = &v
}

func (o UpdateMTOShipmentStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMTOShipmentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableUpdateMTOShipmentStatus struct {
	value *UpdateMTOShipmentStatus
	isSet bool
}

func (v NullableUpdateMTOShipmentStatus) Get() *UpdateMTOShipmentStatus {
	return v.value
}

func (v *NullableUpdateMTOShipmentStatus) Set(val *UpdateMTOShipmentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMTOShipmentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMTOShipmentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMTOShipmentStatus(val *UpdateMTOShipmentStatus) *NullableUpdateMTOShipmentStatus {
	return &NullableUpdateMTOShipmentStatus{value: val, isSet: true}
}

func (v NullableUpdateMTOShipmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMTOShipmentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


