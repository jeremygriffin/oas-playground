/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentRequest{}

// PaymentRequest struct for PaymentRequest
type PaymentRequest struct {
	Id *string `json:"id,omitempty"`
	IsFinal *bool `json:"isFinal,omitempty"`
	MoveTaskOrderID *string `json:"moveTaskOrderID,omitempty"`
	RejectionReason NullableString `json:"rejectionReason,omitempty"`
	Status *PaymentRequestStatus `json:"status,omitempty"`
	PaymentRequestNumber *string `json:"paymentRequestNumber,omitempty"`
	RecalculationOfPaymentRequestID NullableString `json:"recalculationOfPaymentRequestID,omitempty"`
	ProofOfServiceDocs []ProofOfServiceDoc `json:"proofOfServiceDocs,omitempty"`
	PaymentServiceItems []PaymentServiceItem `json:"paymentServiceItems,omitempty"`
	ETag *string `json:"eTag,omitempty"`
}

// NewPaymentRequest instantiates a new PaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentRequest() *PaymentRequest {
	this := PaymentRequest{}
	var isFinal bool = false
	this.IsFinal = &isFinal
	return &this
}

// NewPaymentRequestWithDefaults instantiates a new PaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentRequestWithDefaults() *PaymentRequest {
	this := PaymentRequest{}
	var isFinal bool = false
	this.IsFinal = &isFinal
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentRequest) SetId(v string) {
	o.Id = &v
}

// GetIsFinal returns the IsFinal field value if set, zero value otherwise.
func (o *PaymentRequest) GetIsFinal() bool {
	if o == nil || IsNil(o.IsFinal) {
		var ret bool
		return ret
	}
	return *o.IsFinal
}

// GetIsFinalOk returns a tuple with the IsFinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetIsFinalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFinal) {
		return nil, false
	}
	return o.IsFinal, true
}

// HasIsFinal returns a boolean if a field has been set.
func (o *PaymentRequest) HasIsFinal() bool {
	if o != nil && !IsNil(o.IsFinal) {
		return true
	}

	return false
}

// SetIsFinal gets a reference to the given bool and assigns it to the IsFinal field.
func (o *PaymentRequest) SetIsFinal(v bool) {
	o.IsFinal = &v
}

// GetMoveTaskOrderID returns the MoveTaskOrderID field value if set, zero value otherwise.
func (o *PaymentRequest) GetMoveTaskOrderID() string {
	if o == nil || IsNil(o.MoveTaskOrderID) {
		var ret string
		return ret
	}
	return *o.MoveTaskOrderID
}

// GetMoveTaskOrderIDOk returns a tuple with the MoveTaskOrderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetMoveTaskOrderIDOk() (*string, bool) {
	if o == nil || IsNil(o.MoveTaskOrderID) {
		return nil, false
	}
	return o.MoveTaskOrderID, true
}

// HasMoveTaskOrderID returns a boolean if a field has been set.
func (o *PaymentRequest) HasMoveTaskOrderID() bool {
	if o != nil && !IsNil(o.MoveTaskOrderID) {
		return true
	}

	return false
}

// SetMoveTaskOrderID gets a reference to the given string and assigns it to the MoveTaskOrderID field.
func (o *PaymentRequest) SetMoveTaskOrderID(v string) {
	o.MoveTaskOrderID = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentRequest) GetRejectionReason() string {
	if o == nil || IsNil(o.RejectionReason.Get()) {
		var ret string
		return ret
	}
	return *o.RejectionReason.Get()
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentRequest) GetRejectionReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectionReason.Get(), o.RejectionReason.IsSet()
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *PaymentRequest) HasRejectionReason() bool {
	if o != nil && o.RejectionReason.IsSet() {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given NullableString and assigns it to the RejectionReason field.
func (o *PaymentRequest) SetRejectionReason(v string) {
	o.RejectionReason.Set(&v)
}
// SetRejectionReasonNil sets the value for RejectionReason to be an explicit nil
func (o *PaymentRequest) SetRejectionReasonNil() {
	o.RejectionReason.Set(nil)
}

// UnsetRejectionReason ensures that no value is present for RejectionReason, not even an explicit nil
func (o *PaymentRequest) UnsetRejectionReason() {
	o.RejectionReason.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentRequest) GetStatus() PaymentRequestStatus {
	if o == nil || IsNil(o.Status) {
		var ret PaymentRequestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetStatusOk() (*PaymentRequestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentRequestStatus and assigns it to the Status field.
func (o *PaymentRequest) SetStatus(v PaymentRequestStatus) {
	o.Status = &v
}

// GetPaymentRequestNumber returns the PaymentRequestNumber field value if set, zero value otherwise.
func (o *PaymentRequest) GetPaymentRequestNumber() string {
	if o == nil || IsNil(o.PaymentRequestNumber) {
		var ret string
		return ret
	}
	return *o.PaymentRequestNumber
}

// GetPaymentRequestNumberOk returns a tuple with the PaymentRequestNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetPaymentRequestNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentRequestNumber) {
		return nil, false
	}
	return o.PaymentRequestNumber, true
}

// HasPaymentRequestNumber returns a boolean if a field has been set.
func (o *PaymentRequest) HasPaymentRequestNumber() bool {
	if o != nil && !IsNil(o.PaymentRequestNumber) {
		return true
	}

	return false
}

// SetPaymentRequestNumber gets a reference to the given string and assigns it to the PaymentRequestNumber field.
func (o *PaymentRequest) SetPaymentRequestNumber(v string) {
	o.PaymentRequestNumber = &v
}

// GetRecalculationOfPaymentRequestID returns the RecalculationOfPaymentRequestID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentRequest) GetRecalculationOfPaymentRequestID() string {
	if o == nil || IsNil(o.RecalculationOfPaymentRequestID.Get()) {
		var ret string
		return ret
	}
	return *o.RecalculationOfPaymentRequestID.Get()
}

// GetRecalculationOfPaymentRequestIDOk returns a tuple with the RecalculationOfPaymentRequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentRequest) GetRecalculationOfPaymentRequestIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecalculationOfPaymentRequestID.Get(), o.RecalculationOfPaymentRequestID.IsSet()
}

// HasRecalculationOfPaymentRequestID returns a boolean if a field has been set.
func (o *PaymentRequest) HasRecalculationOfPaymentRequestID() bool {
	if o != nil && o.RecalculationOfPaymentRequestID.IsSet() {
		return true
	}

	return false
}

// SetRecalculationOfPaymentRequestID gets a reference to the given NullableString and assigns it to the RecalculationOfPaymentRequestID field.
func (o *PaymentRequest) SetRecalculationOfPaymentRequestID(v string) {
	o.RecalculationOfPaymentRequestID.Set(&v)
}
// SetRecalculationOfPaymentRequestIDNil sets the value for RecalculationOfPaymentRequestID to be an explicit nil
func (o *PaymentRequest) SetRecalculationOfPaymentRequestIDNil() {
	o.RecalculationOfPaymentRequestID.Set(nil)
}

// UnsetRecalculationOfPaymentRequestID ensures that no value is present for RecalculationOfPaymentRequestID, not even an explicit nil
func (o *PaymentRequest) UnsetRecalculationOfPaymentRequestID() {
	o.RecalculationOfPaymentRequestID.Unset()
}

// GetProofOfServiceDocs returns the ProofOfServiceDocs field value if set, zero value otherwise.
func (o *PaymentRequest) GetProofOfServiceDocs() []ProofOfServiceDoc {
	if o == nil || IsNil(o.ProofOfServiceDocs) {
		var ret []ProofOfServiceDoc
		return ret
	}
	return o.ProofOfServiceDocs
}

// GetProofOfServiceDocsOk returns a tuple with the ProofOfServiceDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetProofOfServiceDocsOk() ([]ProofOfServiceDoc, bool) {
	if o == nil || IsNil(o.ProofOfServiceDocs) {
		return nil, false
	}
	return o.ProofOfServiceDocs, true
}

// HasProofOfServiceDocs returns a boolean if a field has been set.
func (o *PaymentRequest) HasProofOfServiceDocs() bool {
	if o != nil && !IsNil(o.ProofOfServiceDocs) {
		return true
	}

	return false
}

// SetProofOfServiceDocs gets a reference to the given []ProofOfServiceDoc and assigns it to the ProofOfServiceDocs field.
func (o *PaymentRequest) SetProofOfServiceDocs(v []ProofOfServiceDoc) {
	o.ProofOfServiceDocs = v
}

// GetPaymentServiceItems returns the PaymentServiceItems field value if set, zero value otherwise.
func (o *PaymentRequest) GetPaymentServiceItems() []PaymentServiceItem {
	if o == nil || IsNil(o.PaymentServiceItems) {
		var ret []PaymentServiceItem
		return ret
	}
	return o.PaymentServiceItems
}

// GetPaymentServiceItemsOk returns a tuple with the PaymentServiceItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetPaymentServiceItemsOk() ([]PaymentServiceItem, bool) {
	if o == nil || IsNil(o.PaymentServiceItems) {
		return nil, false
	}
	return o.PaymentServiceItems, true
}

// HasPaymentServiceItems returns a boolean if a field has been set.
func (o *PaymentRequest) HasPaymentServiceItems() bool {
	if o != nil && !IsNil(o.PaymentServiceItems) {
		return true
	}

	return false
}

// SetPaymentServiceItems gets a reference to the given []PaymentServiceItem and assigns it to the PaymentServiceItems field.
func (o *PaymentRequest) SetPaymentServiceItems(v []PaymentServiceItem) {
	o.PaymentServiceItems = v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *PaymentRequest) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *PaymentRequest) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *PaymentRequest) SetETag(v string) {
	o.ETag = &v
}

func (o PaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsFinal) {
		toSerialize["isFinal"] = o.IsFinal
	}
	if !IsNil(o.MoveTaskOrderID) {
		toSerialize["moveTaskOrderID"] = o.MoveTaskOrderID
	}
	if o.RejectionReason.IsSet() {
		toSerialize["rejectionReason"] = o.RejectionReason.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PaymentRequestNumber) {
		toSerialize["paymentRequestNumber"] = o.PaymentRequestNumber
	}
	if o.RecalculationOfPaymentRequestID.IsSet() {
		toSerialize["recalculationOfPaymentRequestID"] = o.RecalculationOfPaymentRequestID.Get()
	}
	if !IsNil(o.ProofOfServiceDocs) {
		toSerialize["proofOfServiceDocs"] = o.ProofOfServiceDocs
	}
	if !IsNil(o.PaymentServiceItems) {
		toSerialize["paymentServiceItems"] = o.PaymentServiceItems
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	return toSerialize, nil
}

type NullablePaymentRequest struct {
	value *PaymentRequest
	isSet bool
}

func (v NullablePaymentRequest) Get() *PaymentRequest {
	return v.value
}

func (v *NullablePaymentRequest) Set(val *PaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentRequest(val *PaymentRequest) *NullablePaymentRequest {
	return &NullablePaymentRequest{value: val, isSet: true}
}

func (v NullablePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


