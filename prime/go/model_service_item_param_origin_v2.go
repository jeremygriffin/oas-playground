/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ServiceItemParamOriginV2 the model 'ServiceItemParamOriginV2'
type ServiceItemParamOriginV2 string

// List of ServiceItemParamOrigin
const (
	PRIME ServiceItemParamOriginV2 = "PRIME"
	SYSTEM ServiceItemParamOriginV2 = "SYSTEM"
	PRICER ServiceItemParamOriginV2 = "PRICER"
	PAYMENT_REQUEST ServiceItemParamOriginV2 = "PAYMENT_REQUEST"
)

// All allowed values of ServiceItemParamOriginV2 enum
var AllowedServiceItemParamOriginV2EnumValues = []ServiceItemParamOriginV2{
	"PRIME",
	"SYSTEM",
	"PRICER",
	"PAYMENT_REQUEST",
}

func (v *ServiceItemParamOriginV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceItemParamOriginV2(value)
	for _, existing := range AllowedServiceItemParamOriginV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceItemParamOriginV2", value)
}

// NewServiceItemParamOriginV2FromValue returns a pointer to a valid ServiceItemParamOriginV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceItemParamOriginV2FromValue(v string) (*ServiceItemParamOriginV2, error) {
	ev := ServiceItemParamOriginV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceItemParamOriginV2: valid values are %v", v, AllowedServiceItemParamOriginV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceItemParamOriginV2) IsValid() bool {
	for _, existing := range AllowedServiceItemParamOriginV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceItemParamOrigin value
func (v ServiceItemParamOriginV2) Ptr() *ServiceItemParamOriginV2 {
	return &v
}

type NullableServiceItemParamOriginV2 struct {
	value *ServiceItemParamOriginV2
	isSet bool
}

func (v NullableServiceItemParamOriginV2) Get() *ServiceItemParamOriginV2 {
	return v.value
}

func (v *NullableServiceItemParamOriginV2) Set(val *ServiceItemParamOriginV2) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItemParamOriginV2) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItemParamOriginV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItemParamOriginV2(val *ServiceItemParamOriginV2) *NullableServiceItemParamOriginV2 {
	return &NullableServiceItemParamOriginV2{value: val, isSet: true}
}

func (v NullableServiceItemParamOriginV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItemParamOriginV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

