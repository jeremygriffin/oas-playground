/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOServiceItemStatus The status of a service item, indicating where it is in the TOO's approval process.
type MTOServiceItemStatus string

// List of MTOServiceItemStatus
const (
	SUBMITTED MTOServiceItemStatus = "SUBMITTED"
	APPROVED MTOServiceItemStatus = "APPROVED"
	REJECTED MTOServiceItemStatus = "REJECTED"
)

// All allowed values of MTOServiceItemStatus enum
var AllowedMTOServiceItemStatusEnumValues = []MTOServiceItemStatus{
	"SUBMITTED",
	"APPROVED",
	"REJECTED",
}

func (v *MTOServiceItemStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOServiceItemStatus(value)
	for _, existing := range AllowedMTOServiceItemStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOServiceItemStatus", value)
}

// NewMTOServiceItemStatusFromValue returns a pointer to a valid MTOServiceItemStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOServiceItemStatusFromValue(v string) (*MTOServiceItemStatus, error) {
	ev := MTOServiceItemStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOServiceItemStatus: valid values are %v", v, AllowedMTOServiceItemStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOServiceItemStatus) IsValid() bool {
	for _, existing := range AllowedMTOServiceItemStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOServiceItemStatus value
func (v MTOServiceItemStatus) Ptr() *MTOServiceItemStatus {
	return &v
}

type NullableMTOServiceItemStatus struct {
	value *MTOServiceItemStatus
	isSet bool
}

func (v NullableMTOServiceItemStatus) Get() *MTOServiceItemStatus {
	return v.value
}

func (v *NullableMTOServiceItemStatus) Set(val *MTOServiceItemStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemStatus(val *MTOServiceItemStatus) *NullableMTOServiceItemStatus {
	return &NullableMTOServiceItemStatus{value: val, isSet: true}
}

func (v NullableMTOServiceItemStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

