/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MTOShipmentV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MTOShipmentV2{}

// MTOShipmentV2 struct for MTOShipmentV2
type MTOShipmentV2 struct {
	// A list of service items connected to this shipment.
	MtoServiceItems []MTOServiceItemV2V2 `json:"mtoServiceItems,omitempty"`
	// The ID of the shipment.
	Id *string `json:"id,omitempty"`
	// The ID of the move for this shipment.
	MoveTaskOrderID *string `json:"moveTaskOrderID,omitempty"`
	// The date when the Task Ordering Officer first approved this shipment for the move.
	ApprovedDate NullableString `json:"approvedDate,omitempty"`
	// The date the customer selects during onboarding as their preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the pack date, are derived from this date. 
	RequestedPickupDate NullableString `json:"requestedPickupDate,omitempty"`
	// The customer's preferred delivery date.
	RequestedDeliveryDate NullableString `json:"requestedDeliveryDate,omitempty"`
	// The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.
	ScheduledPickupDate NullableString `json:"scheduledPickupDate,omitempty"`
	// The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.
	ActualPickupDate NullableString `json:"actualPickupDate,omitempty"`
	// The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly. 
	FirstAvailableDeliveryDate NullableString `json:"firstAvailableDeliveryDate,omitempty"`
	// The latest date by which the Prime can deliver a customer's shipment without violating the contract. This is calculated based on weight, distance, and the scheduled pickup date. It cannot be modified. 
	RequiredDeliveryDate NullableString `json:"requiredDeliveryDate,omitempty"`
	// The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.
	ScheduledDeliveryDate NullableString `json:"scheduledDeliveryDate,omitempty"`
	// The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.
	ActualDeliveryDate NullableString `json:"actualDeliveryDate,omitempty"`
	// The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it. 
	PrimeEstimatedWeight NullableInt32 `json:"primeEstimatedWeight,omitempty"`
	// The date when the Prime contractor recorded the shipment's estimated weight.
	PrimeEstimatedWeightRecordedDate NullableString `json:"primeEstimatedWeightRecordedDate,omitempty"`
	// The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.
	PrimeActualWeight NullableInt32 `json:"primeActualWeight,omitempty"`
	// The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.
	NtsRecordedWeight NullableInt32 `json:"ntsRecordedWeight,omitempty"`
	// The customer can use the customer remarks field to inform the services counselor and the movers about any special circumstances for this shipment. Typical examples:   * bulky or fragile items,   * weapons,   * access info for their address.  Customer enters this information during onboarding. Optional field. 
	CustomerRemarks NullableString `json:"customerRemarks,omitempty"`
	// The counselor can use the counselor remarks field to inform the movers about any special circumstances for this shipment. Typical examples:   * bulky or fragile items,   * weapons,   * access info for their address.  Counselors enters this information when creating or editing an MTO Shipment. Optional field. 
	CounselorRemarks NullableString `json:"counselorRemarks,omitempty"`
	// The actual weight of any pro gear being shipped. 
	ActualProGearWeight NullableInt32 `json:"actualProGearWeight,omitempty"`
	// The actual weight of any spouse pro gear being shipped. 
	ActualSpouseProGearWeight NullableInt32 `json:"actualSpouseProGearWeight,omitempty"`
	// A list of the agents for a shipment. Agents are the people who the Prime contractor recognize as permitted to release (in the case of pickup) or receive (on delivery) a shipment. 
	Agents []MTOAgentV2V2 `json:"agents,omitempty"`
	SitExtensions []SITExtensionV2V2 `json:"sitExtensions,omitempty"`
	Reweigh *ReweighV2V2 `json:"reweigh,omitempty"`
	// The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details. 
	PickupAddress *AddressV2V2 `json:"pickupAddress,omitempty"`
	// Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details during onboarding, if they know their new address already.  May be blank when entered by the customer, required when entered by the Prime. May not represent the true final destination due to the shipment being diverted or placed in SIT. 
	DestinationAddress *AddressV2V2 `json:"destinationAddress,omitempty"`
	DestinationType NullableDestinationTypeV2V2 `json:"destinationType,omitempty"`
	// A second pickup address for this shipment, if the customer entered one. An optional field.
	SecondaryPickupAddress *AddressV2V2 `json:"secondaryPickupAddress,omitempty"`
	// A second delivery address for this shipment, if the customer entered one. An optional field.
	SecondaryDeliveryAddress *AddressV2V2 `json:"secondaryDeliveryAddress,omitempty"`
	StorageFacility *UpdateMTOShipmentStorageFacilityV2V2 `json:"storageFacility,omitempty"`
	ShipmentType *MTOShipmentTypeV2V2 `json:"shipmentType,omitempty"`
	// This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion. 
	Diversion *bool `json:"diversion,omitempty"`
	// The reason the TOO provided when requesting a diversion for this shipment. 
	DiversionReason NullableString `json:"diversionReason,omitempty"`
	// The status of a shipment, indicating where it is in the TOO's approval process. Can only be updated by the contractor in special circumstances. 
	Status *string `json:"status,omitempty"`
	PpmShipment NullablePPMShipmentV2V2 `json:"ppmShipment,omitempty"`
	DeliveryAddressUpdate *ShipmentAddressUpdateV2V2 `json:"deliveryAddressUpdate,omitempty"`
	// A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.
	ETag *string `json:"eTag,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor. 
	PointOfContact *string `json:"pointOfContact,omitempty"`
	// The SIT authorized end date for origin SIT.
	OriginSitAuthEndDate NullableString `json:"originSitAuthEndDate,omitempty"`
	// The SIT authorized end date for destination SIT.
	DestinationSitAuthEndDate NullableString `json:"destinationSitAuthEndDate,omitempty"`
}

// NewMTOShipmentV2 instantiates a new MTOShipmentV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMTOShipmentV2() *MTOShipmentV2 {
	this := MTOShipmentV2{}
	return &this
}

// NewMTOShipmentV2WithDefaults instantiates a new MTOShipmentV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMTOShipmentV2WithDefaults() *MTOShipmentV2 {
	this := MTOShipmentV2{}
	return &this
}

// GetMtoServiceItems returns the MtoServiceItems field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetMtoServiceItems() []MTOServiceItemV2V2 {
	if o == nil || IsNil(o.MtoServiceItems) {
		var ret []MTOServiceItemV2V2
		return ret
	}
	return o.MtoServiceItems
}

// GetMtoServiceItemsOk returns a tuple with the MtoServiceItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetMtoServiceItemsOk() ([]MTOServiceItemV2V2, bool) {
	if o == nil || IsNil(o.MtoServiceItems) {
		return nil, false
	}
	return o.MtoServiceItems, true
}

// HasMtoServiceItems returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasMtoServiceItems() bool {
	if o != nil && !IsNil(o.MtoServiceItems) {
		return true
	}

	return false
}

// SetMtoServiceItems gets a reference to the given []MTOServiceItemV2V2 and assigns it to the MtoServiceItems field.
func (o *MTOShipmentV2) SetMtoServiceItems(v []MTOServiceItemV2V2) {
	o.MtoServiceItems = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MTOShipmentV2) SetId(v string) {
	o.Id = &v
}

// GetMoveTaskOrderID returns the MoveTaskOrderID field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetMoveTaskOrderID() string {
	if o == nil || IsNil(o.MoveTaskOrderID) {
		var ret string
		return ret
	}
	return *o.MoveTaskOrderID
}

// GetMoveTaskOrderIDOk returns a tuple with the MoveTaskOrderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetMoveTaskOrderIDOk() (*string, bool) {
	if o == nil || IsNil(o.MoveTaskOrderID) {
		return nil, false
	}
	return o.MoveTaskOrderID, true
}

// HasMoveTaskOrderID returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasMoveTaskOrderID() bool {
	if o != nil && !IsNil(o.MoveTaskOrderID) {
		return true
	}

	return false
}

// SetMoveTaskOrderID gets a reference to the given string and assigns it to the MoveTaskOrderID field.
func (o *MTOShipmentV2) SetMoveTaskOrderID(v string) {
	o.MoveTaskOrderID = &v
}

// GetApprovedDate returns the ApprovedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetApprovedDate() string {
	if o == nil || IsNil(o.ApprovedDate.Get()) {
		var ret string
		return ret
	}
	return *o.ApprovedDate.Get()
}

// GetApprovedDateOk returns a tuple with the ApprovedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetApprovedDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovedDate.Get(), o.ApprovedDate.IsSet()
}

// HasApprovedDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasApprovedDate() bool {
	if o != nil && o.ApprovedDate.IsSet() {
		return true
	}

	return false
}

// SetApprovedDate gets a reference to the given NullableString and assigns it to the ApprovedDate field.
func (o *MTOShipmentV2) SetApprovedDate(v string) {
	o.ApprovedDate.Set(&v)
}
// SetApprovedDateNil sets the value for ApprovedDate to be an explicit nil
func (o *MTOShipmentV2) SetApprovedDateNil() {
	o.ApprovedDate.Set(nil)
}

// UnsetApprovedDate ensures that no value is present for ApprovedDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetApprovedDate() {
	o.ApprovedDate.Unset()
}

// GetRequestedPickupDate returns the RequestedPickupDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetRequestedPickupDate() string {
	if o == nil || IsNil(o.RequestedPickupDate.Get()) {
		var ret string
		return ret
	}
	return *o.RequestedPickupDate.Get()
}

// GetRequestedPickupDateOk returns a tuple with the RequestedPickupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetRequestedPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedPickupDate.Get(), o.RequestedPickupDate.IsSet()
}

// HasRequestedPickupDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasRequestedPickupDate() bool {
	if o != nil && o.RequestedPickupDate.IsSet() {
		return true
	}

	return false
}

// SetRequestedPickupDate gets a reference to the given NullableString and assigns it to the RequestedPickupDate field.
func (o *MTOShipmentV2) SetRequestedPickupDate(v string) {
	o.RequestedPickupDate.Set(&v)
}
// SetRequestedPickupDateNil sets the value for RequestedPickupDate to be an explicit nil
func (o *MTOShipmentV2) SetRequestedPickupDateNil() {
	o.RequestedPickupDate.Set(nil)
}

// UnsetRequestedPickupDate ensures that no value is present for RequestedPickupDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetRequestedPickupDate() {
	o.RequestedPickupDate.Unset()
}

// GetRequestedDeliveryDate returns the RequestedDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetRequestedDeliveryDate() string {
	if o == nil || IsNil(o.RequestedDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.RequestedDeliveryDate.Get()
}

// GetRequestedDeliveryDateOk returns a tuple with the RequestedDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetRequestedDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedDeliveryDate.Get(), o.RequestedDeliveryDate.IsSet()
}

// HasRequestedDeliveryDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasRequestedDeliveryDate() bool {
	if o != nil && o.RequestedDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetRequestedDeliveryDate gets a reference to the given NullableString and assigns it to the RequestedDeliveryDate field.
func (o *MTOShipmentV2) SetRequestedDeliveryDate(v string) {
	o.RequestedDeliveryDate.Set(&v)
}
// SetRequestedDeliveryDateNil sets the value for RequestedDeliveryDate to be an explicit nil
func (o *MTOShipmentV2) SetRequestedDeliveryDateNil() {
	o.RequestedDeliveryDate.Set(nil)
}

// UnsetRequestedDeliveryDate ensures that no value is present for RequestedDeliveryDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetRequestedDeliveryDate() {
	o.RequestedDeliveryDate.Unset()
}

// GetScheduledPickupDate returns the ScheduledPickupDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetScheduledPickupDate() string {
	if o == nil || IsNil(o.ScheduledPickupDate.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduledPickupDate.Get()
}

// GetScheduledPickupDateOk returns a tuple with the ScheduledPickupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetScheduledPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledPickupDate.Get(), o.ScheduledPickupDate.IsSet()
}

// HasScheduledPickupDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasScheduledPickupDate() bool {
	if o != nil && o.ScheduledPickupDate.IsSet() {
		return true
	}

	return false
}

// SetScheduledPickupDate gets a reference to the given NullableString and assigns it to the ScheduledPickupDate field.
func (o *MTOShipmentV2) SetScheduledPickupDate(v string) {
	o.ScheduledPickupDate.Set(&v)
}
// SetScheduledPickupDateNil sets the value for ScheduledPickupDate to be an explicit nil
func (o *MTOShipmentV2) SetScheduledPickupDateNil() {
	o.ScheduledPickupDate.Set(nil)
}

// UnsetScheduledPickupDate ensures that no value is present for ScheduledPickupDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetScheduledPickupDate() {
	o.ScheduledPickupDate.Unset()
}

// GetActualPickupDate returns the ActualPickupDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetActualPickupDate() string {
	if o == nil || IsNil(o.ActualPickupDate.Get()) {
		var ret string
		return ret
	}
	return *o.ActualPickupDate.Get()
}

// GetActualPickupDateOk returns a tuple with the ActualPickupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetActualPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualPickupDate.Get(), o.ActualPickupDate.IsSet()
}

// HasActualPickupDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasActualPickupDate() bool {
	if o != nil && o.ActualPickupDate.IsSet() {
		return true
	}

	return false
}

// SetActualPickupDate gets a reference to the given NullableString and assigns it to the ActualPickupDate field.
func (o *MTOShipmentV2) SetActualPickupDate(v string) {
	o.ActualPickupDate.Set(&v)
}
// SetActualPickupDateNil sets the value for ActualPickupDate to be an explicit nil
func (o *MTOShipmentV2) SetActualPickupDateNil() {
	o.ActualPickupDate.Set(nil)
}

// UnsetActualPickupDate ensures that no value is present for ActualPickupDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetActualPickupDate() {
	o.ActualPickupDate.Unset()
}

// GetFirstAvailableDeliveryDate returns the FirstAvailableDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetFirstAvailableDeliveryDate() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate.Get()
}

// GetFirstAvailableDeliveryDateOk returns a tuple with the FirstAvailableDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetFirstAvailableDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate.Get(), o.FirstAvailableDeliveryDate.IsSet()
}

// HasFirstAvailableDeliveryDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasFirstAvailableDeliveryDate() bool {
	if o != nil && o.FirstAvailableDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate field.
func (o *MTOShipmentV2) SetFirstAvailableDeliveryDate(v string) {
	o.FirstAvailableDeliveryDate.Set(&v)
}
// SetFirstAvailableDeliveryDateNil sets the value for FirstAvailableDeliveryDate to be an explicit nil
func (o *MTOShipmentV2) SetFirstAvailableDeliveryDateNil() {
	o.FirstAvailableDeliveryDate.Set(nil)
}

// UnsetFirstAvailableDeliveryDate ensures that no value is present for FirstAvailableDeliveryDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetFirstAvailableDeliveryDate() {
	o.FirstAvailableDeliveryDate.Unset()
}

// GetRequiredDeliveryDate returns the RequiredDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetRequiredDeliveryDate() string {
	if o == nil || IsNil(o.RequiredDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.RequiredDeliveryDate.Get()
}

// GetRequiredDeliveryDateOk returns a tuple with the RequiredDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetRequiredDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredDeliveryDate.Get(), o.RequiredDeliveryDate.IsSet()
}

// HasRequiredDeliveryDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasRequiredDeliveryDate() bool {
	if o != nil && o.RequiredDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetRequiredDeliveryDate gets a reference to the given NullableString and assigns it to the RequiredDeliveryDate field.
func (o *MTOShipmentV2) SetRequiredDeliveryDate(v string) {
	o.RequiredDeliveryDate.Set(&v)
}
// SetRequiredDeliveryDateNil sets the value for RequiredDeliveryDate to be an explicit nil
func (o *MTOShipmentV2) SetRequiredDeliveryDateNil() {
	o.RequiredDeliveryDate.Set(nil)
}

// UnsetRequiredDeliveryDate ensures that no value is present for RequiredDeliveryDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetRequiredDeliveryDate() {
	o.RequiredDeliveryDate.Unset()
}

// GetScheduledDeliveryDate returns the ScheduledDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetScheduledDeliveryDate() string {
	if o == nil || IsNil(o.ScheduledDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduledDeliveryDate.Get()
}

// GetScheduledDeliveryDateOk returns a tuple with the ScheduledDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetScheduledDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledDeliveryDate.Get(), o.ScheduledDeliveryDate.IsSet()
}

// HasScheduledDeliveryDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasScheduledDeliveryDate() bool {
	if o != nil && o.ScheduledDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetScheduledDeliveryDate gets a reference to the given NullableString and assigns it to the ScheduledDeliveryDate field.
func (o *MTOShipmentV2) SetScheduledDeliveryDate(v string) {
	o.ScheduledDeliveryDate.Set(&v)
}
// SetScheduledDeliveryDateNil sets the value for ScheduledDeliveryDate to be an explicit nil
func (o *MTOShipmentV2) SetScheduledDeliveryDateNil() {
	o.ScheduledDeliveryDate.Set(nil)
}

// UnsetScheduledDeliveryDate ensures that no value is present for ScheduledDeliveryDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetScheduledDeliveryDate() {
	o.ScheduledDeliveryDate.Unset()
}

// GetActualDeliveryDate returns the ActualDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetActualDeliveryDate() string {
	if o == nil || IsNil(o.ActualDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.ActualDeliveryDate.Get()
}

// GetActualDeliveryDateOk returns a tuple with the ActualDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetActualDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualDeliveryDate.Get(), o.ActualDeliveryDate.IsSet()
}

// HasActualDeliveryDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasActualDeliveryDate() bool {
	if o != nil && o.ActualDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetActualDeliveryDate gets a reference to the given NullableString and assigns it to the ActualDeliveryDate field.
func (o *MTOShipmentV2) SetActualDeliveryDate(v string) {
	o.ActualDeliveryDate.Set(&v)
}
// SetActualDeliveryDateNil sets the value for ActualDeliveryDate to be an explicit nil
func (o *MTOShipmentV2) SetActualDeliveryDateNil() {
	o.ActualDeliveryDate.Set(nil)
}

// UnsetActualDeliveryDate ensures that no value is present for ActualDeliveryDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetActualDeliveryDate() {
	o.ActualDeliveryDate.Unset()
}

// GetPrimeEstimatedWeight returns the PrimeEstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetPrimeEstimatedWeight() int32 {
	if o == nil || IsNil(o.PrimeEstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.PrimeEstimatedWeight.Get()
}

// GetPrimeEstimatedWeightOk returns a tuple with the PrimeEstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetPrimeEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimeEstimatedWeight.Get(), o.PrimeEstimatedWeight.IsSet()
}

// HasPrimeEstimatedWeight returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPrimeEstimatedWeight() bool {
	if o != nil && o.PrimeEstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetPrimeEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the PrimeEstimatedWeight field.
func (o *MTOShipmentV2) SetPrimeEstimatedWeight(v int32) {
	o.PrimeEstimatedWeight.Set(&v)
}
// SetPrimeEstimatedWeightNil sets the value for PrimeEstimatedWeight to be an explicit nil
func (o *MTOShipmentV2) SetPrimeEstimatedWeightNil() {
	o.PrimeEstimatedWeight.Set(nil)
}

// UnsetPrimeEstimatedWeight ensures that no value is present for PrimeEstimatedWeight, not even an explicit nil
func (o *MTOShipmentV2) UnsetPrimeEstimatedWeight() {
	o.PrimeEstimatedWeight.Unset()
}

// GetPrimeEstimatedWeightRecordedDate returns the PrimeEstimatedWeightRecordedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetPrimeEstimatedWeightRecordedDate() string {
	if o == nil || IsNil(o.PrimeEstimatedWeightRecordedDate.Get()) {
		var ret string
		return ret
	}
	return *o.PrimeEstimatedWeightRecordedDate.Get()
}

// GetPrimeEstimatedWeightRecordedDateOk returns a tuple with the PrimeEstimatedWeightRecordedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetPrimeEstimatedWeightRecordedDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimeEstimatedWeightRecordedDate.Get(), o.PrimeEstimatedWeightRecordedDate.IsSet()
}

// HasPrimeEstimatedWeightRecordedDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPrimeEstimatedWeightRecordedDate() bool {
	if o != nil && o.PrimeEstimatedWeightRecordedDate.IsSet() {
		return true
	}

	return false
}

// SetPrimeEstimatedWeightRecordedDate gets a reference to the given NullableString and assigns it to the PrimeEstimatedWeightRecordedDate field.
func (o *MTOShipmentV2) SetPrimeEstimatedWeightRecordedDate(v string) {
	o.PrimeEstimatedWeightRecordedDate.Set(&v)
}
// SetPrimeEstimatedWeightRecordedDateNil sets the value for PrimeEstimatedWeightRecordedDate to be an explicit nil
func (o *MTOShipmentV2) SetPrimeEstimatedWeightRecordedDateNil() {
	o.PrimeEstimatedWeightRecordedDate.Set(nil)
}

// UnsetPrimeEstimatedWeightRecordedDate ensures that no value is present for PrimeEstimatedWeightRecordedDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetPrimeEstimatedWeightRecordedDate() {
	o.PrimeEstimatedWeightRecordedDate.Unset()
}

// GetPrimeActualWeight returns the PrimeActualWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetPrimeActualWeight() int32 {
	if o == nil || IsNil(o.PrimeActualWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.PrimeActualWeight.Get()
}

// GetPrimeActualWeightOk returns a tuple with the PrimeActualWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetPrimeActualWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimeActualWeight.Get(), o.PrimeActualWeight.IsSet()
}

// HasPrimeActualWeight returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPrimeActualWeight() bool {
	if o != nil && o.PrimeActualWeight.IsSet() {
		return true
	}

	return false
}

// SetPrimeActualWeight gets a reference to the given NullableInt32 and assigns it to the PrimeActualWeight field.
func (o *MTOShipmentV2) SetPrimeActualWeight(v int32) {
	o.PrimeActualWeight.Set(&v)
}
// SetPrimeActualWeightNil sets the value for PrimeActualWeight to be an explicit nil
func (o *MTOShipmentV2) SetPrimeActualWeightNil() {
	o.PrimeActualWeight.Set(nil)
}

// UnsetPrimeActualWeight ensures that no value is present for PrimeActualWeight, not even an explicit nil
func (o *MTOShipmentV2) UnsetPrimeActualWeight() {
	o.PrimeActualWeight.Unset()
}

// GetNtsRecordedWeight returns the NtsRecordedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetNtsRecordedWeight() int32 {
	if o == nil || IsNil(o.NtsRecordedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.NtsRecordedWeight.Get()
}

// GetNtsRecordedWeightOk returns a tuple with the NtsRecordedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetNtsRecordedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NtsRecordedWeight.Get(), o.NtsRecordedWeight.IsSet()
}

// HasNtsRecordedWeight returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasNtsRecordedWeight() bool {
	if o != nil && o.NtsRecordedWeight.IsSet() {
		return true
	}

	return false
}

// SetNtsRecordedWeight gets a reference to the given NullableInt32 and assigns it to the NtsRecordedWeight field.
func (o *MTOShipmentV2) SetNtsRecordedWeight(v int32) {
	o.NtsRecordedWeight.Set(&v)
}
// SetNtsRecordedWeightNil sets the value for NtsRecordedWeight to be an explicit nil
func (o *MTOShipmentV2) SetNtsRecordedWeightNil() {
	o.NtsRecordedWeight.Set(nil)
}

// UnsetNtsRecordedWeight ensures that no value is present for NtsRecordedWeight, not even an explicit nil
func (o *MTOShipmentV2) UnsetNtsRecordedWeight() {
	o.NtsRecordedWeight.Unset()
}

// GetCustomerRemarks returns the CustomerRemarks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetCustomerRemarks() string {
	if o == nil || IsNil(o.CustomerRemarks.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerRemarks.Get()
}

// GetCustomerRemarksOk returns a tuple with the CustomerRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetCustomerRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerRemarks.Get(), o.CustomerRemarks.IsSet()
}

// HasCustomerRemarks returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasCustomerRemarks() bool {
	if o != nil && o.CustomerRemarks.IsSet() {
		return true
	}

	return false
}

// SetCustomerRemarks gets a reference to the given NullableString and assigns it to the CustomerRemarks field.
func (o *MTOShipmentV2) SetCustomerRemarks(v string) {
	o.CustomerRemarks.Set(&v)
}
// SetCustomerRemarksNil sets the value for CustomerRemarks to be an explicit nil
func (o *MTOShipmentV2) SetCustomerRemarksNil() {
	o.CustomerRemarks.Set(nil)
}

// UnsetCustomerRemarks ensures that no value is present for CustomerRemarks, not even an explicit nil
func (o *MTOShipmentV2) UnsetCustomerRemarks() {
	o.CustomerRemarks.Unset()
}

// GetCounselorRemarks returns the CounselorRemarks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetCounselorRemarks() string {
	if o == nil || IsNil(o.CounselorRemarks.Get()) {
		var ret string
		return ret
	}
	return *o.CounselorRemarks.Get()
}

// GetCounselorRemarksOk returns a tuple with the CounselorRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetCounselorRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CounselorRemarks.Get(), o.CounselorRemarks.IsSet()
}

// HasCounselorRemarks returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasCounselorRemarks() bool {
	if o != nil && o.CounselorRemarks.IsSet() {
		return true
	}

	return false
}

// SetCounselorRemarks gets a reference to the given NullableString and assigns it to the CounselorRemarks field.
func (o *MTOShipmentV2) SetCounselorRemarks(v string) {
	o.CounselorRemarks.Set(&v)
}
// SetCounselorRemarksNil sets the value for CounselorRemarks to be an explicit nil
func (o *MTOShipmentV2) SetCounselorRemarksNil() {
	o.CounselorRemarks.Set(nil)
}

// UnsetCounselorRemarks ensures that no value is present for CounselorRemarks, not even an explicit nil
func (o *MTOShipmentV2) UnsetCounselorRemarks() {
	o.CounselorRemarks.Unset()
}

// GetActualProGearWeight returns the ActualProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetActualProGearWeight() int32 {
	if o == nil || IsNil(o.ActualProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ActualProGearWeight.Get()
}

// GetActualProGearWeightOk returns a tuple with the ActualProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetActualProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualProGearWeight.Get(), o.ActualProGearWeight.IsSet()
}

// HasActualProGearWeight returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasActualProGearWeight() bool {
	if o != nil && o.ActualProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetActualProGearWeight gets a reference to the given NullableInt32 and assigns it to the ActualProGearWeight field.
func (o *MTOShipmentV2) SetActualProGearWeight(v int32) {
	o.ActualProGearWeight.Set(&v)
}
// SetActualProGearWeightNil sets the value for ActualProGearWeight to be an explicit nil
func (o *MTOShipmentV2) SetActualProGearWeightNil() {
	o.ActualProGearWeight.Set(nil)
}

// UnsetActualProGearWeight ensures that no value is present for ActualProGearWeight, not even an explicit nil
func (o *MTOShipmentV2) UnsetActualProGearWeight() {
	o.ActualProGearWeight.Unset()
}

// GetActualSpouseProGearWeight returns the ActualSpouseProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetActualSpouseProGearWeight() int32 {
	if o == nil || IsNil(o.ActualSpouseProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ActualSpouseProGearWeight.Get()
}

// GetActualSpouseProGearWeightOk returns a tuple with the ActualSpouseProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetActualSpouseProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualSpouseProGearWeight.Get(), o.ActualSpouseProGearWeight.IsSet()
}

// HasActualSpouseProGearWeight returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasActualSpouseProGearWeight() bool {
	if o != nil && o.ActualSpouseProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetActualSpouseProGearWeight gets a reference to the given NullableInt32 and assigns it to the ActualSpouseProGearWeight field.
func (o *MTOShipmentV2) SetActualSpouseProGearWeight(v int32) {
	o.ActualSpouseProGearWeight.Set(&v)
}
// SetActualSpouseProGearWeightNil sets the value for ActualSpouseProGearWeight to be an explicit nil
func (o *MTOShipmentV2) SetActualSpouseProGearWeightNil() {
	o.ActualSpouseProGearWeight.Set(nil)
}

// UnsetActualSpouseProGearWeight ensures that no value is present for ActualSpouseProGearWeight, not even an explicit nil
func (o *MTOShipmentV2) UnsetActualSpouseProGearWeight() {
	o.ActualSpouseProGearWeight.Unset()
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetAgents() []MTOAgentV2V2 {
	if o == nil || IsNil(o.Agents) {
		var ret []MTOAgentV2V2
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetAgentsOk() ([]MTOAgentV2V2, bool) {
	if o == nil || IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasAgents() bool {
	if o != nil && !IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []MTOAgentV2V2 and assigns it to the Agents field.
func (o *MTOShipmentV2) SetAgents(v []MTOAgentV2V2) {
	o.Agents = v
}

// GetSitExtensions returns the SitExtensions field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetSitExtensions() []SITExtensionV2V2 {
	if o == nil || IsNil(o.SitExtensions) {
		var ret []SITExtensionV2V2
		return ret
	}
	return o.SitExtensions
}

// GetSitExtensionsOk returns a tuple with the SitExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetSitExtensionsOk() ([]SITExtensionV2V2, bool) {
	if o == nil || IsNil(o.SitExtensions) {
		return nil, false
	}
	return o.SitExtensions, true
}

// HasSitExtensions returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasSitExtensions() bool {
	if o != nil && !IsNil(o.SitExtensions) {
		return true
	}

	return false
}

// SetSitExtensions gets a reference to the given []SITExtensionV2V2 and assigns it to the SitExtensions field.
func (o *MTOShipmentV2) SetSitExtensions(v []SITExtensionV2V2) {
	o.SitExtensions = v
}

// GetReweigh returns the Reweigh field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetReweigh() ReweighV2V2 {
	if o == nil || IsNil(o.Reweigh) {
		var ret ReweighV2V2
		return ret
	}
	return *o.Reweigh
}

// GetReweighOk returns a tuple with the Reweigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetReweighOk() (*ReweighV2V2, bool) {
	if o == nil || IsNil(o.Reweigh) {
		return nil, false
	}
	return o.Reweigh, true
}

// HasReweigh returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasReweigh() bool {
	if o != nil && !IsNil(o.Reweigh) {
		return true
	}

	return false
}

// SetReweigh gets a reference to the given ReweighV2V2 and assigns it to the Reweigh field.
func (o *MTOShipmentV2) SetReweigh(v ReweighV2V2) {
	o.Reweigh = &v
}

// GetPickupAddress returns the PickupAddress field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetPickupAddress() AddressV2V2 {
	if o == nil || IsNil(o.PickupAddress) {
		var ret AddressV2V2
		return ret
	}
	return *o.PickupAddress
}

// GetPickupAddressOk returns a tuple with the PickupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetPickupAddressOk() (*AddressV2V2, bool) {
	if o == nil || IsNil(o.PickupAddress) {
		return nil, false
	}
	return o.PickupAddress, true
}

// HasPickupAddress returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPickupAddress() bool {
	if o != nil && !IsNil(o.PickupAddress) {
		return true
	}

	return false
}

// SetPickupAddress gets a reference to the given AddressV2V2 and assigns it to the PickupAddress field.
func (o *MTOShipmentV2) SetPickupAddress(v AddressV2V2) {
	o.PickupAddress = &v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetDestinationAddress() AddressV2V2 {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret AddressV2V2
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetDestinationAddressOk() (*AddressV2V2, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given AddressV2V2 and assigns it to the DestinationAddress field.
func (o *MTOShipmentV2) SetDestinationAddress(v AddressV2V2) {
	o.DestinationAddress = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetDestinationType() DestinationTypeV2V2 {
	if o == nil || IsNil(o.DestinationType.Get()) {
		var ret DestinationTypeV2V2
		return ret
	}
	return *o.DestinationType.Get()
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetDestinationTypeOk() (*DestinationTypeV2V2, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationType.Get(), o.DestinationType.IsSet()
}

// HasDestinationType returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDestinationType() bool {
	if o != nil && o.DestinationType.IsSet() {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given NullableDestinationTypeV2V2 and assigns it to the DestinationType field.
func (o *MTOShipmentV2) SetDestinationType(v DestinationTypeV2V2) {
	o.DestinationType.Set(&v)
}
// SetDestinationTypeNil sets the value for DestinationType to be an explicit nil
func (o *MTOShipmentV2) SetDestinationTypeNil() {
	o.DestinationType.Set(nil)
}

// UnsetDestinationType ensures that no value is present for DestinationType, not even an explicit nil
func (o *MTOShipmentV2) UnsetDestinationType() {
	o.DestinationType.Unset()
}

// GetSecondaryPickupAddress returns the SecondaryPickupAddress field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetSecondaryPickupAddress() AddressV2V2 {
	if o == nil || IsNil(o.SecondaryPickupAddress) {
		var ret AddressV2V2
		return ret
	}
	return *o.SecondaryPickupAddress
}

// GetSecondaryPickupAddressOk returns a tuple with the SecondaryPickupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetSecondaryPickupAddressOk() (*AddressV2V2, bool) {
	if o == nil || IsNil(o.SecondaryPickupAddress) {
		return nil, false
	}
	return o.SecondaryPickupAddress, true
}

// HasSecondaryPickupAddress returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasSecondaryPickupAddress() bool {
	if o != nil && !IsNil(o.SecondaryPickupAddress) {
		return true
	}

	return false
}

// SetSecondaryPickupAddress gets a reference to the given AddressV2V2 and assigns it to the SecondaryPickupAddress field.
func (o *MTOShipmentV2) SetSecondaryPickupAddress(v AddressV2V2) {
	o.SecondaryPickupAddress = &v
}

// GetSecondaryDeliveryAddress returns the SecondaryDeliveryAddress field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetSecondaryDeliveryAddress() AddressV2V2 {
	if o == nil || IsNil(o.SecondaryDeliveryAddress) {
		var ret AddressV2V2
		return ret
	}
	return *o.SecondaryDeliveryAddress
}

// GetSecondaryDeliveryAddressOk returns a tuple with the SecondaryDeliveryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetSecondaryDeliveryAddressOk() (*AddressV2V2, bool) {
	if o == nil || IsNil(o.SecondaryDeliveryAddress) {
		return nil, false
	}
	return o.SecondaryDeliveryAddress, true
}

// HasSecondaryDeliveryAddress returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasSecondaryDeliveryAddress() bool {
	if o != nil && !IsNil(o.SecondaryDeliveryAddress) {
		return true
	}

	return false
}

// SetSecondaryDeliveryAddress gets a reference to the given AddressV2V2 and assigns it to the SecondaryDeliveryAddress field.
func (o *MTOShipmentV2) SetSecondaryDeliveryAddress(v AddressV2V2) {
	o.SecondaryDeliveryAddress = &v
}

// GetStorageFacility returns the StorageFacility field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetStorageFacility() UpdateMTOShipmentStorageFacilityV2V2 {
	if o == nil || IsNil(o.StorageFacility) {
		var ret UpdateMTOShipmentStorageFacilityV2V2
		return ret
	}
	return *o.StorageFacility
}

// GetStorageFacilityOk returns a tuple with the StorageFacility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetStorageFacilityOk() (*UpdateMTOShipmentStorageFacilityV2V2, bool) {
	if o == nil || IsNil(o.StorageFacility) {
		return nil, false
	}
	return o.StorageFacility, true
}

// HasStorageFacility returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasStorageFacility() bool {
	if o != nil && !IsNil(o.StorageFacility) {
		return true
	}

	return false
}

// SetStorageFacility gets a reference to the given UpdateMTOShipmentStorageFacilityV2V2 and assigns it to the StorageFacility field.
func (o *MTOShipmentV2) SetStorageFacility(v UpdateMTOShipmentStorageFacilityV2V2) {
	o.StorageFacility = &v
}

// GetShipmentType returns the ShipmentType field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetShipmentType() MTOShipmentTypeV2V2 {
	if o == nil || IsNil(o.ShipmentType) {
		var ret MTOShipmentTypeV2V2
		return ret
	}
	return *o.ShipmentType
}

// GetShipmentTypeOk returns a tuple with the ShipmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetShipmentTypeOk() (*MTOShipmentTypeV2V2, bool) {
	if o == nil || IsNil(o.ShipmentType) {
		return nil, false
	}
	return o.ShipmentType, true
}

// HasShipmentType returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasShipmentType() bool {
	if o != nil && !IsNil(o.ShipmentType) {
		return true
	}

	return false
}

// SetShipmentType gets a reference to the given MTOShipmentTypeV2V2 and assigns it to the ShipmentType field.
func (o *MTOShipmentV2) SetShipmentType(v MTOShipmentTypeV2V2) {
	o.ShipmentType = &v
}

// GetDiversion returns the Diversion field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetDiversion() bool {
	if o == nil || IsNil(o.Diversion) {
		var ret bool
		return ret
	}
	return *o.Diversion
}

// GetDiversionOk returns a tuple with the Diversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetDiversionOk() (*bool, bool) {
	if o == nil || IsNil(o.Diversion) {
		return nil, false
	}
	return o.Diversion, true
}

// HasDiversion returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDiversion() bool {
	if o != nil && !IsNil(o.Diversion) {
		return true
	}

	return false
}

// SetDiversion gets a reference to the given bool and assigns it to the Diversion field.
func (o *MTOShipmentV2) SetDiversion(v bool) {
	o.Diversion = &v
}

// GetDiversionReason returns the DiversionReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetDiversionReason() string {
	if o == nil || IsNil(o.DiversionReason.Get()) {
		var ret string
		return ret
	}
	return *o.DiversionReason.Get()
}

// GetDiversionReasonOk returns a tuple with the DiversionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetDiversionReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiversionReason.Get(), o.DiversionReason.IsSet()
}

// HasDiversionReason returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDiversionReason() bool {
	if o != nil && o.DiversionReason.IsSet() {
		return true
	}

	return false
}

// SetDiversionReason gets a reference to the given NullableString and assigns it to the DiversionReason field.
func (o *MTOShipmentV2) SetDiversionReason(v string) {
	o.DiversionReason.Set(&v)
}
// SetDiversionReasonNil sets the value for DiversionReason to be an explicit nil
func (o *MTOShipmentV2) SetDiversionReasonNil() {
	o.DiversionReason.Set(nil)
}

// UnsetDiversionReason ensures that no value is present for DiversionReason, not even an explicit nil
func (o *MTOShipmentV2) UnsetDiversionReason() {
	o.DiversionReason.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MTOShipmentV2) SetStatus(v string) {
	o.Status = &v
}

// GetPpmShipment returns the PpmShipment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetPpmShipment() PPMShipmentV2V2 {
	if o == nil || IsNil(o.PpmShipment.Get()) {
		var ret PPMShipmentV2V2
		return ret
	}
	return *o.PpmShipment.Get()
}

// GetPpmShipmentOk returns a tuple with the PpmShipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetPpmShipmentOk() (*PPMShipmentV2V2, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpmShipment.Get(), o.PpmShipment.IsSet()
}

// HasPpmShipment returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPpmShipment() bool {
	if o != nil && o.PpmShipment.IsSet() {
		return true
	}

	return false
}

// SetPpmShipment gets a reference to the given NullablePPMShipmentV2V2 and assigns it to the PpmShipment field.
func (o *MTOShipmentV2) SetPpmShipment(v PPMShipmentV2V2) {
	o.PpmShipment.Set(&v)
}
// SetPpmShipmentNil sets the value for PpmShipment to be an explicit nil
func (o *MTOShipmentV2) SetPpmShipmentNil() {
	o.PpmShipment.Set(nil)
}

// UnsetPpmShipment ensures that no value is present for PpmShipment, not even an explicit nil
func (o *MTOShipmentV2) UnsetPpmShipment() {
	o.PpmShipment.Unset()
}

// GetDeliveryAddressUpdate returns the DeliveryAddressUpdate field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetDeliveryAddressUpdate() ShipmentAddressUpdateV2V2 {
	if o == nil || IsNil(o.DeliveryAddressUpdate) {
		var ret ShipmentAddressUpdateV2V2
		return ret
	}
	return *o.DeliveryAddressUpdate
}

// GetDeliveryAddressUpdateOk returns a tuple with the DeliveryAddressUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetDeliveryAddressUpdateOk() (*ShipmentAddressUpdateV2V2, bool) {
	if o == nil || IsNil(o.DeliveryAddressUpdate) {
		return nil, false
	}
	return o.DeliveryAddressUpdate, true
}

// HasDeliveryAddressUpdate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDeliveryAddressUpdate() bool {
	if o != nil && !IsNil(o.DeliveryAddressUpdate) {
		return true
	}

	return false
}

// SetDeliveryAddressUpdate gets a reference to the given ShipmentAddressUpdateV2V2 and assigns it to the DeliveryAddressUpdate field.
func (o *MTOShipmentV2) SetDeliveryAddressUpdate(v ShipmentAddressUpdateV2V2) {
	o.DeliveryAddressUpdate = &v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *MTOShipmentV2) SetETag(v string) {
	o.ETag = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MTOShipmentV2) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *MTOShipmentV2) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetPointOfContact returns the PointOfContact field value if set, zero value otherwise.
func (o *MTOShipmentV2) GetPointOfContact() string {
	if o == nil || IsNil(o.PointOfContact) {
		var ret string
		return ret
	}
	return *o.PointOfContact
}

// GetPointOfContactOk returns a tuple with the PointOfContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MTOShipmentV2) GetPointOfContactOk() (*string, bool) {
	if o == nil || IsNil(o.PointOfContact) {
		return nil, false
	}
	return o.PointOfContact, true
}

// HasPointOfContact returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasPointOfContact() bool {
	if o != nil && !IsNil(o.PointOfContact) {
		return true
	}

	return false
}

// SetPointOfContact gets a reference to the given string and assigns it to the PointOfContact field.
func (o *MTOShipmentV2) SetPointOfContact(v string) {
	o.PointOfContact = &v
}

// GetOriginSitAuthEndDate returns the OriginSitAuthEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetOriginSitAuthEndDate() string {
	if o == nil || IsNil(o.OriginSitAuthEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.OriginSitAuthEndDate.Get()
}

// GetOriginSitAuthEndDateOk returns a tuple with the OriginSitAuthEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetOriginSitAuthEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginSitAuthEndDate.Get(), o.OriginSitAuthEndDate.IsSet()
}

// HasOriginSitAuthEndDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasOriginSitAuthEndDate() bool {
	if o != nil && o.OriginSitAuthEndDate.IsSet() {
		return true
	}

	return false
}

// SetOriginSitAuthEndDate gets a reference to the given NullableString and assigns it to the OriginSitAuthEndDate field.
func (o *MTOShipmentV2) SetOriginSitAuthEndDate(v string) {
	o.OriginSitAuthEndDate.Set(&v)
}
// SetOriginSitAuthEndDateNil sets the value for OriginSitAuthEndDate to be an explicit nil
func (o *MTOShipmentV2) SetOriginSitAuthEndDateNil() {
	o.OriginSitAuthEndDate.Set(nil)
}

// UnsetOriginSitAuthEndDate ensures that no value is present for OriginSitAuthEndDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetOriginSitAuthEndDate() {
	o.OriginSitAuthEndDate.Unset()
}

// GetDestinationSitAuthEndDate returns the DestinationSitAuthEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOShipmentV2) GetDestinationSitAuthEndDate() string {
	if o == nil || IsNil(o.DestinationSitAuthEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.DestinationSitAuthEndDate.Get()
}

// GetDestinationSitAuthEndDateOk returns a tuple with the DestinationSitAuthEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOShipmentV2) GetDestinationSitAuthEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationSitAuthEndDate.Get(), o.DestinationSitAuthEndDate.IsSet()
}

// HasDestinationSitAuthEndDate returns a boolean if a field has been set.
func (o *MTOShipmentV2) HasDestinationSitAuthEndDate() bool {
	if o != nil && o.DestinationSitAuthEndDate.IsSet() {
		return true
	}

	return false
}

// SetDestinationSitAuthEndDate gets a reference to the given NullableString and assigns it to the DestinationSitAuthEndDate field.
func (o *MTOShipmentV2) SetDestinationSitAuthEndDate(v string) {
	o.DestinationSitAuthEndDate.Set(&v)
}
// SetDestinationSitAuthEndDateNil sets the value for DestinationSitAuthEndDate to be an explicit nil
func (o *MTOShipmentV2) SetDestinationSitAuthEndDateNil() {
	o.DestinationSitAuthEndDate.Set(nil)
}

// UnsetDestinationSitAuthEndDate ensures that no value is present for DestinationSitAuthEndDate, not even an explicit nil
func (o *MTOShipmentV2) UnsetDestinationSitAuthEndDate() {
	o.DestinationSitAuthEndDate.Unset()
}

func (o MTOShipmentV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MTOShipmentV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MtoServiceItems) {
		toSerialize["mtoServiceItems"] = o.MtoServiceItems
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MoveTaskOrderID) {
		toSerialize["moveTaskOrderID"] = o.MoveTaskOrderID
	}
	if o.ApprovedDate.IsSet() {
		toSerialize["approvedDate"] = o.ApprovedDate.Get()
	}
	if o.RequestedPickupDate.IsSet() {
		toSerialize["requestedPickupDate"] = o.RequestedPickupDate.Get()
	}
	if o.RequestedDeliveryDate.IsSet() {
		toSerialize["requestedDeliveryDate"] = o.RequestedDeliveryDate.Get()
	}
	if o.ScheduledPickupDate.IsSet() {
		toSerialize["scheduledPickupDate"] = o.ScheduledPickupDate.Get()
	}
	if o.ActualPickupDate.IsSet() {
		toSerialize["actualPickupDate"] = o.ActualPickupDate.Get()
	}
	if o.FirstAvailableDeliveryDate.IsSet() {
		toSerialize["firstAvailableDeliveryDate"] = o.FirstAvailableDeliveryDate.Get()
	}
	if o.RequiredDeliveryDate.IsSet() {
		toSerialize["requiredDeliveryDate"] = o.RequiredDeliveryDate.Get()
	}
	if o.ScheduledDeliveryDate.IsSet() {
		toSerialize["scheduledDeliveryDate"] = o.ScheduledDeliveryDate.Get()
	}
	if o.ActualDeliveryDate.IsSet() {
		toSerialize["actualDeliveryDate"] = o.ActualDeliveryDate.Get()
	}
	if o.PrimeEstimatedWeight.IsSet() {
		toSerialize["primeEstimatedWeight"] = o.PrimeEstimatedWeight.Get()
	}
	if o.PrimeEstimatedWeightRecordedDate.IsSet() {
		toSerialize["primeEstimatedWeightRecordedDate"] = o.PrimeEstimatedWeightRecordedDate.Get()
	}
	if o.PrimeActualWeight.IsSet() {
		toSerialize["primeActualWeight"] = o.PrimeActualWeight.Get()
	}
	if o.NtsRecordedWeight.IsSet() {
		toSerialize["ntsRecordedWeight"] = o.NtsRecordedWeight.Get()
	}
	if o.CustomerRemarks.IsSet() {
		toSerialize["customerRemarks"] = o.CustomerRemarks.Get()
	}
	if o.CounselorRemarks.IsSet() {
		toSerialize["counselorRemarks"] = o.CounselorRemarks.Get()
	}
	if o.ActualProGearWeight.IsSet() {
		toSerialize["actualProGearWeight"] = o.ActualProGearWeight.Get()
	}
	if o.ActualSpouseProGearWeight.IsSet() {
		toSerialize["actualSpouseProGearWeight"] = o.ActualSpouseProGearWeight.Get()
	}
	if !IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !IsNil(o.SitExtensions) {
		toSerialize["sitExtensions"] = o.SitExtensions
	}
	if !IsNil(o.Reweigh) {
		toSerialize["reweigh"] = o.Reweigh
	}
	if !IsNil(o.PickupAddress) {
		toSerialize["pickupAddress"] = o.PickupAddress
	}
	if !IsNil(o.DestinationAddress) {
		toSerialize["destinationAddress"] = o.DestinationAddress
	}
	if o.DestinationType.IsSet() {
		toSerialize["destinationType"] = o.DestinationType.Get()
	}
	if !IsNil(o.SecondaryPickupAddress) {
		toSerialize["secondaryPickupAddress"] = o.SecondaryPickupAddress
	}
	if !IsNil(o.SecondaryDeliveryAddress) {
		toSerialize["secondaryDeliveryAddress"] = o.SecondaryDeliveryAddress
	}
	if !IsNil(o.StorageFacility) {
		toSerialize["storageFacility"] = o.StorageFacility
	}
	if !IsNil(o.ShipmentType) {
		toSerialize["shipmentType"] = o.ShipmentType
	}
	if !IsNil(o.Diversion) {
		toSerialize["diversion"] = o.Diversion
	}
	if o.DiversionReason.IsSet() {
		toSerialize["diversionReason"] = o.DiversionReason.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.PpmShipment.IsSet() {
		toSerialize["ppmShipment"] = o.PpmShipment.Get()
	}
	if !IsNil(o.DeliveryAddressUpdate) {
		toSerialize["deliveryAddressUpdate"] = o.DeliveryAddressUpdate
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.PointOfContact) {
		toSerialize["pointOfContact"] = o.PointOfContact
	}
	if o.OriginSitAuthEndDate.IsSet() {
		toSerialize["originSitAuthEndDate"] = o.OriginSitAuthEndDate.Get()
	}
	if o.DestinationSitAuthEndDate.IsSet() {
		toSerialize["destinationSitAuthEndDate"] = o.DestinationSitAuthEndDate.Get()
	}
	return toSerialize, nil
}

type NullableMTOShipmentV2 struct {
	value *MTOShipmentV2
	isSet bool
}

func (v NullableMTOShipmentV2) Get() *MTOShipmentV2 {
	return v.value
}

func (v *NullableMTOShipmentV2) Set(val *MTOShipmentV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOShipmentV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOShipmentV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOShipmentV2(val *MTOShipmentV2) *NullableMTOShipmentV2 {
	return &NullableMTOShipmentV2{value: val, isSet: true}
}

func (v NullableMTOShipmentV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOShipmentV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


