/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ReweighRequesterV2 the model 'ReweighRequesterV2'
type ReweighRequesterV2 string

// List of ReweighRequester
const (
	CUSTOMER ReweighRequesterV2 = "CUSTOMER"
	PRIME ReweighRequesterV2 = "PRIME"
	SYSTEM ReweighRequesterV2 = "SYSTEM"
	TOO ReweighRequesterV2 = "TOO"
)

// All allowed values of ReweighRequesterV2 enum
var AllowedReweighRequesterV2EnumValues = []ReweighRequesterV2{
	"CUSTOMER",
	"PRIME",
	"SYSTEM",
	"TOO",
}

func (v *ReweighRequesterV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReweighRequesterV2(value)
	for _, existing := range AllowedReweighRequesterV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReweighRequesterV2", value)
}

// NewReweighRequesterV2FromValue returns a pointer to a valid ReweighRequesterV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReweighRequesterV2FromValue(v string) (*ReweighRequesterV2, error) {
	ev := ReweighRequesterV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ReweighRequesterV2: valid values are %v", v, AllowedReweighRequesterV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReweighRequesterV2) IsValid() bool {
	for _, existing := range AllowedReweighRequesterV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ReweighRequester value
func (v ReweighRequesterV2) Ptr() *ReweighRequesterV2 {
	return &v
}

type NullableReweighRequesterV2 struct {
	value *ReweighRequesterV2
	isSet bool
}

func (v NullableReweighRequesterV2) Get() *ReweighRequesterV2 {
	return v.value
}

func (v *NullableReweighRequesterV2) Set(val *ReweighRequesterV2) {
	v.value = val
	v.isSet = true
}

func (v NullableReweighRequesterV2) IsSet() bool {
	return v.isSet
}

func (v *NullableReweighRequesterV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReweighRequesterV2(val *ReweighRequesterV2) *NullableReweighRequesterV2 {
	return &NullableReweighRequesterV2{value: val, isSet: true}
}

func (v NullableReweighRequesterV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReweighRequesterV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

