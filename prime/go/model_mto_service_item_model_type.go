/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOServiceItemModelType Describes all model sub-types for a MTOServiceItem model.  Using this list, choose the correct modelType in the dropdown, corresponding to the service item type.   * DOFSIT, DOASIT - MTOServiceItemOriginSIT   * DDFSIT, DDASIT - MTOServiceItemDestSIT   * DOSHUT, DDSHUT - MTOServiceItemShuttle   * DCRT, DUCRT - MTOServiceItemDomesticCrating  The documentation will then update with the supported fields. 
type MTOServiceItemModelType string

// List of MTOServiceItemModelType
const (
	MTO_SERVICE_ITEM_BASIC MTOServiceItemModelType = "MTOServiceItemBasic"
	MTO_SERVICE_ITEM_ORIGIN_SIT MTOServiceItemModelType = "MTOServiceItemOriginSIT"
	MTO_SERVICE_ITEM_DEST_SIT MTOServiceItemModelType = "MTOServiceItemDestSIT"
	MTO_SERVICE_ITEM_SHUTTLE MTOServiceItemModelType = "MTOServiceItemShuttle"
	MTO_SERVICE_ITEM_DOMESTIC_CRATING MTOServiceItemModelType = "MTOServiceItemDomesticCrating"
)

// All allowed values of MTOServiceItemModelType enum
var AllowedMTOServiceItemModelTypeEnumValues = []MTOServiceItemModelType{
	"MTOServiceItemBasic",
	"MTOServiceItemOriginSIT",
	"MTOServiceItemDestSIT",
	"MTOServiceItemShuttle",
	"MTOServiceItemDomesticCrating",
}

func (v *MTOServiceItemModelType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOServiceItemModelType(value)
	for _, existing := range AllowedMTOServiceItemModelTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOServiceItemModelType", value)
}

// NewMTOServiceItemModelTypeFromValue returns a pointer to a valid MTOServiceItemModelType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOServiceItemModelTypeFromValue(v string) (*MTOServiceItemModelType, error) {
	ev := MTOServiceItemModelType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOServiceItemModelType: valid values are %v", v, AllowedMTOServiceItemModelTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOServiceItemModelType) IsValid() bool {
	for _, existing := range AllowedMTOServiceItemModelTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOServiceItemModelType value
func (v MTOServiceItemModelType) Ptr() *MTOServiceItemModelType {
	return &v
}

type NullableMTOServiceItemModelType struct {
	value *MTOServiceItemModelType
	isSet bool
}

func (v NullableMTOServiceItemModelType) Get() *MTOServiceItemModelType {
	return v.value
}

func (v *NullableMTOServiceItemModelType) Set(val *MTOServiceItemModelType) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemModelType) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemModelType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemModelType(val *MTOServiceItemModelType) *NullableMTOServiceItemModelType {
	return &NullableMTOServiceItemModelType{value: val, isSet: true}
}

func (v NullableMTOServiceItemModelType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemModelType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

