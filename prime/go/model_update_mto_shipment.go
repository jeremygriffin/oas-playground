/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateMTOShipment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMTOShipment{}

// UpdateMTOShipment struct for UpdateMTOShipment
type UpdateMTOShipment struct {
	// The actual weight of any pro gear shipped during a move.
	ActualProGearWeight NullableInt32 `json:"actualProGearWeight,omitempty"`
	// The actual weight of any pro gear shipped during a move.
	ActualSpouseProGearWeight NullableInt32 `json:"actualSpouseProGearWeight,omitempty"`
	// The date the Prime contractor scheduled to pick up this shipment after consultation with the customer.
	ScheduledPickupDate NullableString `json:"scheduledPickupDate,omitempty"`
	// The date when the Prime contractor actually picked up the shipment. Updated after-the-fact.
	ActualPickupDate NullableString `json:"actualPickupDate,omitempty"`
	// The date the Prime provides to the customer as the first possible delivery date so that they can plan their travel accordingly. 
	FirstAvailableDeliveryDate NullableString `json:"firstAvailableDeliveryDate,omitempty"`
	// The date the Prime contractor scheduled to deliver this shipment after consultation with the customer.
	ScheduledDeliveryDate NullableString `json:"scheduledDeliveryDate,omitempty"`
	// The date when the Prime contractor actually delivered the shipment. Updated after-the-fact.
	ActualDeliveryDate NullableString `json:"actualDeliveryDate,omitempty"`
	// The estimated weight of this shipment, determined by the movers during the pre-move survey. This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made, the Prime contracter will need to contact the TOO to change it. 
	PrimeEstimatedWeight NullableInt32 `json:"primeEstimatedWeight,omitempty"`
	// The actual weight of the shipment, provided after the Prime packs, picks up, and weighs a customer's shipment.
	PrimeActualWeight NullableInt32 `json:"primeActualWeight,omitempty"`
	// The previously recorded weight for the NTS Shipment. Used for NTS Release to know what the previous primeActualWeight or billable weight was.
	NtsRecordedWeight NullableInt32 `json:"ntsRecordedWeight,omitempty"`
	// The address where the movers should pick up this shipment, entered by the customer during onboarding when they enter shipment details. 
	PickupAddress *Address `json:"pickupAddress,omitempty"`
	// Where the movers should deliver this shipment. Often provided by the customer when they enter shipment details during onboarding, if they know their new address already.  May be blank when entered by the customer, required when entered by the Prime. May not represent the true final destination due to the shipment being diverted or placed in SIT. 
	DestinationAddress *Address `json:"destinationAddress,omitempty"`
	DestinationType NullableDestinationType `json:"destinationType,omitempty"`
	// A second pickup address for this shipment, if the customer entered one. An optional field.
	SecondaryPickupAddress *Address `json:"secondaryPickupAddress,omitempty"`
	// A second delivery address for this shipment, if the customer entered one. An optional field.
	SecondaryDeliveryAddress *Address `json:"secondaryDeliveryAddress,omitempty"`
	StorageFacility *UpdateMTOShipmentStorageFacility `json:"storageFacility,omitempty"`
	ShipmentType *MTOShipmentType `json:"shipmentType,omitempty"`
	// This value indicates whether or not this shipment is part of a diversion. If yes, the shipment can be either the starting or ending segment of the diversion. 
	Diversion *bool `json:"diversion,omitempty"`
	// Email or ID of the person who will be contacted in the event of questions or concerns about this update. May be the person performing the update, or someone else working with the Prime contractor. 
	PointOfContact *string `json:"pointOfContact,omitempty"`
	CounselorRemarks NullableString `json:"counselorRemarks,omitempty"`
	PpmShipment *UpdatePPMShipment `json:"ppmShipment,omitempty"`
}

// NewUpdateMTOShipment instantiates a new UpdateMTOShipment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMTOShipment() *UpdateMTOShipment {
	this := UpdateMTOShipment{}
	return &this
}

// NewUpdateMTOShipmentWithDefaults instantiates a new UpdateMTOShipment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMTOShipmentWithDefaults() *UpdateMTOShipment {
	this := UpdateMTOShipment{}
	return &this
}

// GetActualProGearWeight returns the ActualProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetActualProGearWeight() int32 {
	if o == nil || IsNil(o.ActualProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ActualProGearWeight.Get()
}

// GetActualProGearWeightOk returns a tuple with the ActualProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetActualProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualProGearWeight.Get(), o.ActualProGearWeight.IsSet()
}

// HasActualProGearWeight returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasActualProGearWeight() bool {
	if o != nil && o.ActualProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetActualProGearWeight gets a reference to the given NullableInt32 and assigns it to the ActualProGearWeight field.
func (o *UpdateMTOShipment) SetActualProGearWeight(v int32) {
	o.ActualProGearWeight.Set(&v)
}
// SetActualProGearWeightNil sets the value for ActualProGearWeight to be an explicit nil
func (o *UpdateMTOShipment) SetActualProGearWeightNil() {
	o.ActualProGearWeight.Set(nil)
}

// UnsetActualProGearWeight ensures that no value is present for ActualProGearWeight, not even an explicit nil
func (o *UpdateMTOShipment) UnsetActualProGearWeight() {
	o.ActualProGearWeight.Unset()
}

// GetActualSpouseProGearWeight returns the ActualSpouseProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetActualSpouseProGearWeight() int32 {
	if o == nil || IsNil(o.ActualSpouseProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ActualSpouseProGearWeight.Get()
}

// GetActualSpouseProGearWeightOk returns a tuple with the ActualSpouseProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetActualSpouseProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualSpouseProGearWeight.Get(), o.ActualSpouseProGearWeight.IsSet()
}

// HasActualSpouseProGearWeight returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasActualSpouseProGearWeight() bool {
	if o != nil && o.ActualSpouseProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetActualSpouseProGearWeight gets a reference to the given NullableInt32 and assigns it to the ActualSpouseProGearWeight field.
func (o *UpdateMTOShipment) SetActualSpouseProGearWeight(v int32) {
	o.ActualSpouseProGearWeight.Set(&v)
}
// SetActualSpouseProGearWeightNil sets the value for ActualSpouseProGearWeight to be an explicit nil
func (o *UpdateMTOShipment) SetActualSpouseProGearWeightNil() {
	o.ActualSpouseProGearWeight.Set(nil)
}

// UnsetActualSpouseProGearWeight ensures that no value is present for ActualSpouseProGearWeight, not even an explicit nil
func (o *UpdateMTOShipment) UnsetActualSpouseProGearWeight() {
	o.ActualSpouseProGearWeight.Unset()
}

// GetScheduledPickupDate returns the ScheduledPickupDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetScheduledPickupDate() string {
	if o == nil || IsNil(o.ScheduledPickupDate.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduledPickupDate.Get()
}

// GetScheduledPickupDateOk returns a tuple with the ScheduledPickupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetScheduledPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledPickupDate.Get(), o.ScheduledPickupDate.IsSet()
}

// HasScheduledPickupDate returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasScheduledPickupDate() bool {
	if o != nil && o.ScheduledPickupDate.IsSet() {
		return true
	}

	return false
}

// SetScheduledPickupDate gets a reference to the given NullableString and assigns it to the ScheduledPickupDate field.
func (o *UpdateMTOShipment) SetScheduledPickupDate(v string) {
	o.ScheduledPickupDate.Set(&v)
}
// SetScheduledPickupDateNil sets the value for ScheduledPickupDate to be an explicit nil
func (o *UpdateMTOShipment) SetScheduledPickupDateNil() {
	o.ScheduledPickupDate.Set(nil)
}

// UnsetScheduledPickupDate ensures that no value is present for ScheduledPickupDate, not even an explicit nil
func (o *UpdateMTOShipment) UnsetScheduledPickupDate() {
	o.ScheduledPickupDate.Unset()
}

// GetActualPickupDate returns the ActualPickupDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetActualPickupDate() string {
	if o == nil || IsNil(o.ActualPickupDate.Get()) {
		var ret string
		return ret
	}
	return *o.ActualPickupDate.Get()
}

// GetActualPickupDateOk returns a tuple with the ActualPickupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetActualPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualPickupDate.Get(), o.ActualPickupDate.IsSet()
}

// HasActualPickupDate returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasActualPickupDate() bool {
	if o != nil && o.ActualPickupDate.IsSet() {
		return true
	}

	return false
}

// SetActualPickupDate gets a reference to the given NullableString and assigns it to the ActualPickupDate field.
func (o *UpdateMTOShipment) SetActualPickupDate(v string) {
	o.ActualPickupDate.Set(&v)
}
// SetActualPickupDateNil sets the value for ActualPickupDate to be an explicit nil
func (o *UpdateMTOShipment) SetActualPickupDateNil() {
	o.ActualPickupDate.Set(nil)
}

// UnsetActualPickupDate ensures that no value is present for ActualPickupDate, not even an explicit nil
func (o *UpdateMTOShipment) UnsetActualPickupDate() {
	o.ActualPickupDate.Unset()
}

// GetFirstAvailableDeliveryDate returns the FirstAvailableDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetFirstAvailableDeliveryDate() string {
	if o == nil || IsNil(o.FirstAvailableDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.FirstAvailableDeliveryDate.Get()
}

// GetFirstAvailableDeliveryDateOk returns a tuple with the FirstAvailableDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetFirstAvailableDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstAvailableDeliveryDate.Get(), o.FirstAvailableDeliveryDate.IsSet()
}

// HasFirstAvailableDeliveryDate returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasFirstAvailableDeliveryDate() bool {
	if o != nil && o.FirstAvailableDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetFirstAvailableDeliveryDate gets a reference to the given NullableString and assigns it to the FirstAvailableDeliveryDate field.
func (o *UpdateMTOShipment) SetFirstAvailableDeliveryDate(v string) {
	o.FirstAvailableDeliveryDate.Set(&v)
}
// SetFirstAvailableDeliveryDateNil sets the value for FirstAvailableDeliveryDate to be an explicit nil
func (o *UpdateMTOShipment) SetFirstAvailableDeliveryDateNil() {
	o.FirstAvailableDeliveryDate.Set(nil)
}

// UnsetFirstAvailableDeliveryDate ensures that no value is present for FirstAvailableDeliveryDate, not even an explicit nil
func (o *UpdateMTOShipment) UnsetFirstAvailableDeliveryDate() {
	o.FirstAvailableDeliveryDate.Unset()
}

// GetScheduledDeliveryDate returns the ScheduledDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetScheduledDeliveryDate() string {
	if o == nil || IsNil(o.ScheduledDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduledDeliveryDate.Get()
}

// GetScheduledDeliveryDateOk returns a tuple with the ScheduledDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetScheduledDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledDeliveryDate.Get(), o.ScheduledDeliveryDate.IsSet()
}

// HasScheduledDeliveryDate returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasScheduledDeliveryDate() bool {
	if o != nil && o.ScheduledDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetScheduledDeliveryDate gets a reference to the given NullableString and assigns it to the ScheduledDeliveryDate field.
func (o *UpdateMTOShipment) SetScheduledDeliveryDate(v string) {
	o.ScheduledDeliveryDate.Set(&v)
}
// SetScheduledDeliveryDateNil sets the value for ScheduledDeliveryDate to be an explicit nil
func (o *UpdateMTOShipment) SetScheduledDeliveryDateNil() {
	o.ScheduledDeliveryDate.Set(nil)
}

// UnsetScheduledDeliveryDate ensures that no value is present for ScheduledDeliveryDate, not even an explicit nil
func (o *UpdateMTOShipment) UnsetScheduledDeliveryDate() {
	o.ScheduledDeliveryDate.Unset()
}

// GetActualDeliveryDate returns the ActualDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetActualDeliveryDate() string {
	if o == nil || IsNil(o.ActualDeliveryDate.Get()) {
		var ret string
		return ret
	}
	return *o.ActualDeliveryDate.Get()
}

// GetActualDeliveryDateOk returns a tuple with the ActualDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetActualDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualDeliveryDate.Get(), o.ActualDeliveryDate.IsSet()
}

// HasActualDeliveryDate returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasActualDeliveryDate() bool {
	if o != nil && o.ActualDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetActualDeliveryDate gets a reference to the given NullableString and assigns it to the ActualDeliveryDate field.
func (o *UpdateMTOShipment) SetActualDeliveryDate(v string) {
	o.ActualDeliveryDate.Set(&v)
}
// SetActualDeliveryDateNil sets the value for ActualDeliveryDate to be an explicit nil
func (o *UpdateMTOShipment) SetActualDeliveryDateNil() {
	o.ActualDeliveryDate.Set(nil)
}

// UnsetActualDeliveryDate ensures that no value is present for ActualDeliveryDate, not even an explicit nil
func (o *UpdateMTOShipment) UnsetActualDeliveryDate() {
	o.ActualDeliveryDate.Unset()
}

// GetPrimeEstimatedWeight returns the PrimeEstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetPrimeEstimatedWeight() int32 {
	if o == nil || IsNil(o.PrimeEstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.PrimeEstimatedWeight.Get()
}

// GetPrimeEstimatedWeightOk returns a tuple with the PrimeEstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetPrimeEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimeEstimatedWeight.Get(), o.PrimeEstimatedWeight.IsSet()
}

// HasPrimeEstimatedWeight returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasPrimeEstimatedWeight() bool {
	if o != nil && o.PrimeEstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetPrimeEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the PrimeEstimatedWeight field.
func (o *UpdateMTOShipment) SetPrimeEstimatedWeight(v int32) {
	o.PrimeEstimatedWeight.Set(&v)
}
// SetPrimeEstimatedWeightNil sets the value for PrimeEstimatedWeight to be an explicit nil
func (o *UpdateMTOShipment) SetPrimeEstimatedWeightNil() {
	o.PrimeEstimatedWeight.Set(nil)
}

// UnsetPrimeEstimatedWeight ensures that no value is present for PrimeEstimatedWeight, not even an explicit nil
func (o *UpdateMTOShipment) UnsetPrimeEstimatedWeight() {
	o.PrimeEstimatedWeight.Unset()
}

// GetPrimeActualWeight returns the PrimeActualWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetPrimeActualWeight() int32 {
	if o == nil || IsNil(o.PrimeActualWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.PrimeActualWeight.Get()
}

// GetPrimeActualWeightOk returns a tuple with the PrimeActualWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetPrimeActualWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimeActualWeight.Get(), o.PrimeActualWeight.IsSet()
}

// HasPrimeActualWeight returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasPrimeActualWeight() bool {
	if o != nil && o.PrimeActualWeight.IsSet() {
		return true
	}

	return false
}

// SetPrimeActualWeight gets a reference to the given NullableInt32 and assigns it to the PrimeActualWeight field.
func (o *UpdateMTOShipment) SetPrimeActualWeight(v int32) {
	o.PrimeActualWeight.Set(&v)
}
// SetPrimeActualWeightNil sets the value for PrimeActualWeight to be an explicit nil
func (o *UpdateMTOShipment) SetPrimeActualWeightNil() {
	o.PrimeActualWeight.Set(nil)
}

// UnsetPrimeActualWeight ensures that no value is present for PrimeActualWeight, not even an explicit nil
func (o *UpdateMTOShipment) UnsetPrimeActualWeight() {
	o.PrimeActualWeight.Unset()
}

// GetNtsRecordedWeight returns the NtsRecordedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetNtsRecordedWeight() int32 {
	if o == nil || IsNil(o.NtsRecordedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.NtsRecordedWeight.Get()
}

// GetNtsRecordedWeightOk returns a tuple with the NtsRecordedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetNtsRecordedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NtsRecordedWeight.Get(), o.NtsRecordedWeight.IsSet()
}

// HasNtsRecordedWeight returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasNtsRecordedWeight() bool {
	if o != nil && o.NtsRecordedWeight.IsSet() {
		return true
	}

	return false
}

// SetNtsRecordedWeight gets a reference to the given NullableInt32 and assigns it to the NtsRecordedWeight field.
func (o *UpdateMTOShipment) SetNtsRecordedWeight(v int32) {
	o.NtsRecordedWeight.Set(&v)
}
// SetNtsRecordedWeightNil sets the value for NtsRecordedWeight to be an explicit nil
func (o *UpdateMTOShipment) SetNtsRecordedWeightNil() {
	o.NtsRecordedWeight.Set(nil)
}

// UnsetNtsRecordedWeight ensures that no value is present for NtsRecordedWeight, not even an explicit nil
func (o *UpdateMTOShipment) UnsetNtsRecordedWeight() {
	o.NtsRecordedWeight.Unset()
}

// GetPickupAddress returns the PickupAddress field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetPickupAddress() Address {
	if o == nil || IsNil(o.PickupAddress) {
		var ret Address
		return ret
	}
	return *o.PickupAddress
}

// GetPickupAddressOk returns a tuple with the PickupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetPickupAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.PickupAddress) {
		return nil, false
	}
	return o.PickupAddress, true
}

// HasPickupAddress returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasPickupAddress() bool {
	if o != nil && !IsNil(o.PickupAddress) {
		return true
	}

	return false
}

// SetPickupAddress gets a reference to the given Address and assigns it to the PickupAddress field.
func (o *UpdateMTOShipment) SetPickupAddress(v Address) {
	o.PickupAddress = &v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetDestinationAddress() Address {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret Address
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetDestinationAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given Address and assigns it to the DestinationAddress field.
func (o *UpdateMTOShipment) SetDestinationAddress(v Address) {
	o.DestinationAddress = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetDestinationType() DestinationType {
	if o == nil || IsNil(o.DestinationType.Get()) {
		var ret DestinationType
		return ret
	}
	return *o.DestinationType.Get()
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetDestinationTypeOk() (*DestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationType.Get(), o.DestinationType.IsSet()
}

// HasDestinationType returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasDestinationType() bool {
	if o != nil && o.DestinationType.IsSet() {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given NullableDestinationType and assigns it to the DestinationType field.
func (o *UpdateMTOShipment) SetDestinationType(v DestinationType) {
	o.DestinationType.Set(&v)
}
// SetDestinationTypeNil sets the value for DestinationType to be an explicit nil
func (o *UpdateMTOShipment) SetDestinationTypeNil() {
	o.DestinationType.Set(nil)
}

// UnsetDestinationType ensures that no value is present for DestinationType, not even an explicit nil
func (o *UpdateMTOShipment) UnsetDestinationType() {
	o.DestinationType.Unset()
}

// GetSecondaryPickupAddress returns the SecondaryPickupAddress field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetSecondaryPickupAddress() Address {
	if o == nil || IsNil(o.SecondaryPickupAddress) {
		var ret Address
		return ret
	}
	return *o.SecondaryPickupAddress
}

// GetSecondaryPickupAddressOk returns a tuple with the SecondaryPickupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetSecondaryPickupAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.SecondaryPickupAddress) {
		return nil, false
	}
	return o.SecondaryPickupAddress, true
}

// HasSecondaryPickupAddress returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasSecondaryPickupAddress() bool {
	if o != nil && !IsNil(o.SecondaryPickupAddress) {
		return true
	}

	return false
}

// SetSecondaryPickupAddress gets a reference to the given Address and assigns it to the SecondaryPickupAddress field.
func (o *UpdateMTOShipment) SetSecondaryPickupAddress(v Address) {
	o.SecondaryPickupAddress = &v
}

// GetSecondaryDeliveryAddress returns the SecondaryDeliveryAddress field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetSecondaryDeliveryAddress() Address {
	if o == nil || IsNil(o.SecondaryDeliveryAddress) {
		var ret Address
		return ret
	}
	return *o.SecondaryDeliveryAddress
}

// GetSecondaryDeliveryAddressOk returns a tuple with the SecondaryDeliveryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetSecondaryDeliveryAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.SecondaryDeliveryAddress) {
		return nil, false
	}
	return o.SecondaryDeliveryAddress, true
}

// HasSecondaryDeliveryAddress returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasSecondaryDeliveryAddress() bool {
	if o != nil && !IsNil(o.SecondaryDeliveryAddress) {
		return true
	}

	return false
}

// SetSecondaryDeliveryAddress gets a reference to the given Address and assigns it to the SecondaryDeliveryAddress field.
func (o *UpdateMTOShipment) SetSecondaryDeliveryAddress(v Address) {
	o.SecondaryDeliveryAddress = &v
}

// GetStorageFacility returns the StorageFacility field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetStorageFacility() UpdateMTOShipmentStorageFacility {
	if o == nil || IsNil(o.StorageFacility) {
		var ret UpdateMTOShipmentStorageFacility
		return ret
	}
	return *o.StorageFacility
}

// GetStorageFacilityOk returns a tuple with the StorageFacility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetStorageFacilityOk() (*UpdateMTOShipmentStorageFacility, bool) {
	if o == nil || IsNil(o.StorageFacility) {
		return nil, false
	}
	return o.StorageFacility, true
}

// HasStorageFacility returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasStorageFacility() bool {
	if o != nil && !IsNil(o.StorageFacility) {
		return true
	}

	return false
}

// SetStorageFacility gets a reference to the given UpdateMTOShipmentStorageFacility and assigns it to the StorageFacility field.
func (o *UpdateMTOShipment) SetStorageFacility(v UpdateMTOShipmentStorageFacility) {
	o.StorageFacility = &v
}

// GetShipmentType returns the ShipmentType field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetShipmentType() MTOShipmentType {
	if o == nil || IsNil(o.ShipmentType) {
		var ret MTOShipmentType
		return ret
	}
	return *o.ShipmentType
}

// GetShipmentTypeOk returns a tuple with the ShipmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetShipmentTypeOk() (*MTOShipmentType, bool) {
	if o == nil || IsNil(o.ShipmentType) {
		return nil, false
	}
	return o.ShipmentType, true
}

// HasShipmentType returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasShipmentType() bool {
	if o != nil && !IsNil(o.ShipmentType) {
		return true
	}

	return false
}

// SetShipmentType gets a reference to the given MTOShipmentType and assigns it to the ShipmentType field.
func (o *UpdateMTOShipment) SetShipmentType(v MTOShipmentType) {
	o.ShipmentType = &v
}

// GetDiversion returns the Diversion field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetDiversion() bool {
	if o == nil || IsNil(o.Diversion) {
		var ret bool
		return ret
	}
	return *o.Diversion
}

// GetDiversionOk returns a tuple with the Diversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetDiversionOk() (*bool, bool) {
	if o == nil || IsNil(o.Diversion) {
		return nil, false
	}
	return o.Diversion, true
}

// HasDiversion returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasDiversion() bool {
	if o != nil && !IsNil(o.Diversion) {
		return true
	}

	return false
}

// SetDiversion gets a reference to the given bool and assigns it to the Diversion field.
func (o *UpdateMTOShipment) SetDiversion(v bool) {
	o.Diversion = &v
}

// GetPointOfContact returns the PointOfContact field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetPointOfContact() string {
	if o == nil || IsNil(o.PointOfContact) {
		var ret string
		return ret
	}
	return *o.PointOfContact
}

// GetPointOfContactOk returns a tuple with the PointOfContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetPointOfContactOk() (*string, bool) {
	if o == nil || IsNil(o.PointOfContact) {
		return nil, false
	}
	return o.PointOfContact, true
}

// HasPointOfContact returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasPointOfContact() bool {
	if o != nil && !IsNil(o.PointOfContact) {
		return true
	}

	return false
}

// SetPointOfContact gets a reference to the given string and assigns it to the PointOfContact field.
func (o *UpdateMTOShipment) SetPointOfContact(v string) {
	o.PointOfContact = &v
}

// GetCounselorRemarks returns the CounselorRemarks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMTOShipment) GetCounselorRemarks() string {
	if o == nil || IsNil(o.CounselorRemarks.Get()) {
		var ret string
		return ret
	}
	return *o.CounselorRemarks.Get()
}

// GetCounselorRemarksOk returns a tuple with the CounselorRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMTOShipment) GetCounselorRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CounselorRemarks.Get(), o.CounselorRemarks.IsSet()
}

// HasCounselorRemarks returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasCounselorRemarks() bool {
	if o != nil && o.CounselorRemarks.IsSet() {
		return true
	}

	return false
}

// SetCounselorRemarks gets a reference to the given NullableString and assigns it to the CounselorRemarks field.
func (o *UpdateMTOShipment) SetCounselorRemarks(v string) {
	o.CounselorRemarks.Set(&v)
}
// SetCounselorRemarksNil sets the value for CounselorRemarks to be an explicit nil
func (o *UpdateMTOShipment) SetCounselorRemarksNil() {
	o.CounselorRemarks.Set(nil)
}

// UnsetCounselorRemarks ensures that no value is present for CounselorRemarks, not even an explicit nil
func (o *UpdateMTOShipment) UnsetCounselorRemarks() {
	o.CounselorRemarks.Unset()
}

// GetPpmShipment returns the PpmShipment field value if set, zero value otherwise.
func (o *UpdateMTOShipment) GetPpmShipment() UpdatePPMShipment {
	if o == nil || IsNil(o.PpmShipment) {
		var ret UpdatePPMShipment
		return ret
	}
	return *o.PpmShipment
}

// GetPpmShipmentOk returns a tuple with the PpmShipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMTOShipment) GetPpmShipmentOk() (*UpdatePPMShipment, bool) {
	if o == nil || IsNil(o.PpmShipment) {
		return nil, false
	}
	return o.PpmShipment, true
}

// HasPpmShipment returns a boolean if a field has been set.
func (o *UpdateMTOShipment) HasPpmShipment() bool {
	if o != nil && !IsNil(o.PpmShipment) {
		return true
	}

	return false
}

// SetPpmShipment gets a reference to the given UpdatePPMShipment and assigns it to the PpmShipment field.
func (o *UpdateMTOShipment) SetPpmShipment(v UpdatePPMShipment) {
	o.PpmShipment = &v
}

func (o UpdateMTOShipment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMTOShipment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActualProGearWeight.IsSet() {
		toSerialize["actualProGearWeight"] = o.ActualProGearWeight.Get()
	}
	if o.ActualSpouseProGearWeight.IsSet() {
		toSerialize["actualSpouseProGearWeight"] = o.ActualSpouseProGearWeight.Get()
	}
	if o.ScheduledPickupDate.IsSet() {
		toSerialize["scheduledPickupDate"] = o.ScheduledPickupDate.Get()
	}
	if o.ActualPickupDate.IsSet() {
		toSerialize["actualPickupDate"] = o.ActualPickupDate.Get()
	}
	if o.FirstAvailableDeliveryDate.IsSet() {
		toSerialize["firstAvailableDeliveryDate"] = o.FirstAvailableDeliveryDate.Get()
	}
	if o.ScheduledDeliveryDate.IsSet() {
		toSerialize["scheduledDeliveryDate"] = o.ScheduledDeliveryDate.Get()
	}
	if o.ActualDeliveryDate.IsSet() {
		toSerialize["actualDeliveryDate"] = o.ActualDeliveryDate.Get()
	}
	if o.PrimeEstimatedWeight.IsSet() {
		toSerialize["primeEstimatedWeight"] = o.PrimeEstimatedWeight.Get()
	}
	if o.PrimeActualWeight.IsSet() {
		toSerialize["primeActualWeight"] = o.PrimeActualWeight.Get()
	}
	if o.NtsRecordedWeight.IsSet() {
		toSerialize["ntsRecordedWeight"] = o.NtsRecordedWeight.Get()
	}
	if !IsNil(o.PickupAddress) {
		toSerialize["pickupAddress"] = o.PickupAddress
	}
	if !IsNil(o.DestinationAddress) {
		toSerialize["destinationAddress"] = o.DestinationAddress
	}
	if o.DestinationType.IsSet() {
		toSerialize["destinationType"] = o.DestinationType.Get()
	}
	if !IsNil(o.SecondaryPickupAddress) {
		toSerialize["secondaryPickupAddress"] = o.SecondaryPickupAddress
	}
	if !IsNil(o.SecondaryDeliveryAddress) {
		toSerialize["secondaryDeliveryAddress"] = o.SecondaryDeliveryAddress
	}
	if !IsNil(o.StorageFacility) {
		toSerialize["storageFacility"] = o.StorageFacility
	}
	if !IsNil(o.ShipmentType) {
		toSerialize["shipmentType"] = o.ShipmentType
	}
	if !IsNil(o.Diversion) {
		toSerialize["diversion"] = o.Diversion
	}
	if !IsNil(o.PointOfContact) {
		toSerialize["pointOfContact"] = o.PointOfContact
	}
	if o.CounselorRemarks.IsSet() {
		toSerialize["counselorRemarks"] = o.CounselorRemarks.Get()
	}
	if !IsNil(o.PpmShipment) {
		toSerialize["ppmShipment"] = o.PpmShipment
	}
	return toSerialize, nil
}

type NullableUpdateMTOShipment struct {
	value *UpdateMTOShipment
	isSet bool
}

func (v NullableUpdateMTOShipment) Get() *UpdateMTOShipment {
	return v.value
}

func (v *NullableUpdateMTOShipment) Set(val *UpdateMTOShipment) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMTOShipment) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMTOShipment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMTOShipment(val *UpdateMTOShipment) *NullableUpdateMTOShipment {
	return &NullableUpdateMTOShipment{value: val, isSet: true}
}

func (v NullableUpdateMTOShipment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMTOShipment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


