/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PPMShipment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PPMShipment{}

// PPMShipment A personally procured move is a type of shipment that a service member moves themselves.
type PPMShipment struct {
	// The primary unique identifier of this PPM shipment
	Id string `json:"id"`
	// The id of the parent MTOShipment record
	ShipmentId string `json:"shipmentId"`
	// The timestamp of when the PPM shipment was created (UTC)
	CreatedAt time.Time `json:"createdAt"`
	// The timestamp of when a property of this object was last updated (UTC)
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Status PPMShipmentStatus `json:"status"`
	// Date the customer expects to begin moving from their origin. 
	ExpectedDepartureDate string `json:"expectedDepartureDate"`
	// The actual start date of when the PPM shipment left the origin.
	ActualMoveDate NullableString `json:"actualMoveDate,omitempty"`
	// The timestamp of when the customer submitted their PPM documentation to the counselor for review.
	SubmittedAt NullableTime `json:"submittedAt,omitempty"`
	// The timestamp of when the Service Counselor has reviewed all of the closeout documents.
	ReviewedAt NullableTime `json:"reviewedAt,omitempty"`
	// The timestamp of when the shipment was approved and the service member can begin their move.
	ApprovedAt NullableTime `json:"approvedAt,omitempty"`
	// The actual postal code where the PPM shipment started. To be filled once the customer has moved the shipment. 
	ActualPickupPostalCode NullableString `json:"actualPickupPostalCode,omitempty" validate:"regexp=^(\\\\d{5})$"`
	// The actual postal code where the PPM shipment ended. To be filled once the customer has moved the shipment. 
	ActualDestinationPostalCode NullableString `json:"actualDestinationPostalCode,omitempty" validate:"regexp=^(\\\\d{5})$"`
	// Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.  Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`. 
	SitExpected bool `json:"sitExpected"`
	// The estimated weight of the PPM shipment goods being moved in pounds.
	EstimatedWeight NullableInt32 `json:"estimatedWeight,omitempty"`
	// Indicates whether PPM shipment has pro gear for themselves or their spouse. 
	HasProGear NullableBool `json:"hasProGear,omitempty"`
	// The estimated weight of the pro-gear being moved belonging to the service member in pounds.
	ProGearWeight NullableInt32 `json:"proGearWeight,omitempty"`
	// The estimated weight of the pro-gear being moved belonging to a spouse in pounds.
	SpouseProGearWeight NullableInt32 `json:"spouseProGearWeight,omitempty"`
	// The estimated amount the government will pay the service member to move their belongings based on the moving date, locations, and shipment weight.
	EstimatedIncentive NullableInt32 `json:"estimatedIncentive,omitempty"`
	// Indicates whether an advance has been requested for the PPM shipment. 
	HasRequestedAdvance NullableBool `json:"hasRequestedAdvance,omitempty"`
	// The amount requested as an advance by the service member, up to a maximum percentage of the estimated incentive. 
	AdvanceAmountRequested NullableInt32 `json:"advanceAmountRequested,omitempty"`
	// Indicates whether an advance was received for the PPM shipment. 
	HasReceivedAdvance NullableBool `json:"hasReceivedAdvance,omitempty"`
	// The amount received for an advance, or null if no advance is received. 
	AdvanceAmountReceived NullableInt32 `json:"advanceAmountReceived,omitempty"`
	SitLocation *SITLocationType `json:"sitLocation,omitempty"`
	// The estimated weight of the goods being put into storage in pounds.
	SitEstimatedWeight NullableInt32 `json:"sitEstimatedWeight,omitempty"`
	// The date that goods will first enter the storage location.
	SitEstimatedEntryDate NullableString `json:"sitEstimatedEntryDate,omitempty"`
	// The date that goods will exit the storage location.
	SitEstimatedDepartureDate NullableString `json:"sitEstimatedDepartureDate,omitempty"`
	// The estimated amount that the government will pay the service member to put their goods into storage. This estimated storage cost is separate from the estimated incentive.
	SitEstimatedCost NullableInt32 `json:"sitEstimatedCost,omitempty"`
	// A hash unique to this shipment that should be used as the \"If-Match\" header for any updates.
	ETag string `json:"eTag"`
}

type _PPMShipment PPMShipment

// NewPPMShipment instantiates a new PPMShipment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPPMShipment(id string, shipmentId string, createdAt time.Time, status PPMShipmentStatus, expectedDepartureDate string, sitExpected bool, eTag string) *PPMShipment {
	this := PPMShipment{}
	this.Id = id
	this.ShipmentId = shipmentId
	this.CreatedAt = createdAt
	this.Status = status
	this.ExpectedDepartureDate = expectedDepartureDate
	this.SitExpected = sitExpected
	this.ETag = eTag
	return &this
}

// NewPPMShipmentWithDefaults instantiates a new PPMShipment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPPMShipmentWithDefaults() *PPMShipment {
	this := PPMShipment{}
	return &this
}

// GetId returns the Id field value
func (o *PPMShipment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PPMShipment) SetId(v string) {
	o.Id = v
}

// GetShipmentId returns the ShipmentId field value
func (o *PPMShipment) GetShipmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetShipmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipmentId, true
}

// SetShipmentId sets field value
func (o *PPMShipment) SetShipmentId(v string) {
	o.ShipmentId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PPMShipment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PPMShipment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PPMShipment) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PPMShipment) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PPMShipment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetStatus returns the Status field value
func (o *PPMShipment) GetStatus() PPMShipmentStatus {
	if o == nil {
		var ret PPMShipmentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetStatusOk() (*PPMShipmentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PPMShipment) SetStatus(v PPMShipmentStatus) {
	o.Status = v
}

// GetExpectedDepartureDate returns the ExpectedDepartureDate field value
func (o *PPMShipment) GetExpectedDepartureDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpectedDepartureDate
}

// GetExpectedDepartureDateOk returns a tuple with the ExpectedDepartureDate field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetExpectedDepartureDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpectedDepartureDate, true
}

// SetExpectedDepartureDate sets field value
func (o *PPMShipment) SetExpectedDepartureDate(v string) {
	o.ExpectedDepartureDate = v
}

// GetActualMoveDate returns the ActualMoveDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetActualMoveDate() string {
	if o == nil || IsNil(o.ActualMoveDate.Get()) {
		var ret string
		return ret
	}
	return *o.ActualMoveDate.Get()
}

// GetActualMoveDateOk returns a tuple with the ActualMoveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetActualMoveDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualMoveDate.Get(), o.ActualMoveDate.IsSet()
}

// HasActualMoveDate returns a boolean if a field has been set.
func (o *PPMShipment) HasActualMoveDate() bool {
	if o != nil && o.ActualMoveDate.IsSet() {
		return true
	}

	return false
}

// SetActualMoveDate gets a reference to the given NullableString and assigns it to the ActualMoveDate field.
func (o *PPMShipment) SetActualMoveDate(v string) {
	o.ActualMoveDate.Set(&v)
}
// SetActualMoveDateNil sets the value for ActualMoveDate to be an explicit nil
func (o *PPMShipment) SetActualMoveDateNil() {
	o.ActualMoveDate.Set(nil)
}

// UnsetActualMoveDate ensures that no value is present for ActualMoveDate, not even an explicit nil
func (o *PPMShipment) UnsetActualMoveDate() {
	o.ActualMoveDate.Unset()
}

// GetSubmittedAt returns the SubmittedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSubmittedAt() time.Time {
	if o == nil || IsNil(o.SubmittedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.SubmittedAt.Get()
}

// GetSubmittedAtOk returns a tuple with the SubmittedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSubmittedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubmittedAt.Get(), o.SubmittedAt.IsSet()
}

// HasSubmittedAt returns a boolean if a field has been set.
func (o *PPMShipment) HasSubmittedAt() bool {
	if o != nil && o.SubmittedAt.IsSet() {
		return true
	}

	return false
}

// SetSubmittedAt gets a reference to the given NullableTime and assigns it to the SubmittedAt field.
func (o *PPMShipment) SetSubmittedAt(v time.Time) {
	o.SubmittedAt.Set(&v)
}
// SetSubmittedAtNil sets the value for SubmittedAt to be an explicit nil
func (o *PPMShipment) SetSubmittedAtNil() {
	o.SubmittedAt.Set(nil)
}

// UnsetSubmittedAt ensures that no value is present for SubmittedAt, not even an explicit nil
func (o *PPMShipment) UnsetSubmittedAt() {
	o.SubmittedAt.Unset()
}

// GetReviewedAt returns the ReviewedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetReviewedAt() time.Time {
	if o == nil || IsNil(o.ReviewedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ReviewedAt.Get()
}

// GetReviewedAtOk returns a tuple with the ReviewedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetReviewedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReviewedAt.Get(), o.ReviewedAt.IsSet()
}

// HasReviewedAt returns a boolean if a field has been set.
func (o *PPMShipment) HasReviewedAt() bool {
	if o != nil && o.ReviewedAt.IsSet() {
		return true
	}

	return false
}

// SetReviewedAt gets a reference to the given NullableTime and assigns it to the ReviewedAt field.
func (o *PPMShipment) SetReviewedAt(v time.Time) {
	o.ReviewedAt.Set(&v)
}
// SetReviewedAtNil sets the value for ReviewedAt to be an explicit nil
func (o *PPMShipment) SetReviewedAtNil() {
	o.ReviewedAt.Set(nil)
}

// UnsetReviewedAt ensures that no value is present for ReviewedAt, not even an explicit nil
func (o *PPMShipment) UnsetReviewedAt() {
	o.ReviewedAt.Unset()
}

// GetApprovedAt returns the ApprovedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetApprovedAt() time.Time {
	if o == nil || IsNil(o.ApprovedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ApprovedAt.Get()
}

// GetApprovedAtOk returns a tuple with the ApprovedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetApprovedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovedAt.Get(), o.ApprovedAt.IsSet()
}

// HasApprovedAt returns a boolean if a field has been set.
func (o *PPMShipment) HasApprovedAt() bool {
	if o != nil && o.ApprovedAt.IsSet() {
		return true
	}

	return false
}

// SetApprovedAt gets a reference to the given NullableTime and assigns it to the ApprovedAt field.
func (o *PPMShipment) SetApprovedAt(v time.Time) {
	o.ApprovedAt.Set(&v)
}
// SetApprovedAtNil sets the value for ApprovedAt to be an explicit nil
func (o *PPMShipment) SetApprovedAtNil() {
	o.ApprovedAt.Set(nil)
}

// UnsetApprovedAt ensures that no value is present for ApprovedAt, not even an explicit nil
func (o *PPMShipment) UnsetApprovedAt() {
	o.ApprovedAt.Unset()
}

// GetActualPickupPostalCode returns the ActualPickupPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetActualPickupPostalCode() string {
	if o == nil || IsNil(o.ActualPickupPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.ActualPickupPostalCode.Get()
}

// GetActualPickupPostalCodeOk returns a tuple with the ActualPickupPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetActualPickupPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualPickupPostalCode.Get(), o.ActualPickupPostalCode.IsSet()
}

// HasActualPickupPostalCode returns a boolean if a field has been set.
func (o *PPMShipment) HasActualPickupPostalCode() bool {
	if o != nil && o.ActualPickupPostalCode.IsSet() {
		return true
	}

	return false
}

// SetActualPickupPostalCode gets a reference to the given NullableString and assigns it to the ActualPickupPostalCode field.
func (o *PPMShipment) SetActualPickupPostalCode(v string) {
	o.ActualPickupPostalCode.Set(&v)
}
// SetActualPickupPostalCodeNil sets the value for ActualPickupPostalCode to be an explicit nil
func (o *PPMShipment) SetActualPickupPostalCodeNil() {
	o.ActualPickupPostalCode.Set(nil)
}

// UnsetActualPickupPostalCode ensures that no value is present for ActualPickupPostalCode, not even an explicit nil
func (o *PPMShipment) UnsetActualPickupPostalCode() {
	o.ActualPickupPostalCode.Unset()
}

// GetActualDestinationPostalCode returns the ActualDestinationPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetActualDestinationPostalCode() string {
	if o == nil || IsNil(o.ActualDestinationPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.ActualDestinationPostalCode.Get()
}

// GetActualDestinationPostalCodeOk returns a tuple with the ActualDestinationPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetActualDestinationPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualDestinationPostalCode.Get(), o.ActualDestinationPostalCode.IsSet()
}

// HasActualDestinationPostalCode returns a boolean if a field has been set.
func (o *PPMShipment) HasActualDestinationPostalCode() bool {
	if o != nil && o.ActualDestinationPostalCode.IsSet() {
		return true
	}

	return false
}

// SetActualDestinationPostalCode gets a reference to the given NullableString and assigns it to the ActualDestinationPostalCode field.
func (o *PPMShipment) SetActualDestinationPostalCode(v string) {
	o.ActualDestinationPostalCode.Set(&v)
}
// SetActualDestinationPostalCodeNil sets the value for ActualDestinationPostalCode to be an explicit nil
func (o *PPMShipment) SetActualDestinationPostalCodeNil() {
	o.ActualDestinationPostalCode.Set(nil)
}

// UnsetActualDestinationPostalCode ensures that no value is present for ActualDestinationPostalCode, not even an explicit nil
func (o *PPMShipment) UnsetActualDestinationPostalCode() {
	o.ActualDestinationPostalCode.Unset()
}

// GetSitExpected returns the SitExpected field value
func (o *PPMShipment) GetSitExpected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SitExpected
}

// GetSitExpectedOk returns a tuple with the SitExpected field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetSitExpectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SitExpected, true
}

// SetSitExpected sets field value
func (o *PPMShipment) SetSitExpected(v bool) {
	o.SitExpected = v
}

// GetEstimatedWeight returns the EstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetEstimatedWeight() int32 {
	if o == nil || IsNil(o.EstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.EstimatedWeight.Get()
}

// GetEstimatedWeightOk returns a tuple with the EstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedWeight.Get(), o.EstimatedWeight.IsSet()
}

// HasEstimatedWeight returns a boolean if a field has been set.
func (o *PPMShipment) HasEstimatedWeight() bool {
	if o != nil && o.EstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the EstimatedWeight field.
func (o *PPMShipment) SetEstimatedWeight(v int32) {
	o.EstimatedWeight.Set(&v)
}
// SetEstimatedWeightNil sets the value for EstimatedWeight to be an explicit nil
func (o *PPMShipment) SetEstimatedWeightNil() {
	o.EstimatedWeight.Set(nil)
}

// UnsetEstimatedWeight ensures that no value is present for EstimatedWeight, not even an explicit nil
func (o *PPMShipment) UnsetEstimatedWeight() {
	o.EstimatedWeight.Unset()
}

// GetHasProGear returns the HasProGear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetHasProGear() bool {
	if o == nil || IsNil(o.HasProGear.Get()) {
		var ret bool
		return ret
	}
	return *o.HasProGear.Get()
}

// GetHasProGearOk returns a tuple with the HasProGear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetHasProGearOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasProGear.Get(), o.HasProGear.IsSet()
}

// HasHasProGear returns a boolean if a field has been set.
func (o *PPMShipment) HasHasProGear() bool {
	if o != nil && o.HasProGear.IsSet() {
		return true
	}

	return false
}

// SetHasProGear gets a reference to the given NullableBool and assigns it to the HasProGear field.
func (o *PPMShipment) SetHasProGear(v bool) {
	o.HasProGear.Set(&v)
}
// SetHasProGearNil sets the value for HasProGear to be an explicit nil
func (o *PPMShipment) SetHasProGearNil() {
	o.HasProGear.Set(nil)
}

// UnsetHasProGear ensures that no value is present for HasProGear, not even an explicit nil
func (o *PPMShipment) UnsetHasProGear() {
	o.HasProGear.Unset()
}

// GetProGearWeight returns the ProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetProGearWeight() int32 {
	if o == nil || IsNil(o.ProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ProGearWeight.Get()
}

// GetProGearWeightOk returns a tuple with the ProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProGearWeight.Get(), o.ProGearWeight.IsSet()
}

// HasProGearWeight returns a boolean if a field has been set.
func (o *PPMShipment) HasProGearWeight() bool {
	if o != nil && o.ProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetProGearWeight gets a reference to the given NullableInt32 and assigns it to the ProGearWeight field.
func (o *PPMShipment) SetProGearWeight(v int32) {
	o.ProGearWeight.Set(&v)
}
// SetProGearWeightNil sets the value for ProGearWeight to be an explicit nil
func (o *PPMShipment) SetProGearWeightNil() {
	o.ProGearWeight.Set(nil)
}

// UnsetProGearWeight ensures that no value is present for ProGearWeight, not even an explicit nil
func (o *PPMShipment) UnsetProGearWeight() {
	o.ProGearWeight.Unset()
}

// GetSpouseProGearWeight returns the SpouseProGearWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSpouseProGearWeight() int32 {
	if o == nil || IsNil(o.SpouseProGearWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.SpouseProGearWeight.Get()
}

// GetSpouseProGearWeightOk returns a tuple with the SpouseProGearWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSpouseProGearWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpouseProGearWeight.Get(), o.SpouseProGearWeight.IsSet()
}

// HasSpouseProGearWeight returns a boolean if a field has been set.
func (o *PPMShipment) HasSpouseProGearWeight() bool {
	if o != nil && o.SpouseProGearWeight.IsSet() {
		return true
	}

	return false
}

// SetSpouseProGearWeight gets a reference to the given NullableInt32 and assigns it to the SpouseProGearWeight field.
func (o *PPMShipment) SetSpouseProGearWeight(v int32) {
	o.SpouseProGearWeight.Set(&v)
}
// SetSpouseProGearWeightNil sets the value for SpouseProGearWeight to be an explicit nil
func (o *PPMShipment) SetSpouseProGearWeightNil() {
	o.SpouseProGearWeight.Set(nil)
}

// UnsetSpouseProGearWeight ensures that no value is present for SpouseProGearWeight, not even an explicit nil
func (o *PPMShipment) UnsetSpouseProGearWeight() {
	o.SpouseProGearWeight.Unset()
}

// GetEstimatedIncentive returns the EstimatedIncentive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetEstimatedIncentive() int32 {
	if o == nil || IsNil(o.EstimatedIncentive.Get()) {
		var ret int32
		return ret
	}
	return *o.EstimatedIncentive.Get()
}

// GetEstimatedIncentiveOk returns a tuple with the EstimatedIncentive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetEstimatedIncentiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedIncentive.Get(), o.EstimatedIncentive.IsSet()
}

// HasEstimatedIncentive returns a boolean if a field has been set.
func (o *PPMShipment) HasEstimatedIncentive() bool {
	if o != nil && o.EstimatedIncentive.IsSet() {
		return true
	}

	return false
}

// SetEstimatedIncentive gets a reference to the given NullableInt32 and assigns it to the EstimatedIncentive field.
func (o *PPMShipment) SetEstimatedIncentive(v int32) {
	o.EstimatedIncentive.Set(&v)
}
// SetEstimatedIncentiveNil sets the value for EstimatedIncentive to be an explicit nil
func (o *PPMShipment) SetEstimatedIncentiveNil() {
	o.EstimatedIncentive.Set(nil)
}

// UnsetEstimatedIncentive ensures that no value is present for EstimatedIncentive, not even an explicit nil
func (o *PPMShipment) UnsetEstimatedIncentive() {
	o.EstimatedIncentive.Unset()
}

// GetHasRequestedAdvance returns the HasRequestedAdvance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetHasRequestedAdvance() bool {
	if o == nil || IsNil(o.HasRequestedAdvance.Get()) {
		var ret bool
		return ret
	}
	return *o.HasRequestedAdvance.Get()
}

// GetHasRequestedAdvanceOk returns a tuple with the HasRequestedAdvance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetHasRequestedAdvanceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasRequestedAdvance.Get(), o.HasRequestedAdvance.IsSet()
}

// HasHasRequestedAdvance returns a boolean if a field has been set.
func (o *PPMShipment) HasHasRequestedAdvance() bool {
	if o != nil && o.HasRequestedAdvance.IsSet() {
		return true
	}

	return false
}

// SetHasRequestedAdvance gets a reference to the given NullableBool and assigns it to the HasRequestedAdvance field.
func (o *PPMShipment) SetHasRequestedAdvance(v bool) {
	o.HasRequestedAdvance.Set(&v)
}
// SetHasRequestedAdvanceNil sets the value for HasRequestedAdvance to be an explicit nil
func (o *PPMShipment) SetHasRequestedAdvanceNil() {
	o.HasRequestedAdvance.Set(nil)
}

// UnsetHasRequestedAdvance ensures that no value is present for HasRequestedAdvance, not even an explicit nil
func (o *PPMShipment) UnsetHasRequestedAdvance() {
	o.HasRequestedAdvance.Unset()
}

// GetAdvanceAmountRequested returns the AdvanceAmountRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetAdvanceAmountRequested() int32 {
	if o == nil || IsNil(o.AdvanceAmountRequested.Get()) {
		var ret int32
		return ret
	}
	return *o.AdvanceAmountRequested.Get()
}

// GetAdvanceAmountRequestedOk returns a tuple with the AdvanceAmountRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetAdvanceAmountRequestedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdvanceAmountRequested.Get(), o.AdvanceAmountRequested.IsSet()
}

// HasAdvanceAmountRequested returns a boolean if a field has been set.
func (o *PPMShipment) HasAdvanceAmountRequested() bool {
	if o != nil && o.AdvanceAmountRequested.IsSet() {
		return true
	}

	return false
}

// SetAdvanceAmountRequested gets a reference to the given NullableInt32 and assigns it to the AdvanceAmountRequested field.
func (o *PPMShipment) SetAdvanceAmountRequested(v int32) {
	o.AdvanceAmountRequested.Set(&v)
}
// SetAdvanceAmountRequestedNil sets the value for AdvanceAmountRequested to be an explicit nil
func (o *PPMShipment) SetAdvanceAmountRequestedNil() {
	o.AdvanceAmountRequested.Set(nil)
}

// UnsetAdvanceAmountRequested ensures that no value is present for AdvanceAmountRequested, not even an explicit nil
func (o *PPMShipment) UnsetAdvanceAmountRequested() {
	o.AdvanceAmountRequested.Unset()
}

// GetHasReceivedAdvance returns the HasReceivedAdvance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetHasReceivedAdvance() bool {
	if o == nil || IsNil(o.HasReceivedAdvance.Get()) {
		var ret bool
		return ret
	}
	return *o.HasReceivedAdvance.Get()
}

// GetHasReceivedAdvanceOk returns a tuple with the HasReceivedAdvance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetHasReceivedAdvanceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasReceivedAdvance.Get(), o.HasReceivedAdvance.IsSet()
}

// HasHasReceivedAdvance returns a boolean if a field has been set.
func (o *PPMShipment) HasHasReceivedAdvance() bool {
	if o != nil && o.HasReceivedAdvance.IsSet() {
		return true
	}

	return false
}

// SetHasReceivedAdvance gets a reference to the given NullableBool and assigns it to the HasReceivedAdvance field.
func (o *PPMShipment) SetHasReceivedAdvance(v bool) {
	o.HasReceivedAdvance.Set(&v)
}
// SetHasReceivedAdvanceNil sets the value for HasReceivedAdvance to be an explicit nil
func (o *PPMShipment) SetHasReceivedAdvanceNil() {
	o.HasReceivedAdvance.Set(nil)
}

// UnsetHasReceivedAdvance ensures that no value is present for HasReceivedAdvance, not even an explicit nil
func (o *PPMShipment) UnsetHasReceivedAdvance() {
	o.HasReceivedAdvance.Unset()
}

// GetAdvanceAmountReceived returns the AdvanceAmountReceived field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetAdvanceAmountReceived() int32 {
	if o == nil || IsNil(o.AdvanceAmountReceived.Get()) {
		var ret int32
		return ret
	}
	return *o.AdvanceAmountReceived.Get()
}

// GetAdvanceAmountReceivedOk returns a tuple with the AdvanceAmountReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetAdvanceAmountReceivedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdvanceAmountReceived.Get(), o.AdvanceAmountReceived.IsSet()
}

// HasAdvanceAmountReceived returns a boolean if a field has been set.
func (o *PPMShipment) HasAdvanceAmountReceived() bool {
	if o != nil && o.AdvanceAmountReceived.IsSet() {
		return true
	}

	return false
}

// SetAdvanceAmountReceived gets a reference to the given NullableInt32 and assigns it to the AdvanceAmountReceived field.
func (o *PPMShipment) SetAdvanceAmountReceived(v int32) {
	o.AdvanceAmountReceived.Set(&v)
}
// SetAdvanceAmountReceivedNil sets the value for AdvanceAmountReceived to be an explicit nil
func (o *PPMShipment) SetAdvanceAmountReceivedNil() {
	o.AdvanceAmountReceived.Set(nil)
}

// UnsetAdvanceAmountReceived ensures that no value is present for AdvanceAmountReceived, not even an explicit nil
func (o *PPMShipment) UnsetAdvanceAmountReceived() {
	o.AdvanceAmountReceived.Unset()
}

// GetSitLocation returns the SitLocation field value if set, zero value otherwise.
func (o *PPMShipment) GetSitLocation() SITLocationType {
	if o == nil || IsNil(o.SitLocation) {
		var ret SITLocationType
		return ret
	}
	return *o.SitLocation
}

// GetSitLocationOk returns a tuple with the SitLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetSitLocationOk() (*SITLocationType, bool) {
	if o == nil || IsNil(o.SitLocation) {
		return nil, false
	}
	return o.SitLocation, true
}

// HasSitLocation returns a boolean if a field has been set.
func (o *PPMShipment) HasSitLocation() bool {
	if o != nil && !IsNil(o.SitLocation) {
		return true
	}

	return false
}

// SetSitLocation gets a reference to the given SITLocationType and assigns it to the SitLocation field.
func (o *PPMShipment) SetSitLocation(v SITLocationType) {
	o.SitLocation = &v
}

// GetSitEstimatedWeight returns the SitEstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSitEstimatedWeight() int32 {
	if o == nil || IsNil(o.SitEstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.SitEstimatedWeight.Get()
}

// GetSitEstimatedWeightOk returns a tuple with the SitEstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSitEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedWeight.Get(), o.SitEstimatedWeight.IsSet()
}

// HasSitEstimatedWeight returns a boolean if a field has been set.
func (o *PPMShipment) HasSitEstimatedWeight() bool {
	if o != nil && o.SitEstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the SitEstimatedWeight field.
func (o *PPMShipment) SetSitEstimatedWeight(v int32) {
	o.SitEstimatedWeight.Set(&v)
}
// SetSitEstimatedWeightNil sets the value for SitEstimatedWeight to be an explicit nil
func (o *PPMShipment) SetSitEstimatedWeightNil() {
	o.SitEstimatedWeight.Set(nil)
}

// UnsetSitEstimatedWeight ensures that no value is present for SitEstimatedWeight, not even an explicit nil
func (o *PPMShipment) UnsetSitEstimatedWeight() {
	o.SitEstimatedWeight.Unset()
}

// GetSitEstimatedEntryDate returns the SitEstimatedEntryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSitEstimatedEntryDate() string {
	if o == nil || IsNil(o.SitEstimatedEntryDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitEstimatedEntryDate.Get()
}

// GetSitEstimatedEntryDateOk returns a tuple with the SitEstimatedEntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSitEstimatedEntryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedEntryDate.Get(), o.SitEstimatedEntryDate.IsSet()
}

// HasSitEstimatedEntryDate returns a boolean if a field has been set.
func (o *PPMShipment) HasSitEstimatedEntryDate() bool {
	if o != nil && o.SitEstimatedEntryDate.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedEntryDate gets a reference to the given NullableString and assigns it to the SitEstimatedEntryDate field.
func (o *PPMShipment) SetSitEstimatedEntryDate(v string) {
	o.SitEstimatedEntryDate.Set(&v)
}
// SetSitEstimatedEntryDateNil sets the value for SitEstimatedEntryDate to be an explicit nil
func (o *PPMShipment) SetSitEstimatedEntryDateNil() {
	o.SitEstimatedEntryDate.Set(nil)
}

// UnsetSitEstimatedEntryDate ensures that no value is present for SitEstimatedEntryDate, not even an explicit nil
func (o *PPMShipment) UnsetSitEstimatedEntryDate() {
	o.SitEstimatedEntryDate.Unset()
}

// GetSitEstimatedDepartureDate returns the SitEstimatedDepartureDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSitEstimatedDepartureDate() string {
	if o == nil || IsNil(o.SitEstimatedDepartureDate.Get()) {
		var ret string
		return ret
	}
	return *o.SitEstimatedDepartureDate.Get()
}

// GetSitEstimatedDepartureDateOk returns a tuple with the SitEstimatedDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSitEstimatedDepartureDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedDepartureDate.Get(), o.SitEstimatedDepartureDate.IsSet()
}

// HasSitEstimatedDepartureDate returns a boolean if a field has been set.
func (o *PPMShipment) HasSitEstimatedDepartureDate() bool {
	if o != nil && o.SitEstimatedDepartureDate.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedDepartureDate gets a reference to the given NullableString and assigns it to the SitEstimatedDepartureDate field.
func (o *PPMShipment) SetSitEstimatedDepartureDate(v string) {
	o.SitEstimatedDepartureDate.Set(&v)
}
// SetSitEstimatedDepartureDateNil sets the value for SitEstimatedDepartureDate to be an explicit nil
func (o *PPMShipment) SetSitEstimatedDepartureDateNil() {
	o.SitEstimatedDepartureDate.Set(nil)
}

// UnsetSitEstimatedDepartureDate ensures that no value is present for SitEstimatedDepartureDate, not even an explicit nil
func (o *PPMShipment) UnsetSitEstimatedDepartureDate() {
	o.SitEstimatedDepartureDate.Unset()
}

// GetSitEstimatedCost returns the SitEstimatedCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PPMShipment) GetSitEstimatedCost() int32 {
	if o == nil || IsNil(o.SitEstimatedCost.Get()) {
		var ret int32
		return ret
	}
	return *o.SitEstimatedCost.Get()
}

// GetSitEstimatedCostOk returns a tuple with the SitEstimatedCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PPMShipment) GetSitEstimatedCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SitEstimatedCost.Get(), o.SitEstimatedCost.IsSet()
}

// HasSitEstimatedCost returns a boolean if a field has been set.
func (o *PPMShipment) HasSitEstimatedCost() bool {
	if o != nil && o.SitEstimatedCost.IsSet() {
		return true
	}

	return false
}

// SetSitEstimatedCost gets a reference to the given NullableInt32 and assigns it to the SitEstimatedCost field.
func (o *PPMShipment) SetSitEstimatedCost(v int32) {
	o.SitEstimatedCost.Set(&v)
}
// SetSitEstimatedCostNil sets the value for SitEstimatedCost to be an explicit nil
func (o *PPMShipment) SetSitEstimatedCostNil() {
	o.SitEstimatedCost.Set(nil)
}

// UnsetSitEstimatedCost ensures that no value is present for SitEstimatedCost, not even an explicit nil
func (o *PPMShipment) UnsetSitEstimatedCost() {
	o.SitEstimatedCost.Unset()
}

// GetETag returns the ETag field value
func (o *PPMShipment) GetETag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ETag
}

// GetETagOk returns a tuple with the ETag field value
// and a boolean to check if the value has been set.
func (o *PPMShipment) GetETagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ETag, true
}

// SetETag sets field value
func (o *PPMShipment) SetETag(v string) {
	o.ETag = v
}

func (o PPMShipment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PPMShipment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["shipmentId"] = o.ShipmentId
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	toSerialize["status"] = o.Status
	toSerialize["expectedDepartureDate"] = o.ExpectedDepartureDate
	if o.ActualMoveDate.IsSet() {
		toSerialize["actualMoveDate"] = o.ActualMoveDate.Get()
	}
	if o.SubmittedAt.IsSet() {
		toSerialize["submittedAt"] = o.SubmittedAt.Get()
	}
	if o.ReviewedAt.IsSet() {
		toSerialize["reviewedAt"] = o.ReviewedAt.Get()
	}
	if o.ApprovedAt.IsSet() {
		toSerialize["approvedAt"] = o.ApprovedAt.Get()
	}
	if o.ActualPickupPostalCode.IsSet() {
		toSerialize["actualPickupPostalCode"] = o.ActualPickupPostalCode.Get()
	}
	if o.ActualDestinationPostalCode.IsSet() {
		toSerialize["actualDestinationPostalCode"] = o.ActualDestinationPostalCode.Get()
	}
	toSerialize["sitExpected"] = o.SitExpected
	if o.EstimatedWeight.IsSet() {
		toSerialize["estimatedWeight"] = o.EstimatedWeight.Get()
	}
	if o.HasProGear.IsSet() {
		toSerialize["hasProGear"] = o.HasProGear.Get()
	}
	if o.ProGearWeight.IsSet() {
		toSerialize["proGearWeight"] = o.ProGearWeight.Get()
	}
	if o.SpouseProGearWeight.IsSet() {
		toSerialize["spouseProGearWeight"] = o.SpouseProGearWeight.Get()
	}
	if o.EstimatedIncentive.IsSet() {
		toSerialize["estimatedIncentive"] = o.EstimatedIncentive.Get()
	}
	if o.HasRequestedAdvance.IsSet() {
		toSerialize["hasRequestedAdvance"] = o.HasRequestedAdvance.Get()
	}
	if o.AdvanceAmountRequested.IsSet() {
		toSerialize["advanceAmountRequested"] = o.AdvanceAmountRequested.Get()
	}
	if o.HasReceivedAdvance.IsSet() {
		toSerialize["hasReceivedAdvance"] = o.HasReceivedAdvance.Get()
	}
	if o.AdvanceAmountReceived.IsSet() {
		toSerialize["advanceAmountReceived"] = o.AdvanceAmountReceived.Get()
	}
	if !IsNil(o.SitLocation) {
		toSerialize["sitLocation"] = o.SitLocation
	}
	if o.SitEstimatedWeight.IsSet() {
		toSerialize["sitEstimatedWeight"] = o.SitEstimatedWeight.Get()
	}
	if o.SitEstimatedEntryDate.IsSet() {
		toSerialize["sitEstimatedEntryDate"] = o.SitEstimatedEntryDate.Get()
	}
	if o.SitEstimatedDepartureDate.IsSet() {
		toSerialize["sitEstimatedDepartureDate"] = o.SitEstimatedDepartureDate.Get()
	}
	if o.SitEstimatedCost.IsSet() {
		toSerialize["sitEstimatedCost"] = o.SitEstimatedCost.Get()
	}
	toSerialize["eTag"] = o.ETag
	return toSerialize, nil
}

func (o *PPMShipment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"shipmentId",
		"createdAt",
		"status",
		"expectedDepartureDate",
		"sitExpected",
		"eTag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPPMShipment := _PPMShipment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPPMShipment)

	if err != nil {
		return err
	}

	*o = PPMShipment(varPPMShipment)

	return err
}

type NullablePPMShipment struct {
	value *PPMShipment
	isSet bool
}

func (v NullablePPMShipment) Get() *PPMShipment {
	return v.value
}

func (v *NullablePPMShipment) Set(val *PPMShipment) {
	v.value = val
	v.isSet = true
}

func (v NullablePPMShipment) IsSet() bool {
	return v.isSet
}

func (v *NullablePPMShipment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePPMShipment(val *PPMShipment) *NullablePPMShipment {
	return &NullablePPMShipment{value: val, isSet: true}
}

func (v NullablePPMShipment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePPMShipment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


