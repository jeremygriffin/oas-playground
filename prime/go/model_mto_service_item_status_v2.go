/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOServiceItemStatusV2 The status of a service item, indicating where it is in the TOO's approval process.
type MTOServiceItemStatusV2 string

// List of MTOServiceItemStatus
const (
	SUBMITTED MTOServiceItemStatusV2 = "SUBMITTED"
	APPROVED MTOServiceItemStatusV2 = "APPROVED"
	REJECTED MTOServiceItemStatusV2 = "REJECTED"
)

// All allowed values of MTOServiceItemStatusV2 enum
var AllowedMTOServiceItemStatusV2EnumValues = []MTOServiceItemStatusV2{
	"SUBMITTED",
	"APPROVED",
	"REJECTED",
}

func (v *MTOServiceItemStatusV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOServiceItemStatusV2(value)
	for _, existing := range AllowedMTOServiceItemStatusV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOServiceItemStatusV2", value)
}

// NewMTOServiceItemStatusV2FromValue returns a pointer to a valid MTOServiceItemStatusV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOServiceItemStatusV2FromValue(v string) (*MTOServiceItemStatusV2, error) {
	ev := MTOServiceItemStatusV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOServiceItemStatusV2: valid values are %v", v, AllowedMTOServiceItemStatusV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOServiceItemStatusV2) IsValid() bool {
	for _, existing := range AllowedMTOServiceItemStatusV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOServiceItemStatus value
func (v MTOServiceItemStatusV2) Ptr() *MTOServiceItemStatusV2 {
	return &v
}

type NullableMTOServiceItemStatusV2 struct {
	value *MTOServiceItemStatusV2
	isSet bool
}

func (v NullableMTOServiceItemStatusV2) Get() *MTOServiceItemStatusV2 {
	return v.value
}

func (v *NullableMTOServiceItemStatusV2) Set(val *MTOServiceItemStatusV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemStatusV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemStatusV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemStatusV2(val *MTOServiceItemStatusV2) *NullableMTOServiceItemStatusV2 {
	return &NullableMTOServiceItemStatusV2{value: val, isSet: true}
}

func (v NullableMTOServiceItemStatusV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemStatusV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

