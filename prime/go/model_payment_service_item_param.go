/*
MilMove Prime API

The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentServiceItemParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServiceItemParam{}

// PaymentServiceItemParam struct for PaymentServiceItemParam
type PaymentServiceItemParam struct {
	Id *string `json:"id,omitempty"`
	PaymentServiceItemID *string `json:"paymentServiceItemID,omitempty"`
	Key *ServiceItemParamName `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
	Type *ServiceItemParamType `json:"type,omitempty"`
	Origin *ServiceItemParamOrigin `json:"origin,omitempty"`
	ETag *string `json:"eTag,omitempty"`
}

// NewPaymentServiceItemParam instantiates a new PaymentServiceItemParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceItemParam() *PaymentServiceItemParam {
	this := PaymentServiceItemParam{}
	return &this
}

// NewPaymentServiceItemParamWithDefaults instantiates a new PaymentServiceItemParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceItemParamWithDefaults() *PaymentServiceItemParam {
	this := PaymentServiceItemParam{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentServiceItemParam) SetId(v string) {
	o.Id = &v
}

// GetPaymentServiceItemID returns the PaymentServiceItemID field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetPaymentServiceItemID() string {
	if o == nil || IsNil(o.PaymentServiceItemID) {
		var ret string
		return ret
	}
	return *o.PaymentServiceItemID
}

// GetPaymentServiceItemIDOk returns a tuple with the PaymentServiceItemID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetPaymentServiceItemIDOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentServiceItemID) {
		return nil, false
	}
	return o.PaymentServiceItemID, true
}

// HasPaymentServiceItemID returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasPaymentServiceItemID() bool {
	if o != nil && !IsNil(o.PaymentServiceItemID) {
		return true
	}

	return false
}

// SetPaymentServiceItemID gets a reference to the given string and assigns it to the PaymentServiceItemID field.
func (o *PaymentServiceItemParam) SetPaymentServiceItemID(v string) {
	o.PaymentServiceItemID = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetKey() ServiceItemParamName {
	if o == nil || IsNil(o.Key) {
		var ret ServiceItemParamName
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetKeyOk() (*ServiceItemParamName, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given ServiceItemParamName and assigns it to the Key field.
func (o *PaymentServiceItemParam) SetKey(v ServiceItemParamName) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PaymentServiceItemParam) SetValue(v string) {
	o.Value = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetType() ServiceItemParamType {
	if o == nil || IsNil(o.Type) {
		var ret ServiceItemParamType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetTypeOk() (*ServiceItemParamType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ServiceItemParamType and assigns it to the Type field.
func (o *PaymentServiceItemParam) SetType(v ServiceItemParamType) {
	o.Type = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetOrigin() ServiceItemParamOrigin {
	if o == nil || IsNil(o.Origin) {
		var ret ServiceItemParamOrigin
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetOriginOk() (*ServiceItemParamOrigin, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given ServiceItemParamOrigin and assigns it to the Origin field.
func (o *PaymentServiceItemParam) SetOrigin(v ServiceItemParamOrigin) {
	o.Origin = &v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *PaymentServiceItemParam) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceItemParam) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *PaymentServiceItemParam) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *PaymentServiceItemParam) SetETag(v string) {
	o.ETag = &v
}

func (o PaymentServiceItemParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServiceItemParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PaymentServiceItemID) {
		toSerialize["paymentServiceItemID"] = o.PaymentServiceItemID
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	return toSerialize, nil
}

type NullablePaymentServiceItemParam struct {
	value *PaymentServiceItemParam
	isSet bool
}

func (v NullablePaymentServiceItemParam) Get() *PaymentServiceItemParam {
	return v.value
}

func (v *NullablePaymentServiceItemParam) Set(val *PaymentServiceItemParam) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceItemParam) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceItemParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceItemParam(val *PaymentServiceItemParam) *NullablePaymentServiceItemParam {
	return &NullablePaymentServiceItemParam{value: val, isSet: true}
}

func (v NullablePaymentServiceItemParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceItemParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


