/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MTOServiceItemShuttleV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MTOServiceItemShuttleV2{}

// MTOServiceItemShuttleV2 Describes a shuttle service item.
type MTOServiceItemShuttleV2 struct {
	MTOServiceItemV2
	// A unique code for the service item. Indicates if shuttling is requested for the shipment origin (`DOSHUT`) or destination (`DDSHUT`). 
	ReServiceCode string `json:"reServiceCode"`
	// The contractor's explanation for why a shuttle service is requested. Used by the TOO while deciding to approve or reject the service item. 
	Reason string `json:"reason"`
	// An estimate of how much weight from a shipment will be included in the shuttling service.
	EstimatedWeight NullableInt32 `json:"estimatedWeight,omitempty"`
	// A record of the actual weight that was shuttled. Provided by the movers, based on weight tickets.
	ActualWeight NullableInt32 `json:"actualWeight,omitempty"`
}

type _MTOServiceItemShuttleV2 MTOServiceItemShuttleV2

// NewMTOServiceItemShuttleV2 instantiates a new MTOServiceItemShuttleV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMTOServiceItemShuttleV2(reServiceCode string, reason string, moveTaskOrderID string, modelType MTOServiceItemModelTypeV2V2) *MTOServiceItemShuttleV2 {
	this := MTOServiceItemShuttleV2{}
	this.MoveTaskOrderID = moveTaskOrderID
	this.ModelType = modelType
	this.ReServiceCode = reServiceCode
	this.Reason = reason
	return &this
}

// NewMTOServiceItemShuttleV2WithDefaults instantiates a new MTOServiceItemShuttleV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMTOServiceItemShuttleV2WithDefaults() *MTOServiceItemShuttleV2 {
	this := MTOServiceItemShuttleV2{}
	return &this
}

// GetReServiceCode returns the ReServiceCode field value
func (o *MTOServiceItemShuttleV2) GetReServiceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReServiceCode
}

// GetReServiceCodeOk returns a tuple with the ReServiceCode field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemShuttleV2) GetReServiceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReServiceCode, true
}

// SetReServiceCode sets field value
func (o *MTOServiceItemShuttleV2) SetReServiceCode(v string) {
	o.ReServiceCode = v
}

// GetReason returns the Reason field value
func (o *MTOServiceItemShuttleV2) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *MTOServiceItemShuttleV2) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *MTOServiceItemShuttleV2) SetReason(v string) {
	o.Reason = v
}

// GetEstimatedWeight returns the EstimatedWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemShuttleV2) GetEstimatedWeight() int32 {
	if o == nil || IsNil(o.EstimatedWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.EstimatedWeight.Get()
}

// GetEstimatedWeightOk returns a tuple with the EstimatedWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemShuttleV2) GetEstimatedWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedWeight.Get(), o.EstimatedWeight.IsSet()
}

// HasEstimatedWeight returns a boolean if a field has been set.
func (o *MTOServiceItemShuttleV2) HasEstimatedWeight() bool {
	if o != nil && o.EstimatedWeight.IsSet() {
		return true
	}

	return false
}

// SetEstimatedWeight gets a reference to the given NullableInt32 and assigns it to the EstimatedWeight field.
func (o *MTOServiceItemShuttleV2) SetEstimatedWeight(v int32) {
	o.EstimatedWeight.Set(&v)
}
// SetEstimatedWeightNil sets the value for EstimatedWeight to be an explicit nil
func (o *MTOServiceItemShuttleV2) SetEstimatedWeightNil() {
	o.EstimatedWeight.Set(nil)
}

// UnsetEstimatedWeight ensures that no value is present for EstimatedWeight, not even an explicit nil
func (o *MTOServiceItemShuttleV2) UnsetEstimatedWeight() {
	o.EstimatedWeight.Unset()
}

// GetActualWeight returns the ActualWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTOServiceItemShuttleV2) GetActualWeight() int32 {
	if o == nil || IsNil(o.ActualWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ActualWeight.Get()
}

// GetActualWeightOk returns a tuple with the ActualWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTOServiceItemShuttleV2) GetActualWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualWeight.Get(), o.ActualWeight.IsSet()
}

// HasActualWeight returns a boolean if a field has been set.
func (o *MTOServiceItemShuttleV2) HasActualWeight() bool {
	if o != nil && o.ActualWeight.IsSet() {
		return true
	}

	return false
}

// SetActualWeight gets a reference to the given NullableInt32 and assigns it to the ActualWeight field.
func (o *MTOServiceItemShuttleV2) SetActualWeight(v int32) {
	o.ActualWeight.Set(&v)
}
// SetActualWeightNil sets the value for ActualWeight to be an explicit nil
func (o *MTOServiceItemShuttleV2) SetActualWeightNil() {
	o.ActualWeight.Set(nil)
}

// UnsetActualWeight ensures that no value is present for ActualWeight, not even an explicit nil
func (o *MTOServiceItemShuttleV2) UnsetActualWeight() {
	o.ActualWeight.Unset()
}

func (o MTOServiceItemShuttleV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MTOServiceItemShuttleV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMTOServiceItemV2, errMTOServiceItemV2 := json.Marshal(o.MTOServiceItemV2)
	if errMTOServiceItemV2 != nil {
		return map[string]interface{}{}, errMTOServiceItemV2
	}
	errMTOServiceItemV2 = json.Unmarshal([]byte(serializedMTOServiceItemV2), &toSerialize)
	if errMTOServiceItemV2 != nil {
		return map[string]interface{}{}, errMTOServiceItemV2
	}
	toSerialize["reServiceCode"] = o.ReServiceCode
	toSerialize["reason"] = o.Reason
	if o.EstimatedWeight.IsSet() {
		toSerialize["estimatedWeight"] = o.EstimatedWeight.Get()
	}
	if o.ActualWeight.IsSet() {
		toSerialize["actualWeight"] = o.ActualWeight.Get()
	}
	return toSerialize, nil
}

func (o *MTOServiceItemShuttleV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reServiceCode",
		"reason",
		"moveTaskOrderID",
		"modelType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMTOServiceItemShuttleV2 := _MTOServiceItemShuttleV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMTOServiceItemShuttleV2)

	if err != nil {
		return err
	}

	*o = MTOServiceItemShuttleV2(varMTOServiceItemShuttleV2)

	return err
}

type NullableMTOServiceItemShuttleV2 struct {
	value *MTOServiceItemShuttleV2
	isSet bool
}

func (v NullableMTOServiceItemShuttleV2) Get() *MTOServiceItemShuttleV2 {
	return v.value
}

func (v *NullableMTOServiceItemShuttleV2) Set(val *MTOServiceItemShuttleV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOServiceItemShuttleV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOServiceItemShuttleV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOServiceItemShuttleV2(val *MTOServiceItemShuttleV2) *NullableMTOServiceItemShuttleV2 {
	return &NullableMTOServiceItemShuttleV2{value: val, isSet: true}
}

func (v NullableMTOServiceItemShuttleV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOServiceItemShuttleV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


