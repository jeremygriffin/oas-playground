/*
MilMove Prime V2 API

The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

API version: 0.0.1
Contact: milmove-developers@caci.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MTOAgentTypeV2 The type for this agent. `RELEASING` means they have authority on pickup, `RECEIVING` means they can receive the shipment on delivery. 
type MTOAgentTypeV2 string

// List of MTOAgentType
const (
	RELEASING_AGENT MTOAgentTypeV2 = "RELEASING_AGENT"
	RECEIVING_AGENT MTOAgentTypeV2 = "RECEIVING_AGENT"
)

// All allowed values of MTOAgentTypeV2 enum
var AllowedMTOAgentTypeV2EnumValues = []MTOAgentTypeV2{
	"RELEASING_AGENT",
	"RECEIVING_AGENT",
}

func (v *MTOAgentTypeV2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MTOAgentTypeV2(value)
	for _, existing := range AllowedMTOAgentTypeV2EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MTOAgentTypeV2", value)
}

// NewMTOAgentTypeV2FromValue returns a pointer to a valid MTOAgentTypeV2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMTOAgentTypeV2FromValue(v string) (*MTOAgentTypeV2, error) {
	ev := MTOAgentTypeV2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MTOAgentTypeV2: valid values are %v", v, AllowedMTOAgentTypeV2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MTOAgentTypeV2) IsValid() bool {
	for _, existing := range AllowedMTOAgentTypeV2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MTOAgentType value
func (v MTOAgentTypeV2) Ptr() *MTOAgentTypeV2 {
	return &v
}

type NullableMTOAgentTypeV2 struct {
	value *MTOAgentTypeV2
	isSet bool
}

func (v NullableMTOAgentTypeV2) Get() *MTOAgentTypeV2 {
	return v.value
}

func (v *NullableMTOAgentTypeV2) Set(val *MTOAgentTypeV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMTOAgentTypeV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMTOAgentTypeV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTOAgentTypeV2(val *MTOAgentTypeV2) *NullableMTOAgentTypeV2 {
	return &NullableMTOAgentTypeV2{value: val, isSet: true}
}

func (v NullableMTOAgentTypeV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTOAgentTypeV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

