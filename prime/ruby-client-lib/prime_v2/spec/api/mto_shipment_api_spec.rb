=begin
#MilMove Prime V2 API

#The Prime V2 API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v2/`. 

The version of the OpenAPI document: 0.0.1
Contact: milmove-developers@caci.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MtoShipmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MtoShipmentApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MtoShipmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MtoShipmentApi' do
    it 'should create an instance of MtoShipmentApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MtoShipmentApi)
    end
  end

  # unit tests for create_mto_shipment
  # createMTOShipment
  # Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a need for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must approve it before the contractor can proceed with billing.  **NOTE**: When creating a child shipment diversion, you can no longer specify the &#x60;primeActualWeight&#x60;. If you create a new diverted shipment with the &#x60;diversion&#x60; and &#x60;divertedFromShipmentId&#x60; parameter, it will automatically inherit the primeActualWeight of its &#x60;divertedFromShipmentId&#x60; parent. Payment requests created on a diverted shipment \&quot;chain\&quot; will utilize the lowest weight possible in the chain to prevent overcharging as they are still separate shipments.  **NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress secondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode, destinationPostalCode and secondaryDestinationPostalCode].  **WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to one of their moves. Otherwise, the Prime can fetch the related move using the [getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status &#x60;\&quot;APPROVED\&quot;&#x60;. 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateMTOShipment] :body 
  # @return [MTOShipment]
  describe 'create_mto_shipment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_mto_shipment
  # updateMTOShipment
  # Updates an existing shipment for a move.  Note that there are some restrictions on nested objects:  * Service items: You cannot add or update service items using this endpoint. Please use [createMTOServiceItem](#operation/createMTOServiceItem) and [updateMTOServiceItem](#operation/updateMTOServiceItem) instead. * Agents: You cannot add or update agents using this endpoint. Please use [createMTOAgent](#operation/createMTOAgent) and [updateMTOAgent](#operation/updateMTOAgent) instead. * Addresses: You can add new addresses using this endpoint (and must use this endpoint to do so), but you cannot update existing ones. Please use [updateMTOShipmentAddress](#operation/updateMTOShipmentAddress) instead.  These restrictions are due to our [optimistic locking/concurrency control](https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/use-optimistic-locking) mechanism.  Note that some fields cannot be manually changed but will still be updated automatically, such as &#x60;primeEstimatedWeightRecordedDate&#x60; and &#x60;requiredDeliveryDate&#x60;.  **NOTE**: New version in v3. Version will accept PPM addresses[pickupAddress, destinationAddress, secondaryPickupAddress secondaryDestinationAddress]. PPM postalCodes will be phased out[pickupPostalCode, secondaryPickupPostalCode, destinationPostalCode and secondaryDestinationPostalCode]. 
  # @param mto_shipment_id UUID of the shipment being updated.
  # @param if_match Optimistic locking is implemented via the &#x60;If-Match&#x60; header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a &#x60;412 Precondition Failed&#x60; error. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [MTOShipment]
  describe 'update_mto_shipment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
