=begin
#MilMove Prime API

#The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `/prime/v1/`. 

The version of the OpenAPI document: 0.0.1
Contact: milmove-developers@caci.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class SitAddressUpdateApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # createSITAddressUpdateRequest
    # **Functionality:** Creates an update request for a SIT service item's final delivery address. A newly created update request is assigned the status 'REQUESTED'  if the change in address is > 50 miles and automatically approved otherwise.  **Limitations:** The update can be requested for APPROVED SIT service items only. Only ONE request is allowed per approved SIT service item.  **DEPRECATION ON AUGUST 5TH, 2024** Following deprecation, when updating a service item's final delivery address, you will need to update the shipment's destination address. This will update the destination SIT service items' final delivery address upon approval. For `APPROVED` shipments, you can use [updateShipmentDestinationAddress](#mtoShipment/updateShipmentDestinationAddress) For shipments in any other status, you can use [updateMTOShipmentAddress](#mtoShipment/updateMTOShipmentAddress) 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateSITAddressUpdateRequest] :body 
    # @return [SitAddressUpdate]
    def create_sit_address_update_request(opts = {})
      data, _status_code, _headers = create_sit_address_update_request_with_http_info(opts)
      data
    end

    # createSITAddressUpdateRequest
    # **Functionality:** Creates an update request for a SIT service item&#39;s final delivery address. A newly created update request is assigned the status &#39;REQUESTED&#39;  if the change in address is &gt; 50 miles and automatically approved otherwise.  **Limitations:** The update can be requested for APPROVED SIT service items only. Only ONE request is allowed per approved SIT service item.  **DEPRECATION ON AUGUST 5TH, 2024** Following deprecation, when updating a service item&#39;s final delivery address, you will need to update the shipment&#39;s destination address. This will update the destination SIT service items&#39; final delivery address upon approval. For &#x60;APPROVED&#x60; shipments, you can use [updateShipmentDestinationAddress](#mtoShipment/updateShipmentDestinationAddress) For shipments in any other status, you can use [updateMTOShipmentAddress](#mtoShipment/updateMTOShipmentAddress) 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateSITAddressUpdateRequest] :body 
    # @return [Array<(SitAddressUpdate, Integer, Hash)>] SitAddressUpdate data, response status code and response headers
    def create_sit_address_update_request_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SitAddressUpdateApi.create_sit_address_update_request ...'
      end
      # resource path
      local_var_path = '/sit-address-updates'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'body'])

      # return_type
      return_type = opts[:debug_return_type] || 'SitAddressUpdate'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"SitAddressUpdateApi.create_sit_address_update_request",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SitAddressUpdateApi#create_sit_address_update_request\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
